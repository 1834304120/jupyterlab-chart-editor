{"version":3,"sources":["../../src/lib/find-attrs.js"],"names":["findAttrs","obj","pattern","newAttrs","type","attrs","Array","isArray","i","length","j","test","push","key","hasOwnProperty"],"mappings":";;;;;;;;QAAgBA,S,GAAAA,S;AAAT,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AACtC,MAAIC,iBAAJ;AACA,MAAIC,cAAcH,GAAd,yCAAcA,GAAd,CAAJ;AACA,MAAII,QAAQ,EAAZ;AACA,MAAIC,MAAMC,OAAN,CAAcN,GAAd,CAAJ,EAAwB;AACtB,SAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIP,IAAIQ,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,UAAI,CAACF,MAAMC,OAAN,CAAcN,IAAIO,CAAJ,CAAd,CAAD,IAA0B,QAAOP,IAAIO,CAAJ,CAAP,MAAkB,QAAhD,EAA0D;AACxD,eAAO,IAAP;AACD;AACD,UAAI,CAAC,EAAEL,WAAWH,UAAUC,IAAIO,CAAJ,CAAV,CAAb,CAAL,EAAsC;AACpC,aAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIP,SAASM,MAA7B,EAAqCC,GAArC,EAA0C;AACxC,cAAI,CAACR,OAAD,IAAYA,QAAQS,IAAR,CAAaR,SAASO,CAAT,CAAb,CAAhB,EAA2C;AACzCL,kBAAMO,IAAN,CAAW,MAAMJ,CAAN,GAAU,IAAV,GAAiBL,SAASO,CAAT,CAA5B;AACD;AACF;AACF;AACF;AACF,GAbD,MAaO,IAAIN,SAAS,QAAT,IAAqBA,SAAS,UAAlC,EAA8C;AACnD,SAAK,IAAIS,GAAT,IAAgBZ,GAAhB,EAAqB;AACnB,UAAIA,IAAIa,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AAC3B,YAAI,CAAC,EAAEV,WAAWH,UAAUC,IAAIY,GAAJ,CAAV,CAAb,CAAL,EAAwC;AACtC,eAAK,IAAIH,KAAI,CAAb,EAAgBA,KAAIP,SAASM,MAA7B,EAAqCC,IAArC,EAA0C;AACxC,gBAAI,CAACR,OAAD,IAAYA,QAAQS,IAAR,CAAaR,SAASO,EAAT,CAAb,CAAhB,EAA2C;AACzCL,oBAAMO,IAAN,CACEC,OAAOP,MAAMC,OAAN,CAAcN,IAAIY,GAAJ,CAAd,IAA0B,EAA1B,GAA+B,GAAtC,IAA6CV,SAASO,EAAT,CAD/C;AAGD;AACF;AACF,SARD,MAQO;AACL,cAAI,CAACR,OAAD,IAAYA,QAAQS,IAAR,CAAaE,GAAb,CAAhB,EAAmC;AACjCR,kBAAMO,IAAN,CAAWC,GAAX;AACD;AACF;AACF;AACF;AACF;;AAED,SAAOR,MAAMI,MAAN,GAAeJ,KAAf,GAAuB,IAA9B;AACD","file":"find-attrs.js","sourcesContent":["export function findAttrs(obj, pattern) {\n  let newAttrs;\n  let type = typeof obj;\n  let attrs = [];\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      if (!Array.isArray(obj[i]) && typeof obj[i] !== \"object\") {\n        return null;\n      }\n      if (!!(newAttrs = findAttrs(obj[i]))) {\n        for (let j = 0; j < newAttrs.length; j++) {\n          if (!pattern || pattern.test(newAttrs[j])) {\n            attrs.push(\"[\" + i + \"].\" + newAttrs[j]);\n          }\n        }\n      }\n    }\n  } else if (type === \"object\" || type === \"function\") {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (!!(newAttrs = findAttrs(obj[key]))) {\n          for (let j = 0; j < newAttrs.length; j++) {\n            if (!pattern || pattern.test(newAttrs[j])) {\n              attrs.push(\n                key + (Array.isArray(obj[key]) ? \"\" : \".\") + newAttrs[j]\n              );\n            }\n          }\n        } else {\n          if (!pattern || pattern.test(key)) {\n            attrs.push(key);\n          }\n        }\n      }\n    }\n  }\n\n  return attrs.length ? attrs : null;\n}\n"]}