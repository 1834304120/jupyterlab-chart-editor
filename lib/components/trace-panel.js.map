{"version":3,"sources":["../../src/components/trace-panel.js"],"names":["TracePanel","props","context","data","renderPanel","bind","d","i","children","Array","isArray","map","c","index","contextTypes","array"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,wHACpBD,KADoB;;AAE1B,UAAKE,IAAL,GAAYD,QAAQC,IAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAH0B;AAI3B;;;;gCAEWC,C,EAAGC,C,EAAG;AAChB,UAAIC,WAAWC,MAAMC,OAAN,CAAc,KAAKT,KAAL,CAAWO,QAAzB,IAAqC,KAAKP,KAAL,CAAWO,QAAhD,GAA2D,CAAC,KAAKP,KAAL,CAAWO,QAAZ,CAA1E;;AAEA,aACE;AAAA;AAAA,UAAK,KAAKD,CAAV;AACE;AAAA;AAAA,YAAK,WAAU,uCAAf;AAAA;AACSA;AADT,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,kBAAf;AACGC,mBAASG,GAAT,CAAa;AAAA,mBAAK,yBAAaC,CAAb,EAAgB,EAACC,OAAON,CAAR,EAAhB,CAAL;AAAA,WAAb;AADH;AAJF,OADF;AAUD;;;6BAES;AACR,aACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACG,aAAKJ,IAAL,CAAUQ,GAAV,CAAc,KAAKP,WAAnB;AADH,OADF;AAKD;;;;;;AAGHJ,WAAWc,YAAX,GAA0B;AACxBX,QAAM,oBAAUY;AADQ,CAA1B;;kBAIef,U","file":"trace-panel.js","sourcesContent":["import React, { Component, cloneElement } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass TracePanel extends Component {\n  constructor(props, context) {\n    super(props);\n    this.data = context.data;\n    this.renderPanel = this.renderPanel.bind(this);\n  }\n\n  renderPanel(d, i) {\n    let children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n\n    return (\n      <div key={i}>\n        <div className=\"tracePanel-top tracePanel-top--active\">\n          Trace {i}\n        </div>\n        <div className=\"tracePanel-panel\">\n          {children.map(c => cloneElement(c, {index: i}))}\n        </div>\n      </div>\n    );\n  }\n\n  render () {\n    return (\n      <div className=\"tracePanel\">\n        {this.data.map(this.renderPanel)}\n      </div>\n    );\n  }\n}\n\nTracePanel.contextTypes = {\n  data: PropTypes.array\n};\n\nexport default TracePanel;\n"]}