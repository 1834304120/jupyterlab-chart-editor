{"version":3,"sources":["../../../src/components/widgets/UncontrolledTextInput.js"],"names":["TEST_SELECTOR_CLASS","UncontrolledTextInput","props","handleFocus","bind","handleUpdate","event","onUpdate","target","value","autoSelect","select","immediate","editableClassName","disabled","readOnly","displayValue","wrapperClassName","editableClass","commonProps","type","className","propTypes","func","isRequired","bool","string","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAGO,IAAMA,oDAAsB,cAA5B;;AAEP;;;;;;;;IAOqBC,qB;;;AACjB,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA,kJACTA,KADS;;AAGf,cAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAJe;AAKlB;;;;qCAEYE,K,EAAO;AAChB,iBAAKJ,KAAL,CAAWK,QAAX,CAAoBD,MAAME,MAAN,CAAaC,KAAjC;AACH;;AAED;AACA;;;;oCACYH,K,EAAO;AACf,gBAAI,KAAKJ,KAAL,CAAWQ,UAAf,EAA2B;AACvBJ,sBAAME,MAAN,CAAaG,MAAb;AACH;AACJ;;;iCAEQ;AAAA,yBAID,KAAKT,KAJJ;AAAA,gBAEDK,QAFC,UAEDA,QAFC;AAAA,gBAESK,SAFT,UAESA,SAFT;AAAA,gBAEoBH,KAFpB,UAEoBA,KAFpB;AAAA,gBAE2BI,iBAF3B,UAE2BA,iBAF3B;AAAA,gBAGDC,QAHC,UAGDA,QAHC;AAAA,gBAGSC,QAHT,UAGSA,QAHT;AAAA,gBAGmBL,UAHnB,UAGmBA,UAHnB;;;AAML,gBAAMM,eAAgBP,iCAAD,iCACEA,KADvB;;AAIA;AACA,gBAAMQ,mBAAmB,0BACrB,wBADqB,CAAzB;;AAIA,gBAAMC,gBAAgB,0BAClB,uBADkB,EAElBL,iBAFkB,EAGlBb,mBAHkB,CAAtB;;AAMA,gBAAMmB,cAAc;AAChBC,sBAAM,MADU;AAEhBX,uBAAOO,YAFS;AAGhBK,2BAAWH,aAHK;AAIhBJ,kCAJgB;AAKhBC;AALgB,aAApB;;AAQA,gBAAIH,SAAJ,EAAe;AACX,uBACI;AAAA;AAAA,sBAAK,WAAWK,gBAAhB;AACI;AACI,kCAAU,KAAKZ,YADnB;AAEI,iCAAS,KAAKF;AAFlB,uBAGQgB,WAHR;AADJ,iBADJ;AASH;;AAED,mBACI;AAAA;AAAA,kBAAK,WAAWF,gBAAhB;AACI;AACI,8BAAUV,QADd;AAEI,gCAAYG;AAFhB,mBAGQS,WAHR;AADJ,aADJ;AASH;;;;;;kBAtEgBlB,qB;;;AAyErBA,sBAAsBqB,SAAtB,GAAkC;AAC9Bf,cAAU,iBAAUgB,IAAV,CAAeC,UADK;AAE9BZ,eAAW,iBAAUa,IAAV,CAAeD,UAFI;AAG9Bf,WAAO,iBAAUiB,MAAV,CAAiBF,UAHM;AAI9BX,uBAAmB,iBAAUa,MAJC;AAK9BZ,cAAU,iBAAUW,IALU;AAM9BV,cAAU,iBAAUU,IANU;AAO9Bf,gBAAY,iBAAUe;AAPQ,CAAlC;;AAUAxB,sBAAsB0B,YAAtB,GAAqC;AACjCZ,cAAU,KADuB;AAEjCL,gBAAY;AAFqB,CAArC","file":"UncontrolledTextInput.js","sourcesContent":["import DelayedTextInput from '@workspace/components/widgets/DelayedTextInput';\nimport React, {Component, PropTypes} from 'react';\nimport classnames from 'classnames';\nimport {MIXED_VALUES, MIXED_MODE_VALUE} from '@workspace/constants/workspace';\n\n\nexport const TEST_SELECTOR_CLASS = 'js-TextInput';\n\n/*\n * Input control for text fields without validation\n *\n * Exposes only one event (onUpdate) that fires either\n * on every keystroke (immediate=true) or only on blur/enter\n * (immediate=false)\n */\nexport default class UncontrolledTextInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    handleUpdate(event) {\n        this.props.onUpdate(event.target.value);\n    }\n\n    // recreate the autoSelect behavior of DelayedTextInput for the\n    // immediate, bare <input> case\n    handleFocus(event) {\n        if (this.props.autoSelect) {\n            event.target.select();\n        }\n    }\n\n    render() {\n        const {\n            onUpdate, immediate, value, editableClassName,\n            disabled, readOnly, autoSelect\n        } = this.props;\n\n        const displayValue = (value === MIXED_VALUES) ?\n            MIXED_MODE_VALUE : value;\n\n\n        // TODO: this isn't *really* numeric but that gives decent style\n        const wrapperClassName = classnames(\n            'numeric-input__wrapper'\n        );\n\n        const editableClass = classnames(\n            'numeric-input__number',\n            editableClassName,\n            TEST_SELECTOR_CLASS\n        );\n\n        const commonProps = {\n            type: 'text',\n            value: displayValue,\n            className: editableClass,\n            disabled,\n            readOnly\n        };\n\n        if (immediate) {\n            return (\n                <div className={wrapperClassName}>\n                    <input\n                        onChange={this.handleUpdate}\n                        onFocus={this.handleFocus}\n                        {...commonProps}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className={wrapperClassName}>\n                <DelayedTextInput\n                    onUpdate={onUpdate}\n                    autoSelect={autoSelect}\n                    {...commonProps}\n                />\n            </div>\n        );\n    }\n}\n\nUncontrolledTextInput.propTypes = {\n    onUpdate: PropTypes.func.isRequired,\n    immediate: PropTypes.bool.isRequired,\n    value: PropTypes.string.isRequired,\n    editableClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    autoSelect: PropTypes.bool\n};\n\nUncontrolledTextInput.defaultProps = {\n    readOnly: false,\n    autoSelect: true\n};\n"]}