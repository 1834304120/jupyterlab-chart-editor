{"version":3,"sources":["../../../src/components/widgets/UncontrolledTextInput.js"],"names":["TEST_SELECTOR_CLASS","UncontrolledTextInput","props","handleFocus","bind","handleUpdate","event","onUpdate","target","value","autoSelect","select","immediate","editableClassName","disabled","readOnly","displayValue","wrapperClassName","editableClass","commonProps","type","className","propTypes","func","isRequired","bool","string","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEO,IAAMA,oDAAsB,cAA5B;;AAEP;;;;;;;;IAOqBC,qB;;;AACnB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA,8IACXA,KADW;;AAGjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAJiB;AAKlB;;;;iCAEYE,K,EAAO;AAClB,WAAKJ,KAAL,CAAWK,QAAX,CAAoBD,MAAME,MAAN,CAAaC,KAAjC;AACD;;AAED;AACA;;;;gCACYH,K,EAAO;AACjB,UAAI,KAAKJ,KAAL,CAAWQ,UAAf,EAA2B;AACzBJ,cAAME,MAAN,CAAaG,MAAb;AACD;AACF;;;6BAEQ;AAAA,mBASH,KAAKT,KATF;AAAA,UAELK,QAFK,UAELA,QAFK;AAAA,UAGLK,SAHK,UAGLA,SAHK;AAAA,UAILH,KAJK,UAILA,KAJK;AAAA,UAKLI,iBALK,UAKLA,iBALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLL,UARK,UAQLA,UARK;;;AAWP,UAAMM,eAAeP,kEAA4CA,KAAjE;;AAEA;AACA,UAAMQ,mBAAmB,0BAAW,wBAAX,CAAzB;;AAEA,UAAMC,gBAAgB,0BACpB,uBADoB,EAEpBL,iBAFoB,EAGpBb,mBAHoB,CAAtB;;AAMA,UAAMmB,cAAc;AAClBC,cAAM,MADY;AAElBX,eAAOO,YAFW;AAGlBK,mBAAWH,aAHO;AAIlBJ,0BAJkB;AAKlBC;AALkB,OAApB;;AAQA,UAAIH,SAAJ,EAAe;AACb,eACE;AAAA;AAAA,YAAK,WAAWK,gBAAhB;AACE;AACE,sBAAU,KAAKZ,YADjB;AAEE,qBAAS,KAAKF;AAFhB,aAGMgB,WAHN;AADF,SADF;AASD;;AAED,aACE;AAAA;AAAA,UAAK,WAAWF,gBAAhB;AACE;AACE,oBAAUV,QADZ;AAEE,sBAAYG;AAFd,WAGMS,WAHN;AADF,OADF;AASD;;;;;;kBAvEkBlB,qB;;;AA0ErBA,sBAAsBqB,SAAtB,GAAkC;AAChCf,YAAU,oBAAUgB,IAAV,CAAeC,UADO;AAEhCZ,aAAW,oBAAUa,IAAV,CAAeD,UAFM;AAGhCf,SAAO,oBAAUiB,MAAV,CAAiBF,UAHQ;AAIhCX,qBAAmB,oBAAUa,MAJG;AAKhCZ,YAAU,oBAAUW,IALY;AAMhCV,YAAU,oBAAUU,IANY;AAOhCf,cAAY,oBAAUe;AAPU,CAAlC;;AAUAxB,sBAAsB0B,YAAtB,GAAqC;AACnCZ,YAAU,KADyB;AAEnCL,cAAY;AAFuB,CAArC","file":"UncontrolledTextInput.js","sourcesContent":["import DelayedTextInput from \"./DelayedTextInput\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { MIXED_VALUES, MIXED_MODE_VALUE } from \"@workspace/constants/workspace\";\n\nexport const TEST_SELECTOR_CLASS = \"js-TextInput\";\n\n/*\n * Input control for text fields without validation\n *\n * Exposes only one event (onUpdate) that fires either\n * on every keystroke (immediate=true) or only on blur/enter\n * (immediate=false)\n */\nexport default class UncontrolledTextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleUpdate(event) {\n    this.props.onUpdate(event.target.value);\n  }\n\n  // recreate the autoSelect behavior of DelayedTextInput for the\n  // immediate, bare <input> case\n  handleFocus(event) {\n    if (this.props.autoSelect) {\n      event.target.select();\n    }\n  }\n\n  render() {\n    const {\n      onUpdate,\n      immediate,\n      value,\n      editableClassName,\n      disabled,\n      readOnly,\n      autoSelect,\n    } = this.props;\n\n    const displayValue = value === MIXED_VALUES ? MIXED_MODE_VALUE : value;\n\n    // TODO: this isn't *really* numeric but that gives decent style\n    const wrapperClassName = classnames(\"numeric-input__wrapper\");\n\n    const editableClass = classnames(\n      \"numeric-input__number\",\n      editableClassName,\n      TEST_SELECTOR_CLASS\n    );\n\n    const commonProps = {\n      type: \"text\",\n      value: displayValue,\n      className: editableClass,\n      disabled,\n      readOnly,\n    };\n\n    if (immediate) {\n      return (\n        <div className={wrapperClassName}>\n          <input\n            onChange={this.handleUpdate}\n            onFocus={this.handleFocus}\n            {...commonProps}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className={wrapperClassName}>\n        <DelayedTextInput\n          onUpdate={onUpdate}\n          autoSelect={autoSelect}\n          {...commonProps}\n        />\n      </div>\n    );\n  }\n}\n\nUncontrolledTextInput.propTypes = {\n  onUpdate: PropTypes.func.isRequired,\n  immediate: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  editableClassName: PropTypes.string,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  autoSelect: PropTypes.bool,\n};\n\nUncontrolledTextInput.defaultProps = {\n  readOnly: false,\n  autoSelect: true,\n};\n"]}