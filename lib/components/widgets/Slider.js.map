{"version":3,"sources":["../../../src/components/widgets/Slider.js"],"names":["orientation","vertical","dimension","clientAxis","zeroPoint","horizontal","Slider","props","state","value","handleChange","bind","positionToValue","getPosition","getValue","moveSlider","startSlider","stopSlider","renderFill","getRef","c","_ref","nextProps","setState","onChange","position","sliderSize","positionModifier","Math","round","event","sliderBox","mouseCoordinate","sliderMin","getBoundingClientRect","step","min","max","newValue","newPosition","document","removeEventListener","addEventListener","currentValue","fill","orientationVertical","fillStyles","height","top","width","fillClassName","currentPosition","left","slider__track_horizontal","slider__track_vertical","sliderHandle","propTypes","oneOfType","number","string","func","isRequired","bool","oneOf","defaultProps","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;AAEA;;;;;;AAMA,IAAMA,cAAc;AAClBC,YAAU;AACRC,eAAW,cADH;AAERC,gBAAY,SAFJ;AAGRC,eAAW;AAHH,GADQ;AAMlBC,cAAY;AACVH,eAAW,aADD;AAEVC,gBAAY,SAFF;AAGVC,eAAW;AAHD;AANM,CAApB;;IAaME,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAOF,MAAME,KAAf,EAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,OAAnB;AACA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,OAAhB;AACA,UAAKI,UAAL,GAAkB,MAAKA,UAAL,CAAgBJ,IAAhB,OAAlB;AACA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBL,IAAjB,OAAnB;AACA,UAAKM,UAAL,GAAkB,MAAKA,UAAL,CAAgBN,IAAhB,OAAlB;AACA,UAAKO,UAAL,GAAkB,MAAKA,UAAL,CAAgBP,IAAhB,OAAlB;AACA,UAAKQ,MAAL,GAAc,MAAKA,MAAL,CAAYR,IAAZ,OAAd;AAXiB;AAYlB;;;;2BAEMS,C,EAAG;AACR,WAAKC,IAAL,GAAYD,CAAZ;AACD;;;8CAEyBE,S,EAAW;AACnC;AACA,UAAIA,UAAUb,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACxC,aAAKc,QAAL,CAAc;AACZd,iBAAOa,UAAUb;AADL,SAAd;AAGD;AACF;;;iCAEYA,K,EAAO;AAClB,WAAKc,QAAL,CAAc,EAAEd,YAAF,EAAd;AACA,WAAKF,KAAL,CAAWiB,QAAX,CAAoBf,KAApB;AACD;;;oCAEegB,Q,EAAU;AACxB,UAAMvB,YAAYF,YAAY,KAAKO,KAAL,CAAWP,WAAvB,EAAoCE,SAAtD;AACA,UAAMwB,aAAa,2BAAY,KAAKL,IAAjB,EAAuBnB,SAAvB,CAAnB;AACA,UAAMyB,mBAAmB,MAAMD,UAA/B;;AAEA,aAAOE,KAAKC,KAAL,CAAWJ,WAAWE,gBAAtB,CAAP;AACD;;;gCAEWG,K,EAAO;AACjB,UAAMC,YAAY,2BAAY,KAAKV,IAAjB,CAAlB;AACA,UAAMjB,YAAYJ,YAAY,KAAKO,KAAL,CAAWP,WAAvB,EAAoCI,SAAtD;AACA,UAAM4B,kBACJF,MAAM9B,YAAY,KAAKO,KAAL,CAAWP,WAAvB,EAAoCG,UAA1C,CADF;AAEA,UAAM8B,YAAYF,UAAUG,qBAAV,GAAkC9B,SAAlC,CAAlB;;AAEA,UAAIqB,iBAAJ;AACA,UAAI,KAAKlB,KAAL,CAAWP,WAAX,KAA2B,UAA/B,EAA2C;AACzCyB,mBAAWQ,YAAYD,eAAvB;AACD,OAFD,MAEO;AACLP,mBAAWO,kBAAkBC,SAA7B;AACD;;AAED,aAAOR,QAAP;AACD;;;6BAEQA,Q,EAAU;AAAA,mBACU,KAAKlB,KADf;AAAA,UACT4B,IADS,UACTA,IADS;AAAA,UACHC,GADG,UACHA,GADG;AAAA,UACEC,GADF,UACEA,GADF;;AAEjB,UAAIC,WAAW,KAAK1B,eAAL,CAAqBa,QAArB,CAAf;AACAa,iBAAW,qBAAQA,QAAR,EAAkBH,IAAlB,CAAX;AACAG,iBAAW,8BAAiBA,QAAjB,EAA2BF,GAA3B,EAAgCC,GAAhC,CAAX;;AAEA,aAAOC,QAAP;AACD;;;+BAEUR,K,EAAO;AAChB,UAAMS,cAAc,KAAK1B,WAAL,CAAiBiB,KAAjB,CAApB;AACA,UAAMQ,WAAW,KAAKxB,QAAL,CAAcyB,WAAd,CAAjB;AACA,WAAK7B,YAAL,CAAkB4B,QAAlB;AACD;;;iCAEY;AACXE,eAASC,mBAAT,CAA6B,WAA7B,EAA0C,KAAK1B,UAA/C;AACAyB,eAASC,mBAAT,CAA6B,SAA7B,EAAwC,KAAKxB,UAA7C;AACD;;;kCAEa;AACZuB,eAASE,gBAAT,CAA0B,WAA1B,EAAuC,KAAK3B,UAA5C;AACAyB,eAASE,gBAAT,CAA0B,SAA1B,EAAqC,KAAKzB,UAA1C;AACD;;;iCAEY;AACX,UAAM0B,eAAe,KAAKnC,KAAL,CAAWC,KAAhC;AACA,UAAI,KAAKF,KAAL,CAAWqC,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,YAAMC,sBAAsB,KAAKtC,KAAL,CAAWP,WAAX,KAA2B,UAAvD;;AAEA,YAAI8C,mBAAJ;AACA,YAAID,mBAAJ,EAAyB;AACvBC,uBAAa;AACXC,oBAAQJ,eAAe,GADZ;AAEXK,iBAAK,MAAML,YAAN,GAAqB;AAFf,WAAb;AAID,SALD,MAKO;AACLG,uBAAa;AACXG,mBAAON,eAAe;AADX,WAAb;AAGD;;AAED,YAAMO,gBAAgB,0BAAW,cAAX,EAA2B;AAC/C,sCAA4B,CAACL,mBADkB;AAE/C,oCAA0BA;AAFqB,SAA3B,CAAtB;;AAKA,eAAO,uCAAK,OAAOC,UAAZ,EAAwB,WAAWI,aAAnC,GAAP;AACD;;AAED,aAAO,IAAP;AACD;;;6BAEQ;AACP,UAAML,sBAAsB,KAAKtC,KAAL,CAAWP,WAAX,KAA2B,UAAvD;AACA,UAAM2C,eAAe,KAAKnC,KAAL,CAAWC,KAAhC;;AAEA,UAAI0C,wBAAJ;;AAEA,UAAIN,mBAAJ,EAAyB;AACvBM,0BAAkB;AAChBH,eAAK,MAAML,YAAN,GAAqB;AADV,SAAlB;AAGD,OAJD,MAIO;AACLQ,0BAAkB;AAChBC,gBAAMT,eAAe;AADL,SAAlB;AAGD;;AAED,UAAMZ,YAAY,0BAAW,eAAX,EAA4B;AAC5CsB,kCAA0B,CAACR,mBADiB;AAE5CS,gCAAwBT;AAFoB,OAA5B,CAAlB;;AAKA,UAAMU,eAAe,0BAAW,gBAAX,EAA6B;AAChD,sCAA8B,CAACV,mBADiB;AAEhD,oCAA4BA;AAFoB,OAA7B,CAArB;;AAKA,aACE;AAAA;AAAA;AACE,qBAAWd,SADb;AAEE,eAAK,KAAKZ,MAFZ;AAGE,uBAAa,KAAKJ;AAHpB;AAKG,aAAKG,UAAL,EALH;AAME;AACE,qBAAWqC,YADb;AAEE,iBAAOJ,eAFT;AAGE,uBAAa,KAAKnC,WAHpB;AAIE,qBAAW,KAAKC;AAJlB;AANF,OADF;AAeD;;;;;;AAGHX,OAAOkD,SAAP,GAAmB;AACjB/C,SAAO,oBAAUgD,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB,CADU;AAEjBnC,YAAU,oBAAUoC,IAAV,CAAeC,UAFR;AAGjBzB,OAAK,oBAAUsB,MAHE;AAIjBrB,OAAK,oBAAUqB,MAJE;AAKjBvB,QAAM,oBAAUuB,MALC;AAMjBd,QAAM,oBAAUkB,IANC;AAOjB9D,eAAa,oBAAU+D,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB;AAPI,CAAnB;;AAUAzD,OAAO0D,YAAP,GAAsB;AACpBvD,SAAO,EADa;AAEpB2B,OAAK,CAFe;AAGpBC,OAAK,GAHe;AAIpBF,QAAM,CAJc;AAKpBnC,eAAa,YALO;AAMpB4C,QAAM;AANc,CAAtB;;AASAqB,OAAOC,OAAP,GAAiB5D,MAAjB","file":"Slider.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { findDOMNode } from \"react-dom\";\nimport classnames from \"classnames\";\nimport { keepWithinMaxMin, getStep } from \"@workspace/utils/number\";\n\n/**\n * Basic slider\n * Accepts min, max, step and orientation parameters\n * Integer values\n */\n\nconst orientation = {\n  vertical: {\n    dimension: \"clientHeight\",\n    clientAxis: \"clientY\",\n    zeroPoint: \"bottom\",\n  },\n  horizontal: {\n    dimension: \"clientWidth\",\n    clientAxis: \"clientX\",\n    zeroPoint: \"left\",\n  },\n};\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value };\n    this.handleChange = this.handleChange.bind(this);\n    this.positionToValue = this.positionToValue.bind(this);\n    this.getPosition = this.getPosition.bind(this);\n    this.getValue = this.getValue.bind(this);\n    this.moveSlider = this.moveSlider.bind(this);\n    this.startSlider = this.startSlider.bind(this);\n    this.stopSlider = this.stopSlider.bind(this);\n    this.renderFill = this.renderFill.bind(this);\n    this.getRef = this.getRef.bind(this);\n  }\n\n  getRef(c) {\n    this._ref = c;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Updates the value to the graph's actual value\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  handleChange(value) {\n    this.setState({ value });\n    this.props.onChange(value);\n  }\n\n  positionToValue(position) {\n    const dimension = orientation[this.props.orientation].dimension;\n    const sliderSize = findDOMNode(this._ref)[dimension];\n    const positionModifier = 100 / sliderSize;\n\n    return Math.round(position * positionModifier);\n  }\n\n  getPosition(event) {\n    const sliderBox = findDOMNode(this._ref);\n    const zeroPoint = orientation[this.props.orientation].zeroPoint;\n    const mouseCoordinate =\n      event[orientation[this.props.orientation].clientAxis];\n    const sliderMin = sliderBox.getBoundingClientRect()[zeroPoint];\n\n    let position;\n    if (this.props.orientation === \"vertical\") {\n      position = sliderMin - mouseCoordinate;\n    } else {\n      position = mouseCoordinate - sliderMin;\n    }\n\n    return position;\n  }\n\n  getValue(position) {\n    const { step, min, max } = this.props;\n    let newValue = this.positionToValue(position);\n    newValue = getStep(newValue, step);\n    newValue = keepWithinMaxMin(newValue, min, max);\n\n    return newValue;\n  }\n\n  moveSlider(event) {\n    const newPosition = this.getPosition(event);\n    const newValue = this.getValue(newPosition);\n    this.handleChange(newValue);\n  }\n\n  stopSlider() {\n    document.removeEventListener(\"mousemove\", this.moveSlider);\n    document.removeEventListener(\"mouseup\", this.stopSlider);\n  }\n\n  startSlider() {\n    document.addEventListener(\"mousemove\", this.moveSlider);\n    document.addEventListener(\"mouseup\", this.stopSlider);\n  }\n\n  renderFill() {\n    const currentValue = this.state.value;\n    if (this.props.fill === true) {\n      const orientationVertical = this.props.orientation === \"vertical\";\n\n      let fillStyles;\n      if (orientationVertical) {\n        fillStyles = {\n          height: currentValue + \"%\",\n          top: 100 - currentValue + \"%\",\n        };\n      } else {\n        fillStyles = {\n          width: currentValue + \"%\",\n        };\n      }\n\n      const fillClassName = classnames(\"slider__fill\", {\n        \"slider__fill--horizontal\": !orientationVertical,\n        \"slider__fill--vertical\": orientationVertical,\n      });\n\n      return <div style={fillStyles} className={fillClassName} />;\n    }\n\n    return null;\n  }\n\n  render() {\n    const orientationVertical = this.props.orientation === \"vertical\";\n    const currentValue = this.state.value;\n\n    let currentPosition;\n\n    if (orientationVertical) {\n      currentPosition = {\n        top: 100 - currentValue + \"%\",\n      };\n    } else {\n      currentPosition = {\n        left: currentValue + \"%\",\n      };\n    }\n\n    const sliderBox = classnames(\"slider__track\", {\n      slider__track_horizontal: !orientationVertical,\n      slider__track_vertical: orientationVertical,\n    });\n\n    const sliderHandle = classnames(\"slider__handle\", {\n      \"slider__handle--horizontal\": !orientationVertical,\n      \"slider__handle--vertical\": orientationVertical,\n    });\n\n    return (\n      <div\n        className={sliderBox}\n        ref={this.getRef}\n        onMouseDown={this.moveSlider}\n      >\n        {this.renderFill()}\n        <div\n          className={sliderHandle}\n          style={currentPosition}\n          onMouseDown={this.startSlider}\n          onMouseUp={this.stopSlider}\n        />\n      </div>\n    );\n  }\n}\n\nSlider.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  fill: PropTypes.bool,\n  orientation: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\n};\n\nSlider.defaultProps = {\n  value: 50,\n  min: 0,\n  max: 100,\n  step: 1,\n  orientation: \"horizontal\",\n  fill: true,\n};\n\nmodule.exports = Slider;\n"]}