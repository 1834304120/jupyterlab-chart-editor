{"version":3,"sources":["../../../src/components/widgets/TabPanel.js"],"names":["TabGroup","tabs","props","map","tab","isSelected","key","selectedTab","tabClass","tabClassName","selectedTabClassName","onTabChange","label","className","propTypes","arrayOf","shape","string","isRequired","func","TabContentPanel","ContentComponent","components","objectOf","oneOfType","element","TabPanel","length","Error","tabPanelClassName","tabGroupClassName","tabGroupTabClassName","tabGroupSelectedTabClassName","tabContentPanelClassName","nextTab","onChange","placeholder","value"],"mappings":"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","file":"TabPanel.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\n\n/*\n * A `TabGroup` renders a list of clickable tab buttons.\n */\nconst TabGroup = props => {\n    const tabs = props.tabs.map((tab) => {\n        const isSelected = tab.key === props.selectedTab;\n        const tabClass = classnames(\n            props.tabClassName,\n            {[props.selectedTabClassName]: isSelected}\n        );\n\n        return (\n            <li key={tab.key}\n                className={tabClass}\n                onClick={() => props.onTabChange(tab.key)}\n                data-role=\"button\"\n                data-pressed={isSelected}\n            >\n                {tab.label}\n            </li>\n        );\n    });\n\n    return (\n        <ul className={props.className}>\n            {tabs}\n        </ul>\n    );\n};\nTabGroup.propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        label: PropTypes.string\n    })).isRequired,\n    selectedTab: PropTypes.string,\n    onTabChange: PropTypes.func\n};\n\n/*\n * A `TabContentPanel` renders the content for the currently\n * selected tab.\n */\nconst TabContentPanel = props => {\n    const ContentComponent = props.components[props.selectedTab];\n\n    return (\n        <div className={props.className}>\n            {ContentComponent}\n        </div>\n    );\n};\nTabContentPanel.propTypes = {\n    selectedTab: PropTypes.string.isRequired,\n    components: PropTypes.objectOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.func\n    ])).isRequired\n};\n\n/*\n * A `TabPanel` renders a tab interface with tab buttons\n * and a content panel.\n */\nconst TabPanel = props => {\n    if (!props.tabs.length) {\n        throw new Error('Must provide at least one object ' +\n                        'in TabPanel `tabs` prop');\n    }\n    const selectedTab = props.selectedTab || props.tabs[0].key;\n\n    const tabPanelClassName = props.tabPanelClassName || 'tab-panel';\n    const tabGroupClassName = props.tabGroupClassName || 'tab-panel__tabs';\n    const tabGroupTabClassName = props.tabGroupTabClassName || 'tab-panel__tab';\n    const tabGroupSelectedTabClassName = props.tabGroupSelectedTabClassName || 'tab-panel__tab--selected';\n    const tabContentPanelClassName = props.tabContentPanelClassName || 'tab-panel__content';\n\n    return (\n        <div className={tabPanelClassName}>\n            <TabGroup\n                className={tabGroupClassName}\n                tabClassName={tabGroupTabClassName}\n                selectedTabClassName={tabGroupSelectedTabClassName}\n                onTabChange={(nextTab) => {\n                    if (nextTab !== selectedTab) {\n                        props.onTabChange(selectedTab, nextTab);\n                    }\n                }}\n                selectedTab={selectedTab}\n                tabs={props.tabs}\n            />\n            <TabContentPanel\n                components={props.components}\n                onChange={props.onChange}\n                placeholder={props.placeholder}\n                selectedTab={selectedTab}\n                value={props.value}\n                className={tabContentPanelClassName}\n            />\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    components: PropTypes.objectOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.func\n    ])).isRequired,\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        label: PropTypes.string\n    })).isRequired,\n    onTabChange: PropTypes.func.isRequired,\n    selectedTab: PropTypes.string,\n    tabPanelClassName: PropTypes.string,\n    tabGroupClassName: PropTypes.string,\n    tabGroupTabClassName: PropTypes.string,\n    tabGroupSelectedTabClassName: PropTypes.string\n};\n\nexport default TabPanel;\n"]}