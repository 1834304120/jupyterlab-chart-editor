{"version":3,"sources":["../../../src/components/widgets/TabPanel.js"],"names":["TabGroup","tabs","props","map","isSelected","tab","key","selectedTab","tabClass","tabClassName","selectedTabClassName","onTabChange","label","className","propTypes","arrayOf","shape","string","isRequired","func","TabContentPanel","ContentComponent","components","objectOf","oneOfType","element","TabPanel","length","Error","tabPanelClassName","tabGroupClassName","tabGroupTabClassName","tabGroupSelectedTabClassName","tabContentPanelClassName","nextTab","onChange","placeholder","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;AAGA,IAAMA,WAAW,SAAXA,QAAW,QAAS;AACxB,MAAMC,OAAOC,MAAMD,IAAN,CAAWE,GAAX,CAAe,eAAO;AACjC,QAAMC,aAAaC,IAAIC,GAAJ,KAAYJ,MAAMK,WAArC;AACA,QAAMC,WAAW,0BAAWN,MAAMO,YAAjB,sBACdP,MAAMQ,oBADQ,EACeN,UADf,EAAjB;;AAIA,WACE;AAAA;AAAA;AACE,aAAKC,IAAIC,GADX;AAEE,mBAAWE,QAFb;AAGE,iBAAS;AAAA,iBAAMN,MAAMS,WAAN,CAAkBN,IAAIC,GAAtB,CAAN;AAAA,SAHX;AAIE,qBAAU,QAJZ;AAKE,wBAAcF;AALhB;AAOGC,UAAIO;AAPP,KADF;AAWD,GAjBY,CAAb;;AAmBA,SAAO;AAAA;AAAA,MAAI,WAAWV,MAAMW,SAArB;AAAiCZ;AAAjC,GAAP;AACD,CArBD;AAsBAD,SAASc,SAAT,GAAqB;AACnBb,QAAM,oBAAUc,OAAV,CACJ,oBAAUC,KAAV,CAAgB;AACdV,SAAK,oBAAUW,MAAV,CAAiBC,UADR;AAEdN,WAAO,oBAAUK;AAFH,GAAhB,CADI,EAKJC,UANiB;AAOnBX,eAAa,oBAAUU,MAPJ;AAQnBN,eAAa,oBAAUQ;AARJ,CAArB;;AAWA;;;;AAIA,IAAMC,kBAAkB,SAAlBA,eAAkB,QAAS;AAC/B,MAAMC,mBAAmBnB,MAAMoB,UAAN,CAAiBpB,MAAMK,WAAvB,CAAzB;;AAEA,SAAO;AAAA;AAAA,MAAK,WAAWL,MAAMW,SAAtB;AAAkCQ;AAAlC,GAAP;AACD,CAJD;AAKAD,gBAAgBN,SAAhB,GAA4B;AAC1BP,eAAa,oBAAUU,MAAV,CAAiBC,UADJ;AAE1BI,cAAY,oBAAUC,QAAV,CACV,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,OAAX,EAAoB,oBAAUN,IAA9B,CAApB,CADU,EAEVD;AAJwB,CAA5B;;AAOA;;;;AAIA,IAAMQ,WAAW,SAAXA,QAAW,QAAS;AACxB,MAAI,CAACxB,MAAMD,IAAN,CAAW0B,MAAhB,EAAwB;AACtB,UAAM,IAAIC,KAAJ,CACJ,sCAAsC,yBADlC,CAAN;AAGD;AACD,MAAMrB,cAAcL,MAAMK,WAAN,IAAqBL,MAAMD,IAAN,CAAW,CAAX,EAAcK,GAAvD;;AAEA,MAAMuB,oBAAoB3B,MAAM2B,iBAAN,IAA2B,WAArD;AACA,MAAMC,oBAAoB5B,MAAM4B,iBAAN,IAA2B,iBAArD;AACA,MAAMC,uBAAuB7B,MAAM6B,oBAAN,IAA8B,gBAA3D;AACA,MAAMC,+BACJ9B,MAAM8B,4BAAN,IAAsC,0BADxC;AAEA,MAAMC,2BACJ/B,MAAM+B,wBAAN,IAAkC,oBADpC;;AAGA,SACE;AAAA;AAAA,MAAK,WAAWJ,iBAAhB;AACE,kCAAC,QAAD;AACE,iBAAWC,iBADb;AAEE,oBAAcC,oBAFhB;AAGE,4BAAsBC,4BAHxB;AAIE,mBAAa,8BAAW;AACtB,YAAIE,YAAY3B,WAAhB,EAA6B;AAC3BL,gBAAMS,WAAN,CAAkBJ,WAAlB,EAA+B2B,OAA/B;AACD;AACF,OARH;AASE,mBAAa3B,WATf;AAUE,YAAML,MAAMD;AAVd,MADF;AAaE,kCAAC,eAAD;AACE,kBAAYC,MAAMoB,UADpB;AAEE,gBAAUpB,MAAMiC,QAFlB;AAGE,mBAAajC,MAAMkC,WAHrB;AAIE,mBAAa7B,WAJf;AAKE,aAAOL,MAAMmC,KALf;AAME,iBAAWJ;AANb;AAbF,GADF;AAwBD,CAxCD;;AA0CAP,SAASZ,SAAT,GAAqB;AACnBQ,cAAY,oBAAUC,QAAV,CACV,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,OAAX,EAAoB,oBAAUN,IAA9B,CAApB,CADU,EAEVD,UAHiB;AAInBjB,QAAM,oBAAUc,OAAV,CACJ,oBAAUC,KAAV,CAAgB;AACdV,SAAK,oBAAUW,MAAV,CAAiBC,UADR;AAEdN,WAAO,oBAAUK;AAFH,GAAhB,CADI,EAKJC,UATiB;AAUnBP,eAAa,oBAAUQ,IAAV,CAAeD,UAVT;AAWnBX,eAAa,oBAAUU,MAXJ;AAYnBY,qBAAmB,oBAAUZ,MAZV;AAanBa,qBAAmB,oBAAUb,MAbV;AAcnBc,wBAAsB,oBAAUd,MAdb;AAenBe,gCAA8B,oBAAUf;AAfrB,CAArB;;kBAkBeS,Q","file":"TabPanel.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n/*\n * A `TabGroup` renders a list of clickable tab buttons.\n */\nconst TabGroup = props => {\n  const tabs = props.tabs.map(tab => {\n    const isSelected = tab.key === props.selectedTab;\n    const tabClass = classnames(props.tabClassName, {\n      [props.selectedTabClassName]: isSelected,\n    });\n\n    return (\n      <li\n        key={tab.key}\n        className={tabClass}\n        onClick={() => props.onTabChange(tab.key)}\n        data-role=\"button\"\n        data-pressed={isSelected}\n      >\n        {tab.label}\n      </li>\n    );\n  });\n\n  return <ul className={props.className}>{tabs}</ul>;\n};\nTabGroup.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      label: PropTypes.string,\n    })\n  ).isRequired,\n  selectedTab: PropTypes.string,\n  onTabChange: PropTypes.func,\n};\n\n/*\n * A `TabContentPanel` renders the content for the currently\n * selected tab.\n */\nconst TabContentPanel = props => {\n  const ContentComponent = props.components[props.selectedTab];\n\n  return <div className={props.className}>{ContentComponent}</div>;\n};\nTabContentPanel.propTypes = {\n  selectedTab: PropTypes.string.isRequired,\n  components: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n  ).isRequired,\n};\n\n/*\n * A `TabPanel` renders a tab interface with tab buttons\n * and a content panel.\n */\nconst TabPanel = props => {\n  if (!props.tabs.length) {\n    throw new Error(\n      \"Must provide at least one object \" + \"in TabPanel `tabs` prop\"\n    );\n  }\n  const selectedTab = props.selectedTab || props.tabs[0].key;\n\n  const tabPanelClassName = props.tabPanelClassName || \"tab-panel\";\n  const tabGroupClassName = props.tabGroupClassName || \"tab-panel__tabs\";\n  const tabGroupTabClassName = props.tabGroupTabClassName || \"tab-panel__tab\";\n  const tabGroupSelectedTabClassName =\n    props.tabGroupSelectedTabClassName || \"tab-panel__tab--selected\";\n  const tabContentPanelClassName =\n    props.tabContentPanelClassName || \"tab-panel__content\";\n\n  return (\n    <div className={tabPanelClassName}>\n      <TabGroup\n        className={tabGroupClassName}\n        tabClassName={tabGroupTabClassName}\n        selectedTabClassName={tabGroupSelectedTabClassName}\n        onTabChange={nextTab => {\n          if (nextTab !== selectedTab) {\n            props.onTabChange(selectedTab, nextTab);\n          }\n        }}\n        selectedTab={selectedTab}\n        tabs={props.tabs}\n      />\n      <TabContentPanel\n        components={props.components}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        selectedTab={selectedTab}\n        value={props.value}\n        className={tabContentPanelClassName}\n      />\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  components: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n  ).isRequired,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      label: PropTypes.string,\n    })\n  ).isRequired,\n  onTabChange: PropTypes.func.isRequired,\n  selectedTab: PropTypes.string,\n  tabPanelClassName: PropTypes.string,\n  tabGroupClassName: PropTypes.string,\n  tabGroupTabClassName: PropTypes.string,\n  tabGroupSelectedTabClassName: PropTypes.string,\n};\n\nexport default TabPanel;\n"]}