{"version":3,"sources":["../../../src/components/widgets/CheckboxGroup.js"],"names":["CheckboxGroup","props","state","options","handleChange","bind","nextProps","setState","i","newOptions","slice","Object","assign","checked","onChange","map","option","checkClass","itemClass","orientation","label","boxClass","className","checkbox__group_horizontal","renderOptions","propTypes","arrayOf","shape","string","isRequired","value","bool","func","defaultProps","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,a;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,SAAS,MAAKF,KAAL,CAAWE,OAAtB,EAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAHiB;AAIlB;;;;8CAEyBC,S,EAAW;AACnC,WAAKC,QAAL,CAAc,EAAEJ,SAASG,UAAUH,OAArB,EAAd;AACD;;;iCAEYK,C,EAAG;AACd,UAAIC,aAAa,KAAKR,KAAL,CAAWE,OAAX,CAAmBO,KAAnB,EAAjB;AACAD,iBAAWD,CAAX,IAAgBG,OAAOC,MAAP,CAAcH,WAAWD,CAAX,CAAd,EAA6B;AAC3CK,iBAAS,CAACJ,WAAWD,CAAX,EAAcK;AADmB,OAA7B,CAAhB;AAGA,WAAKZ,KAAL,CAAWa,QAAX,CAAoBL,UAApB;AACD;;;oCAEe;AAAA;;AACd,aAAO,KAAKP,KAAL,CAAWC,OAAX,CAAmBY,GAAnB,CAAuB,UAACC,MAAD,EAASR,CAAT,EAAe;AAC3C,YAAMS,aAAa,0BAAW,CAAC,iBAAD,EAAoB,MAApB,CAAX,EAAwC;AACzD,6BAAmBD,OAAOH;AAD+B,SAAxC,CAAnB;;AAIA,YAAMK,YAAY,0BAAW,gBAAX,EAA6B;AAC7C,sCAA4B,OAAKjB,KAAL,CAAWkB,WAAX,KAA2B,UADV;AAE7C,wCAA8B,OAAKlB,KAAL,CAAWkB,WAAX,KAA2B;AAFZ,SAA7B,CAAlB;;AAKA,eACE;AAAA;AAAA,YAAK,KAAKX,CAAV,EAAa,WAAWU,SAAxB;AACE;AAAA;AAAA,cAAK,WAAU,eAAf,EAA+B,SAAS;AAAA,uBAAM,OAAKd,YAAL,CAAkBI,CAAlB,CAAN;AAAA,eAAxC;AACGQ,mBAAOH,OAAP,IAAkB,qCAAG,WAAWI,UAAd;AADrB,WADF;AAIE;AAAA;AAAA,cAAK,WAAU,iBAAf;AAAkCD,mBAAOI;AAAzC;AAJF,SADF;AAQD,OAlBM,CAAP;AAmBD;;;6BAEQ;AACP,UAAMC,WAAW,0BAAW,iBAAX,EAA8B,KAAKpB,KAAL,CAAWqB,SAAzC,EAAoD;AACnEC,oCAA4B,KAAKtB,KAAL,CAAWkB,WAAX,KAA2B;AADY,OAApD,CAAjB;;AAIA,aAAO;AAAA;AAAA,UAAK,WAAWE,QAAhB;AAA2B,aAAKG,aAAL;AAA3B,OAAP;AACD;;;;;;AAGHxB,cAAcyB,SAAd,GAA0B;AACxBtB,WAAS,oBAAUuB,OAAV,CACP,oBAAUC,KAAV,CAAgB;AACdP,WAAO,oBAAUQ,MAAV,CAAiBC,UADV;AAEdC,WAAO,oBAAUF,MAAV,CAAiBC,UAFV;AAGdhB,aAAS,oBAAUkB,IAAV,CAAeF;AAHV,GAAhB,CADO,EAMPA,UAPsB;AAQxBf,YAAU,oBAAUkB,IARI;AASxBV,aAAW,oBAAUM,MATG;AAUxBT,eAAa,oBAAUS;AAVC,CAA1B;;AAaA5B,cAAciC,YAAd,GAA6B;AAC3BX,aAAW;AADgB,CAA7B;;AAIAY,OAAOC,OAAP,GAAiBnC,aAAjB","file":"CheckboxGroup.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass CheckboxGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { options: this.props.options };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ options: nextProps.options });\n  }\n\n  handleChange(i) {\n    var newOptions = this.props.options.slice();\n    newOptions[i] = Object.assign(newOptions[i], {\n      checked: !newOptions[i].checked,\n    });\n    this.props.onChange(newOptions);\n  }\n\n  renderOptions() {\n    return this.state.options.map((option, i) => {\n      const checkClass = classnames([\"checkbox__check\", \"icon\"], {\n        \"icon-check-mark\": option.checked,\n      });\n\n      const itemClass = classnames(\"checkbox__item\", {\n        \"checkbox__item--vertical\": this.props.orientation === \"vertical\",\n        \"checkbox__item--horizontal\": this.props.orientation === \"horizontal\",\n      });\n\n      return (\n        <div key={i} className={itemClass}>\n          <div className=\"checkbox__box\" onClick={() => this.handleChange(i)}>\n            {option.checked && <i className={checkClass} />}\n          </div>\n          <div className=\"checkbox__label\">{option.label}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const boxClass = classnames(\"checkbox__group\", this.props.className, {\n      checkbox__group_horizontal: this.props.orientation === \"horizontal\",\n    });\n\n    return <div className={boxClass}>{this.renderOptions()}</div>;\n  }\n}\n\nCheckboxGroup.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      checked: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  orientation: PropTypes.string,\n};\n\nCheckboxGroup.defaultProps = {\n  className: \"\",\n};\n\nmodule.exports = CheckboxGroup;\n"]}