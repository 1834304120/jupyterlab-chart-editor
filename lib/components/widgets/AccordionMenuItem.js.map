{"version":3,"sources":["../../../src/components/widgets/AccordionMenuItem.js"],"names":["AccordionMenuItem","props","handleRemoveMenu","bind","renderMenuContent","event","removeMenuHandler","id","stopPropagation","isOpen","children","accordionMenuModifier","subMenuDisplay","display","titleColor","onToggle","iconClass","title","isRemovable","subMenuOpen","iconDirection","topIcon","titleClass","closeClass","closeIcon","titleStyling","color","propTypes","element","isRequired","string","bool","func","module","exports"],"mappings":"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","file":"AccordionMenuItem.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AccordionMenuItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRemoveMenu = this.handleRemoveMenu.bind(this);\n    this.renderMenuContent = this.renderMenuContent.bind(this);\n  }\n\n  handleRemoveMenu(event) {\n    const { removeMenuHandler, id } = this.props;\n\n    event.stopPropagation();\n\n    if (typeof removeMenuHandler === \"function\") {\n      removeMenuHandler(id);\n    }\n  }\n\n  renderMenuContent() {\n    const { isOpen, children, id, accordionMenuModifier } = this.props;\n\n    const subMenuDisplay = classnames(\n      \"accordion-item__content\",\n      `js-accordion-menu-content-${id}`,\n      accordionMenuModifier\n    );\n\n    if (!isOpen) {\n      return (\n        <div className={subMenuDisplay} style={{ display: \"none\" }}>\n          {children}\n        </div>\n      );\n    }\n\n    return <div className={subMenuDisplay}>{children}</div>;\n  }\n\n  render() {\n    const {\n      isOpen,\n      removeMenuHandler,\n      titleColor,\n      onToggle,\n      iconClass,\n      title,\n      isRemovable,\n    } = this.props;\n\n    const subMenuOpen = classnames(\n      [\"accordion-item__top\", \"js-test-menu-item-click\"],\n      {\n        \"accordion-item__top--active\": isOpen,\n      }\n    );\n\n    const iconDirection = classnames(\"accordion-item__top__arrow\", {\n      \"+rotate-90 \": !isOpen,\n    });\n\n    const topIcon = classnames(\"accordion-item__top__icon\", {\n      \"accordion-item__top__icon_active\": isOpen,\n    });\n\n    const titleClass = classnames(\n      \"js-test-title\",\n      \"accordion-item__top__title\",\n      {\n        \"accordion-item__top__title_active\": isOpen,\n      }\n    );\n\n    const closeClass = classnames(\n      \"icon-close-thin\",\n      \"accordion-item__top__close\",\n      \"js-accordion-menu-item-close\"\n    );\n\n    let closeIcon = null;\n    if (isRemovable && typeof removeMenuHandler === \"function\") {\n      closeIcon = <i className={closeClass} onClick={this.handleRemoveMenu} />;\n    }\n\n    const titleStyling = { color: titleColor || \"\" };\n\n    return (\n      <div className=\"accordion-item js-accordion-layer\">\n        <div ref=\"toggle\" className={subMenuOpen} onClick={onToggle}>\n          <span className=\"+float-left\">\n            <div className={iconDirection}>\n              <i className=\"icon-angle-down\" />\n            </div>\n\n            {iconClass ? (\n              <div className={topIcon}>\n                <i className={iconClass} style={titleStyling} />\n              </div>\n            ) : null}\n\n            <div ref=\"title\" className={titleClass}>\n              {title}\n            </div>\n          </span>\n          {closeIcon}\n        </div>\n        {this.renderMenuContent()}\n      </div>\n    );\n  }\n}\n\nAccordionMenuItem.propTypes = {\n  children: PropTypes.element.isRequired,\n  iconClass: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  onToggle: PropTypes.func,\n  removeMenuHandler: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  titleColor: PropTypes.string,\n  accordionMenuModifier: PropTypes.string,\n  isRemovable: PropTypes.bool,\n};\n\nmodule.exports = AccordionMenuItem;\n"]}