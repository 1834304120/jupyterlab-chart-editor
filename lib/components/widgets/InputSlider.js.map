{"version":3,"sources":["../../../src/components/widgets/InputSlider.js"],"names":["InputSlider","props","state","value","onTextChange","bind","onUpdate","nextProps","setState","newValue","step","min","max","onChange","textValue","propTypes","PropTypes","oneOfType","number","string","func","isRequired","defaultProps","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAOA;;;;IAIMA,W;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAOF,MAAME,KAAf,EAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,OAAhB;AAJiB;AAKlB;;;;8CAEyBE,S,EAAW;AACnC;AACA,UAAIA,UAAUJ,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACxC,aAAKK,QAAL,CAAc;AACZL,iBAAOI,UAAUJ;AADL,SAAd;AAGD;AACF;;;iCAEYM,Q,EAAU;AACrB,UAAMN,QAAQ,yBAAYM,QAAZ,CAAd;AACA,WAAKD,QAAL,CAAc,EAAEL,YAAF,EAAd;AACD;;;6BAEQM,Q,EAAU;AAAA,mBACoB,KAAKR,KADzB;AAAA,UACTS,IADS,UACTA,IADS;AAAA,UACHC,GADG,UACHA,GADG;AAAA,UACEC,GADF,UACEA,GADF;AAAA,UACOC,QADP,UACOA,QADP;;;AAGjB,UAAIV,QAAQ,yBAAYM,QAAZ,CAAZ;AACAN,cAAQ,qBAAQA,KAAR,EAAeO,IAAf,CAAR;AACAP,cAAQ,8BAAiBA,KAAjB,EAAwBQ,GAAxB,EAA6BC,GAA7B,CAAR;;AAEA,WAAKJ,QAAL,CAAc,EAAEL,YAAF,EAAd;AACAU,eAASV,KAAT;AACD;;;6BAEQ;AACP,UAAMW,YAAY,4BAAe,KAAKZ,KAAL,CAAWC,KAA1B,CAAlB;AADO,oBAEqC,KAAKF,KAF1C;AAAA,UAECY,QAFD,WAECA,QAFD;AAAA,UAEWF,GAFX,WAEWA,GAFX;AAAA,UAEgBC,GAFhB,WAEgBA,GAFhB;AAAA,UAEqBF,IAFrB,WAEqBA,IAFrB;AAAA,UAE2BP,KAF3B,WAE2BA,KAF3B;;;AAIP,aACE;AAAA;AAAA;AACE;AACE,eAAI,YADN;AAEE,qBAAU,eAFZ;AAGE,gBAAMW,SAHR;AAIE,gBAAK,MAJP;AAKE,oBAAU,KAAKV,YALjB;AAME,oBAAU,KAAKE;AANjB,UADF;AASE;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE;AACE,mBAAOH,KADT;AAEE,sBAAUU,QAFZ;AAGE,iBAAKF,GAHP;AAIE,iBAAKC,GAJP;AAKE,kBAAMF,IALR;AAME,kBAAM,IANR;AAOE,yBAAa;AAPf;AADF;AATF,OADF;AAuBD;;;;;;AAGHV,YAAYe,SAAZ,GAAwB;AACtBZ,SAAO,gBAAMa,SAAN,CAAgBC,SAAhB,CAA0B,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAA1B,CADe;AAEtBN,YAAU,oBAAUO,IAAV,CAAeC,UAFH;AAGtBV,OAAK,oBAAUO,MAHO;AAItBN,OAAK,oBAAUM,MAJO;AAKtBR,QAAM,oBAAUQ;AALM,CAAxB;;AAQAlB,YAAYsB,YAAZ,GAA2B;AACzBnB,SAAO,EADkB;AAEzBQ,OAAK,CAFoB;AAGzBC,OAAK,GAHoB;AAIzBF,QAAM;AAJmB,CAA3B;;AAOAa,OAAOC,OAAP,GAAiBxB,WAAjB","file":"InputSlider.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport EditableText from \"./EditableText\";\nimport Slider from \"./Slider\";\nimport {\n  keepWithinMaxMin,\n  getStep,\n  stringToInt,\n  numberToString,\n} from \"@workspace/utils/number\";\n\n/**\n * Input slider\n */\n\nclass InputSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Updates the value to the graph's actual value\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  onTextChange(newValue) {\n    const value = stringToInt(newValue);\n    this.setState({ value });\n  }\n\n  onUpdate(newValue) {\n    const { step, min, max, onChange } = this.props;\n\n    let value = stringToInt(newValue);\n    value = getStep(value, step);\n    value = keepWithinMaxMin(value, min, max);\n\n    this.setState({ value });\n    onChange(value);\n  }\n\n  render() {\n    const textValue = numberToString(this.state.value);\n    const { onChange, min, max, step, value } = this.props;\n\n    return (\n      <div>\n        <EditableText\n          ref=\"sliderText\"\n          className=\"slider__input\"\n          text={textValue}\n          type=\"text\"\n          onChange={this.onTextChange}\n          onUpdate={this.onUpdate}\n        />\n        <div className=\"slider__widget\">\n          <Slider\n            value={value}\n            onChange={onChange}\n            min={min}\n            max={max}\n            step={step}\n            fill={true}\n            orientation={\"horizontal\"}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nInputSlider.propTypes = {\n  value: React.PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n};\n\nInputSlider.defaultProps = {\n  value: 50,\n  min: 0,\n  max: 100,\n  step: 1,\n};\n\nmodule.exports = InputSlider;\n"]}