{"version":3,"sources":["../../../../src/components/widgets/annotation_editor/ModeSwitchPanel.js"],"names":["ModeSwitchPanel","createClass","propTypes","modesToButtonLabels","object","isRequired","modesToComponents","modeTransitions","defaultMode","string","getInitialState","modes","Object","keys","props","initialMode","mode","onClickChangeMode","state","newMode","setState","render","ComponentByMode","buttonLabel"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,kBAAkB,gBAAMC,WAAN,CAAkB;AAAA;;AACxCC,aAAW;AACTC,yBAAqB,iBAAUC,MAAV,CAAiBC,UAD7B;AAETC,uBAAmB,iBAAUF,MAAV,CAAiBC,UAF3B;AAGTE,qBAAiB,iBAAUH,MAAV,CAAiBC,UAHzB;AAITG,iBAAa,iBAAUC;AAJd,GAD6B;;AAQxCC,iBARwC,6BAQtB;AAChB,QAAMC,QAAQC,OAAOC,IAAP,CAAY,KAAKC,KAAL,CAAWP,eAAvB,CAAd;AACA,QAAMQ,cAAc,KAAKD,KAAL,CAAWN,WAAX,IAA0BG,MAAM,CAAN,CAA9C;;AAEA,WAAO;AACL;AACAK,YAAMD;AAFD,KAAP;AAID,GAhBuC;AAkBxCE,mBAlBwC,+BAkBpB;AAAA,QACVD,IADU,GACD,KAAKE,KADJ,CACVF,IADU;;AAElB,QAAMG,UAAU,KAAKL,KAAL,CAAWP,eAAX,CAA2BS,IAA3B,CAAhB;;AAEA,SAAKI,QAAL,CAAc,EAAEJ,MAAMG,OAAR,EAAd;AACD,GAvBuC;AAyBxCE,QAzBwC,oBAyB/B;AAAA,QACCL,IADD,GACU,KAAKE,KADf,CACCF,IADD;AAAA,iBAE4C,KAAKF,KAFjD;AAAA,QAECX,mBAFD,UAECA,mBAFD;AAAA,QAEsBG,iBAFtB,UAEsBA,iBAFtB;;;AAIP,QAAMgB,kBAAkBhB,kBAAkBU,IAAlB,CAAxB;AACA,QAAMO,cAAcpB,oBAAoBa,IAApB,CAApB;;AAEA,WACE;AAAA;AAAA,QAAK,WAAU,mBAAf;AACE;AAAA;AAAA,UAAK,WAAU,4BAAf;AAA6CM;AAA7C,OADF;AAEE;AAAA;AAAA,UAAK,WAAU,2BAAf;AACE;AAAA;AAAA;AACE,uBAAU,wBADZ;AAEE,qBAAS,KAAKL;AAFhB;AAIGM;AAJH;AADF;AAFF,KADF;AAaD;AA7CuC,CAAlB,CAAxB;;kBAgDevB,e","file":"ModeSwitchPanel.js","sourcesContent":["import React, { PropTypes } from \"react\";\n\nconst ModeSwitchPanel = React.createClass({\n  propTypes: {\n    modesToButtonLabels: PropTypes.object.isRequired,\n    modesToComponents: PropTypes.object.isRequired,\n    modeTransitions: PropTypes.object.isRequired,\n    defaultMode: PropTypes.string,\n  },\n\n  getInitialState() {\n    const modes = Object.keys(this.props.modeTransitions);\n    const initialMode = this.props.defaultMode || modes[0];\n\n    return {\n      // Initialize state with the default (initial) mode\n      mode: initialMode,\n    };\n  },\n\n  onClickChangeMode() {\n    const { mode } = this.state;\n    const newMode = this.props.modeTransitions[mode];\n\n    this.setState({ mode: newMode });\n  },\n\n  render() {\n    const { mode } = this.state;\n    const { modesToButtonLabels, modesToComponents } = this.props;\n\n    const ComponentByMode = modesToComponents[mode];\n    const buttonLabel = modesToButtonLabels[mode];\n\n    return (\n      <div className=\"mode-switch-panel\">\n        <div className=\"mode-switch-panel__content\">{ComponentByMode}</div>\n        <div className=\"mode-switch-panel__toggle\">\n          <button\n            className=\"btnbase btn--secondary\"\n            onClick={this.onClickChangeMode}\n          >\n            {buttonLabel}\n          </button>\n        </div>\n      </div>\n    );\n  },\n});\n\nexport default ModeSwitchPanel;\n"]}