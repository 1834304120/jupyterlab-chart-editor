{"version":3,"sources":["../../../../../src/components/widgets/annotation_editor/__tests__/FormatSwitchConfirmationPanel-test.js"],"names":["describe","it","mockOnCancel","jest","genMockFn","component","find","simulate","expect","toBeCalled","mockOnContinue","text","toContain"],"mappings":";;AAAA;;;;AACA;;AAEA;;;;;;AAEAA,SAAS,+BAAT,EAA0C,YAAM;AAC9CC,KAAG,uCAAH,EAA4C,YAAM;AAChD,QAAMC,eAAeC,KAAKC,SAAL,EAArB;AACA,QAAMC,YAAY,qBAChB;AACE,gBAAUH,YADZ;AAEE,kBAAY,sBAAM,CAAE,CAFtB;AAGE,aAAM;AAHR,MADgB,CAAlB;;AAQAG,cAAUC,IAAV,CAAe,iCAAf,EAAkDC,QAAlD,CAA2D,OAA3D;;AAEAC,WAAON,YAAP,EAAqBO,UAArB;AACD,GAbD;;AAeAR,KAAG,2CAAH,EAAgD,YAAM;AACpD,QAAMS,iBAAiBP,KAAKC,SAAL,EAAvB;AACA,QAAMC,YAAY,qBAChB;AACE,gBAAU,oBAAM,CAAE,CADpB;AAEE,kBAAYK,cAFd;AAGE,aAAM;AAHR,MADgB,CAAlB;;AAQAL,cAAUC,IAAV,CAAe,mCAAf,EAAoDC,QAApD,CAA6D,OAA7D;;AAEAC,WAAOE,cAAP,EAAuBD,UAAvB;AACD,GAbD;;AAeAR,KAAG,+CAAH,EAAoD,YAAM;AACxD,QAAMI,YAAY,qBAChB;AACE,gBAAU,oBAAM,CAAE,CADpB;AAEE,kBAAY,sBAAM,CAAE,CAFtB;AAGE,aAAM;AAHR,MADgB,CAAlB;;AAQAG,WAAOH,UAAUM,IAAV,EAAP,EAAyBC,SAAzB,CAAmC,4BAAnC;AACD,GAVD;;AAYAX,KAAG,qDAAH,EAA0D,YAAM;AAC9D,QAAMI,YAAY,qBAChB;AACE,gBAAU,oBAAM,CAAE,CADpB;AAEE,kBAAY,sBAAM,CAAE,CAFtB;AAGE,aAAM;AAHR,MADgB,CAAlB;;AAQAG,WAAOH,UAAUM,IAAV,EAAP,EAAyBC,SAAzB,CACE,6CADF;AAGD,GAZD;;AAcAX,KAAG,wDAAH,EAA6D,YAAM;AACjE,QAAMI,YAAY,qBAChB;AACE,gBAAU,oBAAM,CAAE,CADpB;AAEE,kBAAY,sBAAM,CAAE,CAFtB;AAGE,aAAM;AAHR,MADgB,CAAlB;;AAQAG,WAAOH,UAAUM,IAAV,EAAP,EAAyBC,SAAzB,CAAmC,6BAAnC;AACD,GAVD;AAWD,CApED","file":"FormatSwitchConfirmationPanel-test.js","sourcesContent":["import React from \"react\";\nimport { shallow } from \"enzyme\";\n\nimport FormatSwitchConfirmationPanel from \"@workspace/components/widgets/annotation_editor/FormatSwitchConfirmationPanel\";\n\ndescribe(\"FormatSwitchConfirmationPanel\", () => {\n  it(\"calls onCancel when Cancel is clicked\", () => {\n    const mockOnCancel = jest.genMockFn();\n    const component = shallow(\n      <FormatSwitchConfirmationPanel\n        onCancel={mockOnCancel}\n        onContinue={() => {}}\n        value=\"\"\n      />\n    );\n\n    component.find(\".confirmation-panel__btn-cancel\").simulate(\"click\");\n\n    expect(mockOnCancel).toBeCalled();\n  });\n\n  it(\"calls onContinue when Continue is clicked\", () => {\n    const mockOnContinue = jest.genMockFn();\n    const component = shallow(\n      <FormatSwitchConfirmationPanel\n        onCancel={() => {}}\n        onContinue={mockOnContinue}\n        value=\"\"\n      />\n    );\n\n    component.find(\".confirmation-panel__btn-continue\").simulate(\"click\");\n\n    expect(mockOnContinue).toBeCalled();\n  });\n\n  it(\"shows the correct message for non-latex value\", () => {\n    const component = shallow(\n      <FormatSwitchConfirmationPanel\n        onCancel={() => {}}\n        onContinue={() => {}}\n        value=\"Some text\"\n      />\n    );\n\n    expect(component.text()).toContain(\"convert your note to LaTeX\");\n  });\n\n  it(\"shows the correct message for latex value with text\", () => {\n    const component = shallow(\n      <FormatSwitchConfirmationPanel\n        onCancel={() => {}}\n        onContinue={() => {}}\n        value=\"$\\text{foo}$\"\n      />\n    );\n\n    expect(component.text()).toContain(\n      \"convert your LaTeX expression into raw text\"\n    );\n  });\n\n  it(\"shows the correct message for latex value without text\", () => {\n    const component = shallow(\n      <FormatSwitchConfirmationPanel\n        onCancel={() => {}}\n        onContinue={() => {}}\n        value=\"$\\alpha$\"\n      />\n    );\n\n    expect(component.text()).toContain(\"will remove your expression\");\n  });\n});\n"]}