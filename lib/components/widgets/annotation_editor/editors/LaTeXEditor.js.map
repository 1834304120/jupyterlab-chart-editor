{"version":3,"sources":["../../../../../src/components/widgets/annotation_editor/editors/LaTeXEditor.js"],"names":["LaTeXEditor","props","unwrappedValue","unwrap","value","state","onChange","bind","onBlur","nextProps","unwrappedNextValue","setState","substr","length","e","target","wrap","placeholder","propTypes","PropTypes","func","isRequired","string","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;IAEMA,W;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAGjB;AACA;AAJiB,0HACXA,KADW;;AAKjB,QAAMC,iBAAiB,MAAKC,MAAL,CAAYF,MAAMG,KAAlB,CAAvB;;AAEA,UAAKC,KAAL,GAAa;AACXD,aAAOF;AADI,KAAb;AAGA,UAAKI,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;AAXiB;AAYlB;;;;8CAEyBE,S,EAAW;AACnC,UAAMC,qBAAqB,KAAKP,MAAL,CAAYM,UAAUL,KAAtB,CAA3B;;AAEA,UAAIM,uBAAuB,KAAKL,KAAL,CAAWD,KAAtC,EAA6C;AAC3C,aAAKO,QAAL,CAAc;AACZP,iBAAOM;AADK,SAAd;AAGD;AACF;;AAED;;;;2BACON,K,EAAO;AACZ,UAAI,iCAAUA,KAAV,CAAJ,EAAsB;AACpB,eAAOA,MAAMQ,MAAN,CAAa,CAAb,EAAgBR,MAAMS,MAAN,GAAe,CAA/B,CAAP;AACD;;AAED,aAAOT,KAAP;AACD;;AAED;;;;yBACKA,K,EAAO;AACV,UAAI,CAAC,iCAAUA,KAAV,CAAL,EAAuB;AACrB,qBAAWA,KAAX;AACD;;AAED,aAAOA,KAAP;AACD;;;6BAEQU,C,EAAG;AACV,WAAKH,QAAL,CAAc;AACZP,eAAOU,EAAEC,MAAF,CAASX;AADJ,OAAd;AAGD;;;2BAEMU,C,EAAG;AACR,UAAMV,QAAQ,KAAKY,IAAL,CAAUF,EAAEC,MAAF,CAASX,KAAnB,CAAd;AACA,WAAKH,KAAL,CAAWK,QAAX,CAAoBF,KAApB;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,cAAf;AACE;AACE,eAAI,WADN;AAEE,iBAAO,KAAKC,KAAL,CAAWD,KAFpB;AAGE,uBAAa,KAAKH,KAAL,CAAWgB,WAH1B;AAIE,oBAAU,KAAKX,QAJjB;AAKE,kBAAQ,KAAKE,MALf;AAME,qBAAU;AANZ;AADF,OADF;AAYD;;;;;;AAGHR,YAAYkB,SAAZ,GAAwB;AACtBZ,YAAU,gBAAMa,SAAN,CAAgBC,IAAhB,CAAqBC,UADT;AAEtBjB,SAAO,gBAAMe,SAAN,CAAgBG,MAFD;AAGtBL,eAAa,gBAAME,SAAN,CAAgBG;AAHP,CAAxB;;AAMAtB,YAAYuB,YAAZ,GAA2B;AACzBnB,SAAO,EADkB;AAEzBa,eAAa;AAFY,CAA3B;;kBAKejB,W","file":"LaTeXEditor.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { isLaTeXExpr as isWrapped } from \"@workspace/components/widgets/annotation_editor/convertFormats\";\n\nclass LaTeXEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    // Internally, represesent the LaTeX document without the\n    // wrapping `$...$` characters.\n    const unwrappedValue = this.unwrap(props.value);\n\n    this.state = {\n      value: unwrappedValue,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const unwrappedNextValue = this.unwrap(nextProps.value);\n\n    if (unwrappedNextValue !== this.state.value) {\n      this.setState({\n        value: unwrappedNextValue,\n      });\n    }\n  }\n\n  // Return a new value with wrapping `$...$` removed.\n  unwrap(value) {\n    if (isWrapped(value)) {\n      return value.substr(1, value.length - 2);\n    }\n\n    return value;\n  }\n\n  // Wrap value in `$...$`.\n  wrap(value) {\n    if (!isWrapped(value)) {\n      return `$${value}$`;\n    }\n\n    return value;\n  }\n\n  onChange(e) {\n    this.setState({\n      value: e.target.value,\n    });\n  }\n\n  onBlur(e) {\n    const value = this.wrap(e.target.value);\n    this.props.onChange(value);\n  }\n\n  render() {\n    return (\n      <div className=\"latex-editor\">\n        <textarea\n          ref=\"textinput\"\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          className=\"latex-editor__textarea\"\n        />\n      </div>\n    );\n  }\n}\n\nLaTeXEditor.propTypes = {\n  onChange: React.PropTypes.func.isRequired,\n  value: React.PropTypes.string,\n  placeholder: React.PropTypes.string,\n};\n\nLaTeXEditor.defaultProps = {\n  value: \"\",\n  placeholder: \"\",\n};\n\nexport default LaTeXEditor;\n"]}