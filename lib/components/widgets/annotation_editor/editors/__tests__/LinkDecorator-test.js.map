{"version":3,"sources":["../../../../../../src/components/widgets/annotation_editor/editors/__tests__/LinkDecorator-test.js"],"names":["React","shallow","LinkDecorator","expectedURL","render","props","style","describe","beforeEach","require","default","mockURL","it","component","expect","toBeDefined","hrefAttr","find","prop","toBe","color","styleProp","text","toContain"],"mappings":";;AAAA,IAAIA,cAAJ;AACA,IAAIC,gBAAJ;AACA,IAAIC,sBAAJ;;AAEA,IAAIC,oBAAJ;;AAEA,IAAMC,SAAS,SAATA,MAAS;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,SACbJ,QACE;AAAC,iBAAD;AAAA,MAAe,WAAU,GAAzB,EAA6B,OAAOI,MAAMC,KAAN,IAAe,EAAnD;AACE;AAAA;AAAA;AAAA;AAAA;AADF,GADF,CADa;AAAA,CAAf;;AAOAC,SAAS,eAAT,EAA0B,YAAM;AAC9BC,aAAW,YAAM;AACfR,YAAQS,QAAQ,OAAR,CAAR;AACAR,cAAUQ,QAAQ,QAAR,EAAkBR,OAA5B;AACAC,oBAAgBO,QAAQ,kBAAR,EAA4BC,OAA5C;;AAEAP,kBAAcM,QAAQ,UAAR,EAAoBE,OAAlC;AACD,GAND;;AAQAC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,YAAYT,QAAlB;;AAEAU,WAAOD,SAAP,EAAkBE,WAAlB;AACD,GAJD;;AAMAH,KAAG,yCAAH,EAA8C,YAAM;AAClD,QAAMC,YAAYT,QAAlB;AACA,QAAMY,WAAWH,UAAUI,IAAV,CAAe,GAAf,EAAoBC,IAApB,CAAyB,MAAzB,CAAjB;;AAEAJ,WAAOE,QAAP,EAAiBG,IAAjB,CAAsBhB,WAAtB;AACD,GALD;;AAOAS,KAAG,4CAAH,EAAiD,YAAM;AACrD,QAAMN,QAAQ,EAAEc,OAAO,MAAT,EAAd;AACA,QAAMP,YAAYT,OAAO,EAAEE,YAAF,EAAP,CAAlB;AACA,QAAMe,YAAYR,UAAUI,IAAV,CAAe,GAAf,EAAoBC,IAApB,CAAyB,OAAzB,CAAlB;;AAEAJ,WAAOO,SAAP,EAAkBF,IAAlB,CAAuBb,KAAvB;AACD,GAND;;AAQAM,KAAG,kBAAH,EAAuB,YAAM;AAC3B,QAAMC,YAAYT,QAAlB;;AAEAU,WAAOD,UAAUS,IAAV,EAAP,EAAyBC,SAAzB,CAAmC,WAAnC;AACD,GAJD;AAKD,CAnCD","file":"LinkDecorator-test.js","sourcesContent":["let React;\nlet shallow;\nlet LinkDecorator;\n\nlet expectedURL;\n\nconst render = (props = {}) =>\n  shallow(\n    <LinkDecorator entityKey=\"1\" style={props.style || {}}>\n      <span>Link text</span>\n    </LinkDecorator>\n  );\n\ndescribe(\"LinkDecorator\", () => {\n  beforeEach(() => {\n    React = require(\"react\");\n    shallow = require(\"enzyme\").shallow;\n    LinkDecorator = require(\"../LinkDecorator\").default;\n\n    expectedURL = require(\"draft-js\").mockURL;\n  });\n\n  it(\"renders\", () => {\n    const component = render();\n\n    expect(component).toBeDefined();\n  });\n\n  it(\"renders an anchor tag with expected URL\", () => {\n    const component = render();\n    const hrefAttr = component.find(\"a\").prop(\"href\");\n\n    expect(hrefAttr).toBe(expectedURL);\n  });\n\n  it(\"renders an anchor tag with passed in style\", () => {\n    const style = { color: \"blue\" };\n    const component = render({ style });\n    const styleProp = component.find(\"a\").prop(\"style\");\n\n    expect(styleProp).toBe(style);\n  });\n\n  it(\"renders children\", () => {\n    const component = render();\n\n    expect(component.text()).toContain(\"Link text\");\n  });\n});\n"]}