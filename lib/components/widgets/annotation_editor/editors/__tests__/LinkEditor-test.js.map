{"version":3,"sources":["../../../../../../src/components/widgets/annotation_editor/editors/__tests__/LinkEditor-test.js"],"names":["React","shallow","LinkEditor","RETURN_KEY","ESCAPE_KEY","defaultProps","Object","assign","onBlur","onClose","onFocus","onURLChange","linkID","linkURL","coordinates","x","y","props","render","_props","describe","beforeEach","require","default","WC","it","component","expect","toBeDefined","expectedPlaceholder","inputPlaceholder","find","prop","toBe","expectedURL","inputValue","mockOnFocus","jest","genMockFn","simulate","toBeCalled","mockOnBlur","mockOnURLChange","expectedChange","target","value","toBeCalledWith","mockOnClose","key","preventDefault","originalURL","newURL","lastCalledWith"],"mappings":"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","file":"LinkEditor-test.js","sourcesContent":["let React;\nlet shallow;\nlet LinkEditor;\nlet RETURN_KEY;\nlet ESCAPE_KEY;\n\nconst defaultProps = props =>\n  Object.assign(\n    {\n      onBlur: () => {},\n      onClose: () => {},\n      onFocus: () => {},\n      onURLChange: () => {},\n      linkID: \"\",\n      linkURL: \"\",\n      coordinates: { x: 0, y: 0 },\n    },\n    props\n  );\n\nconst render = _props => {\n  const props = defaultProps(_props);\n\n  return shallow(\n    <LinkEditor\n      onBlur={props.onBlur}\n      onClose={props.onClose}\n      onFocus={props.onFocus}\n      onURLChange={props.onURLChange}\n      linkID={props.linkID}\n      linkURL={props.linkURL}\n      coordinates={props.coordinates}\n    />\n  );\n};\n\ndescribe(\"LinkEditor\", () => {\n  beforeEach(() => {\n    React = require(\"react\");\n    shallow = require(\"enzyme\").shallow;\n    LinkEditor = require(\"../LinkEditor\").default;\n\n    const WC = require(\"@workspace/constants/workspace\");\n    RETURN_KEY = WC.RETURN_KEY;\n    ESCAPE_KEY = WC.ESCAPE_KEY;\n  });\n\n  it(\"renders\", () => {\n    const component = render();\n\n    expect(component).toBeDefined();\n  });\n\n  it(\"renders an input tag with a placeholder\", () => {\n    const expectedPlaceholder = \"Enter link URL\";\n    const component = render();\n    const inputPlaceholder = component.find(\"input\").prop(\"placeholder\");\n\n    expect(inputPlaceholder).toBe(expectedPlaceholder);\n  });\n\n  it(\"renders an input tag with passed in linkURL\", () => {\n    const expectedURL = \"http://url/com\";\n    const component = render({ linkURL: expectedURL });\n    const inputValue = component.find(\"input\").prop(\"value\");\n\n    expect(inputValue).toBe(expectedURL);\n  });\n\n  it(\"calls onFocus when input is focused\", () => {\n    const mockOnFocus = jest.genMockFn();\n    const component = render({ onFocus: mockOnFocus });\n\n    component.find(\"input\").simulate(\"focus\");\n\n    expect(mockOnFocus).toBeCalled();\n  });\n\n  it(\"calls onBlur when input is blurred\", () => {\n    const mockOnBlur = jest.genMockFn();\n    const component = render({ onBlur: mockOnBlur });\n\n    component.find(\"input\").simulate(\"focus\");\n    component.find(\"input\").simulate(\"blur\");\n\n    expect(mockOnBlur).toBeCalled();\n  });\n\n  it(\"calls onURLChange when input value changes\", () => {\n    const mockOnURLChange = jest.genMockFn();\n    const expectedChange = \"http://new.url\";\n    const linkID = \"someID\";\n    const component = render({\n      linkID: linkID,\n      onURLChange: mockOnURLChange,\n    });\n\n    component.find(\"input\").simulate(\"change\", {\n      target: { value: expectedChange },\n    });\n\n    expect(mockOnURLChange).toBeCalledWith(linkID, expectedChange);\n  });\n\n  it(\"calls onClose when RETURN is pressed\", () => {\n    const mockOnClose = jest.genMockFn();\n    const linkID = \"someID\";\n    const component = render({\n      linkID: linkID,\n      onClose: mockOnClose,\n    });\n\n    component.find(\"input\").simulate(\"keyDown\", {\n      key: RETURN_KEY,\n      preventDefault: () => {},\n    });\n\n    expect(mockOnClose).toBeCalledWith(linkID);\n  });\n\n  it(\"calls onClose and restores original URL when ESC is pressed\", () => {\n    const mockOnClose = jest.genMockFn();\n    const mockOnURLChange = jest.genMockFn();\n    const originalURL = \"http://some.url\";\n    const newURL = \"http://new.url\";\n    const linkID = \"someID\";\n    const component = render({\n      linkID: linkID,\n      linkURL: originalURL,\n      onURLChange: mockOnURLChange,\n      onClose: mockOnClose,\n    });\n\n    component.find(\"input\").simulate(\"change\", {\n      target: { value: newURL },\n    });\n\n    component.find(\"input\").simulate(\"keyDown\", {\n      key: ESCAPE_KEY,\n      preventDefault: () => {},\n    });\n\n    expect(mockOnClose).toBeCalledWith(linkID);\n\n    expect(mockOnURLChange).lastCalledWith(linkID, originalURL);\n  });\n});\n"]}