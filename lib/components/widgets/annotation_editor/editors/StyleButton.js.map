{"version":3,"sources":["../../../../../src/components/widgets/annotation_editor/editors/StyleButton.js"],"names":["StyleButton","createClass","propTypes","active","bool","label","element","isRequired","onToggle","func","value","string","ev","preventDefault","props","render","className"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,gBAAMC,WAAN,CAAkB;AAAA;;AACpCC,aAAW;AACTC,YAAQ,iBAAUC,IADT;AAET;AACAC,WAAO,iBAAUC,OAAV,CAAkBC,UAHhB;AAIT;AACAC,cAAU,iBAAUC,IAAV,CAAeF,UALhB;AAMT;AACAG,WAAO,iBAAUC,MAAV,CAAiBJ;AAPf,GADyB;;AAWpCC,UAXoC,oBAW3BI,EAX2B,EAWvB;AACX;AACAA,OAAGC,cAAH;AACA,SAAKC,KAAL,CAAWN,QAAX,CAAoB,KAAKM,KAAL,CAAWJ,KAA/B;AACD,GAfmC;AAiBpCK,QAjBoC,oBAiB3B;AAAA,iBAC0B,KAAKD,KAD/B;AAAA,QACCX,MADD,UACCA,MADD;AAAA,QACSE,KADT,UACSA,KADT;AAAA,QACgBK,KADhB,UACgBA,KADhB;;;AAGP,QAAMM,YAAY,0BAChB,+BADgB,sCAEkBN,KAFlB,EAGhB;AACE,+CAAyCP;AAD3C,KAHgB,CAAlB;;AAQA,WACE;AAAA;AAAA,QAAM,WAAU,wCAAhB;AACE;AAAA;AAAA;AACE,qBAAWa,SADb;AAEE,uBAAa,KAAKR,QAFpB;AAGE,uBAAU,QAHZ;AAIE,0BAAcL;AAJhB;AAMGE;AANH;AADF,KADF;AAYD;AAxCmC,CAAlB,CAApB;;kBA2CeL,W","file":"StyleButton.js","sourcesContent":["import React, { PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nconst StyleButton = React.createClass({\n  propTypes: {\n    active: PropTypes.bool,\n    // A (styled) React element to display as label\n    label: PropTypes.element.isRequired,\n    // Callback for clicks\n    onToggle: PropTypes.func.isRequired,\n    // The value passed to `onToggle` when clicked\n    value: PropTypes.string.isRequired,\n  },\n\n  onToggle(ev) {\n    // Prevent focus moving from editor to button\n    ev.preventDefault();\n    this.props.onToggle(this.props.value);\n  },\n\n  render() {\n    const { active, label, value } = this.props;\n\n    const className = classnames(\n      \"rich-text-editor__styleButton\",\n      `rich-text-editor__styleButton__${value}`,\n      {\n        \"rich-text-editor__styleButton--active\": active,\n      }\n    );\n\n    return (\n      <span className=\"rich-text-editor__styleButton__wrapper\">\n        <span\n          className={className}\n          onMouseDown={this.onToggle}\n          data-role=\"button\"\n          data-pressed={active}\n        >\n          {label}\n        </span>\n      </span>\n    );\n  },\n});\n\nexport default StyleButton;\n"]}