{"version":3,"sources":["../../../../../src/components/widgets/annotation_editor/editors/StyleButtonGroup.js"],"names":["StyleButtonGroup","createClass","propTypes","onToggle","func","isRequired","styles","arrayOf","shape","label","element","value","string","currentStyle","orderedSet","getDefaultProps","OrderedSet","render","props","linkIsSelected","isActive","has","map"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,mBAAmB,gBAAMC,WAAN,CAAkB;AAAA;;AACzCC,aAAW;AACTC,cAAU,iBAAUC,IAAV,CAAeC,UADhB;AAETC,YAAQ,iBAAUC,OAAV,CACN,iBAAUC,KAAV,CAAgB;AACdC,aAAO,iBAAUC,OAAV,CAAkBL,UADX;AAEdM,aAAO,iBAAUC,MAAV,CAAiBP;AAFV,KAAhB,CADM,EAKNA,UAPO;;AAST;AACA;AACAQ,kBAAc,kCAAmBC;AAXxB,GAD8B;;AAezCC,iBAfyC,6BAevB;AAChB,WAAO;AACLF,oBAAc,oBAAUG,UAAV;AADT,KAAP;AAGD,GAnBwC;AAqBzCC,QArByC,oBAqBhC;AAAA,iBACoD,KAAKC,KADzD;AAAA,QACCL,YADD,UACCA,YADD;AAAA,QACeM,cADf,UACeA,cADf;AAAA,QAC+Bb,MAD/B,UAC+BA,MAD/B;AAAA,QACuCH,QADvC,UACuCA,QADvC;;;AAGP,QAAMiB,WAAW,SAAXA,QAAW,CAACP,YAAD,EAAeF,KAAf,EAAyB;AACxC,UAAIA,UAAU,MAAd,EAAsB;AACpB,eAAOQ,cAAP;AACD;;AAED,aAAON,aAAaQ,GAAb,CAAiBV,KAAjB,CAAP;AACD,KAND;;AAQA,WACE;AAAA;AAAA,QAAK,WAAU,4BAAf;AACGL,aAAOgB,GAAP,CAAW;AAAA,YAAGb,KAAH,QAAGA,KAAH;AAAA,YAAUE,KAAV,QAAUA,KAAV;AAAA,eACV;AACE,eAAKA,KADP;AAEE,kBAAQS,SAASP,YAAT,EAAuBF,KAAvB,CAFV;AAGE,iBAAOF,KAHT;AAIE,oBAAUN,QAJZ;AAKE,iBAAOQ;AALT,UADU;AAAA,OAAX;AADH,KADF;AAaD;AA7CwC,CAAlB,CAAzB;;kBAgDeX,gB","file":"StyleButtonGroup.js","sourcesContent":["import React, { PropTypes } from \"react\";\nimport Immutable from \"immutable\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\n\nimport StyleButton from \"./StyleButton\";\n\nconst StyleButtonGroup = React.createClass({\n  propTypes: {\n    onToggle: PropTypes.func.isRequired,\n    styles: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.element.isRequired,\n        value: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n\n    // A draft-js DraftInlineStyle instance\n    // https://facebook.github.io/draft-js/docs/api-reference-editor-state.html#getcurrentinlinestyle\n    currentStyle: ImmutablePropTypes.orderedSet,\n  },\n\n  getDefaultProps() {\n    return {\n      currentStyle: Immutable.OrderedSet(),\n    };\n  },\n\n  render() {\n    const { currentStyle, linkIsSelected, styles, onToggle } = this.props;\n\n    const isActive = (currentStyle, value) => {\n      if (value === \"LINK\") {\n        return linkIsSelected;\n      }\n\n      return currentStyle.has(value);\n    };\n\n    return (\n      <div className=\"rich-text-editor__controls\">\n        {styles.map(({ label, value }) => (\n          <StyleButton\n            key={value}\n            active={isActive(currentStyle, value)}\n            label={label}\n            onToggle={onToggle}\n            value={value}\n          />\n        ))}\n      </div>\n    );\n  },\n});\n\nexport default StyleButtonGroup;\n"]}