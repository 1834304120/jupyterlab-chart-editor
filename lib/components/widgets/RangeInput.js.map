{"version":3,"sources":["../../../src/components/widgets/RangeInput.js"],"names":["RangeInput","props","state","valueMin","value","valueMax","nextProps","setState","valueType","newValue","onChange","min","max","valueOrder","modifiedValue","newValueArray","map","each","index","controlBlockClassName","onUpdate","bind","propTypes","PropTypes","array","isRequired","func","number","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA;;IAEMA,U;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,sBAAU,MAAKF,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CADD;AAETC,sBAAU,MAAKJ,KAAL,CAAWG,KAAX,CAAiB,CAAjB;AAFD,SAAb;AAFe;AAMlB;;;;kDAEyBE,S,EAAW;AACjC,gBAAIA,UAAUF,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAnC,EAA0C;AACtC,qBAAKG,QAAL,CAAc;AACVJ,8BAAUG,UAAUF,KAAV,CAAgB,CAAhB,CADA;AAEVC,8BAAUC,UAAUF,KAAV,CAAgB,CAAhB;AAFA,iBAAd;AAIH;AACJ;;;iCAEQI,S,EAAWC,Q,EAAU;AAAA,yBACY,KAAKR,KADjB;AAAA,gBAClBS,QADkB,UAClBA,QADkB;AAAA,gBACRC,GADQ,UACRA,GADQ;AAAA,gBACHC,GADG,UACHA,GADG;AAAA,gBACER,KADF,UACEA,KADF;;AAE1B,gBAAMS,aAAa,CAAC,UAAD,EAAa,UAAb,CAAnB;AACA,gBAAMC,gBAAgB,8BAAiBL,QAAjB,EAA2BE,GAA3B,EAAgCC,GAAhC,CAAtB;;AAEA,iBAAKL,QAAL,qBAAgBC,SAAhB,EAA4BM,aAA5B;;AAEA,gBAAMC,gBAAgBF,WAAWG,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClD,oBAAID,SAAST,SAAb,EAAwB;AACpB,2BAAOM,aAAP;AACH,iBAFD,MAEO;AACH,2BAAOV,MAAMc,KAAN,CAAP;AACH;AACJ,aANqB,CAAtB;;AAQAR,qBAASK,aAAT;AACH;;;iCAEQ;;AAEL,gBAAMI,wBAAwB,0BAC1B,aAD0B,EAE1B,gBAF0B,EAG1B,mBAH0B,EAI1B,eAJ0B,CAA9B;;AAOA,mBACI;AAAA;AAAA,kBAAM,WAAWA,qBAAjB;AACI;AAAA;AAAA,sBAAM,WAAU,eAAhB;AACI;AACI,6BAAI,UADR;AAEI,+BAAO,KAAKjB,KAAL,CAAWC,QAFtB;AAGI,8BAAK,MAHT;AAII,kCAAU,KAAKiB,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,UAAzB,CAJd;AAKI,6BAAK,KAAKpB,KAAL,CAAWU,GALpB;AAMI,6BAAK,KAAKV,KAAL,CAAWW;AANpB;AADJ,iBADJ;AAWI;AAAA;AAAA,sBAAM,WAAU,eAAhB;AACI;AACI,6BAAI,UADR;AAEI,+BAAO,KAAKV,KAAL,CAAWG,QAFtB;AAGI,8BAAK,MAHT;AAII,kCAAU,KAAKe,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,UAAzB,CAJd;AAKI,6BAAK,KAAKpB,KAAL,CAAWU,GALpB;AAMI,6BAAK,KAAKV,KAAL,CAAWW;AANpB;AADJ;AAXJ,aADJ;AAwBH;;;;;;AAGLZ,WAAWsB,SAAX,GAAuB;AACnB;AACAlB,WAAO,gBAAMmB,SAAN,CAAgBC,KAAhB,CAAsBC,UAFV;AAGnBf,cAAU,iBAAUgB,IAAV,CAAeD,UAHN;AAInBd,SAAK,iBAAUgB,MAJI;AAKnBf,SAAK,iBAAUe;AALI,CAAvB;;AAQAC,OAAOC,OAAP,GAAiB7B,UAAjB","file":"RangeInput.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport NumericInputStatefulWrapper from '@workspace/components/widgets/NumericInputStatefulWrapper';\nimport {keepWithinMaxMin} from '@workspace/utils/number';\nimport classnames from 'classnames';\n\n// Range Input Component\n\nclass RangeInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            valueMin: this.props.value[0],\n            valueMax: this.props.value[1]\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value !== this.state.value) {\n            this.setState({\n                valueMin: nextProps.value[0],\n                valueMax: nextProps.value[1]\n            });\n        }\n    }\n\n    onUpdate(valueType, newValue) {\n        const { onChange, min, max, value } = this.props;\n        const valueOrder = ['valueMin', 'valueMax'];\n        const modifiedValue = keepWithinMaxMin(newValue, min, max);\n\n        this.setState({[valueType]: modifiedValue});\n\n        const newValueArray = valueOrder.map((each, index) => {\n            if (each === valueType) {\n                return modifiedValue;\n            } else {\n                return value[index];\n            }\n        });\n\n        onChange(newValueArray);\n    }\n\n    render() {\n\n        const controlBlockClassName = classnames(\n            'block-group',\n            '+soft-half-top',\n            '+soft-half-bottom',\n            '+inline-block'\n        );\n\n        return (\n            <span className={controlBlockClassName}>\n                <span className=\"block grid-50\">\n                    <NumericInputStatefulWrapper\n                        ref=\"inputMin\"\n                        value={this.state.valueMin}\n                        type=\"text\"\n                        onUpdate={this.onUpdate.bind(this, 'valueMin')}\n                        min={this.props.min}\n                        max={this.props.max}\n                    />\n                </span>\n                <span className=\"block grid-50\">\n                    <NumericInputStatefulWrapper\n                        ref=\"inputMax\"\n                        value={this.state.valueMax}\n                        type=\"text\"\n                        onUpdate={this.onUpdate.bind(this, 'valueMax')}\n                        min={this.props.min}\n                        max={this.props.max}\n                    />\n                </span>\n            </span>\n        );\n    }\n}\n\nRangeInput.propTypes = {\n    // value = ['valueMin', 'valueMax']\n    value: React.PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    min: PropTypes.number,\n    max: PropTypes.number\n};\n\nmodule.exports = RangeInput;\n"]}