{"version":3,"sources":["../../../src/components/widgets/RangeInput.js"],"names":["RangeInput","props","state","valueMin","value","valueMax","nextProps","setState","valueType","newValue","onChange","min","max","valueOrder","modifiedValue","newValueArray","map","each","index","controlBlockClassName","onUpdate","bind","propTypes","array","isRequired","func","number","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,gBAAU,MAAKF,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CADC;AAEXC,gBAAU,MAAKJ,KAAL,CAAWG,KAAX,CAAiB,CAAjB;AAFC,KAAb;AAFiB;AAMlB;;;;8CAEyBE,S,EAAW;AACnC,UAAIA,UAAUF,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAnC,EAA0C;AACxC,aAAKG,QAAL,CAAc;AACZJ,oBAAUG,UAAUF,KAAV,CAAgB,CAAhB,CADE;AAEZC,oBAAUC,UAAUF,KAAV,CAAgB,CAAhB;AAFE,SAAd;AAID;AACF;;;6BAEQI,S,EAAWC,Q,EAAU;AAAA,mBACU,KAAKR,KADf;AAAA,UACpBS,QADoB,UACpBA,QADoB;AAAA,UACVC,GADU,UACVA,GADU;AAAA,UACLC,GADK,UACLA,GADK;AAAA,UACAR,KADA,UACAA,KADA;;AAE5B,UAAMS,aAAa,CAAC,UAAD,EAAa,UAAb,CAAnB;AACA,UAAMC,gBAAgB,8BAAiBL,QAAjB,EAA2BE,GAA3B,EAAgCC,GAAhC,CAAtB;;AAEA,WAAKL,QAAL,qBAAiBC,SAAjB,EAA6BM,aAA7B;;AAEA,UAAMC,gBAAgBF,WAAWG,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACpD,YAAID,SAAST,SAAb,EAAwB;AACtB,iBAAOM,aAAP;AACD,SAFD,MAEO;AACL,iBAAOV,MAAMc,KAAN,CAAP;AACD;AACF,OANqB,CAAtB;;AAQAR,eAASK,aAAT;AACD;;;6BAEQ;AACP,UAAMI,wBAAwB,0BAC5B,aAD4B,EAE5B,gBAF4B,EAG5B,mBAH4B,EAI5B,eAJ4B,CAA9B;;AAOA,aACE;AAAA;AAAA,UAAM,WAAWA,qBAAjB;AACE;AAAA;AAAA,YAAM,WAAU,eAAhB;AACE;AACE,mBAAO,KAAKjB,KAAL,CAAWC,QADpB;AAEE,kBAAK,MAFP;AAGE,sBAAU,KAAKiB,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,UAAzB,CAHZ;AAIE,iBAAK,KAAKpB,KAAL,CAAWU,GAJlB;AAKE,iBAAK,KAAKV,KAAL,CAAWW;AALlB;AADF,SADF;AAUE;AAAA;AAAA,YAAM,WAAU,eAAhB;AACE;AACE,mBAAO,KAAKV,KAAL,CAAWG,QADpB;AAEE,kBAAK,MAFP;AAGE,sBAAU,KAAKe,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,UAAzB,CAHZ;AAIE,iBAAK,KAAKpB,KAAL,CAAWU,GAJlB;AAKE,iBAAK,KAAKV,KAAL,CAAWW;AALlB;AADF;AAVF,OADF;AAsBD;;;;;;AAGHZ,WAAWsB,SAAX,GAAuB;AACrB;AACAlB,SAAO,oBAAUmB,KAAV,CAAgBC,UAFF;AAGrBd,YAAU,oBAAUe,IAAV,CAAeD,UAHJ;AAIrBb,OAAK,oBAAUe,MAJM;AAKrBd,OAAK,oBAAUc;AALM,CAAvB;;AAQAC,OAAOC,OAAP,GAAiB5B,UAAjB","file":"RangeInput.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NumericInputStatefulWrapper from \"./NumericInputStatefulWrapper\";\nimport { keepWithinMaxMin } from \"@workspace/utils/number\";\nimport classnames from \"classnames\";\n\n// Range Input Component\n\nclass RangeInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueMin: this.props.value[0],\n      valueMax: this.props.value[1],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        valueMin: nextProps.value[0],\n        valueMax: nextProps.value[1],\n      });\n    }\n  }\n\n  onUpdate(valueType, newValue) {\n    const { onChange, min, max, value } = this.props;\n    const valueOrder = [\"valueMin\", \"valueMax\"];\n    const modifiedValue = keepWithinMaxMin(newValue, min, max);\n\n    this.setState({ [valueType]: modifiedValue });\n\n    const newValueArray = valueOrder.map((each, index) => {\n      if (each === valueType) {\n        return modifiedValue;\n      } else {\n        return value[index];\n      }\n    });\n\n    onChange(newValueArray);\n  }\n\n  render() {\n    const controlBlockClassName = classnames(\n      \"block-group\",\n      \"+soft-half-top\",\n      \"+soft-half-bottom\",\n      \"+inline-block\"\n    );\n\n    return (\n      <span className={controlBlockClassName}>\n        <span className=\"block grid-50\">\n          <NumericInputStatefulWrapper\n            value={this.state.valueMin}\n            type=\"text\"\n            onUpdate={this.onUpdate.bind(this, \"valueMin\")}\n            min={this.props.min}\n            max={this.props.max}\n          />\n        </span>\n        <span className=\"block grid-50\">\n          <NumericInputStatefulWrapper\n            value={this.state.valueMax}\n            type=\"text\"\n            onUpdate={this.onUpdate.bind(this, \"valueMax\")}\n            min={this.props.min}\n            max={this.props.max}\n          />\n        </span>\n      </span>\n    );\n  }\n}\n\nRangeInput.propTypes = {\n  // value = ['valueMin', 'valueMax']\n  value: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n};\n\nmodule.exports = RangeInput;\n"]}