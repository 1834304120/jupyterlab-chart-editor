{"version":3,"sources":["../../../../src/components/widgets/__tests__/TieredColorPicker-test.js"],"names":["describe","render","color","colorObject","rgb","toRgb","props","toRgbString","onChangeComplete","jest","fn","it","wrapper","texts","find","expect","at","text","toEqual","swatch","prop","backgroundColor"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,uBAAT,EAAkC,YAAM;AACtC,WAASC,MAAT,GAAgC;AAAA,QAAhBC,KAAgB,uEAAR,MAAQ;;AAC9B,QAAMC,cAAc,yBAAUD,KAAV,CAApB;;AAEA,QAAME,MAAMD,YAAYE,KAAZ,EAAZ;;AAEA,QAAMC,QAAQ;AACZJ,aAAOC,YAAYI,WAAZ,EADK;AAEZH,cAFY;AAGZI,wBAAkBC,KAAKC,EAAL;AAHN,KAAd;;AAMA,WAAO,mBAAM,2DAAuBJ,KAAvB,CAAN,CAAP;AACD;;AAEDK,KAAG,iDAAH,EAAsD,YAAM;AAC1D,QAAMC,UAAUX,QAAhB;;AAEA,QAAMY,QAAQD,QAAQE,IAAR,CAAa,qBAAb,CAAd;;AAEAC,WAAOF,MAAMG,EAAN,CAAS,CAAT,EAAYC,IAAZ,EAAP,EAA2BC,OAA3B,CAAmC,2BAAnC;;AAEAH,WAAOF,MAAMG,EAAN,CAAS,CAAT,EAAYC,IAAZ,EAAP,EAA2BC,OAA3B,CAAmC,6BAAnC;AACD,GARD;;AAUAP,KAAG,sCAAH,EAA2C,YAAM;AAC/C,QAAMT,QAAQ,uBAAd;AACA,QAAMU,UAAUX,OAAOC,KAAP,CAAhB;;AAEA,QAAMiB,SAASP,QAAQE,IAAR,CAAa,6BAAb,CAAf;;AAEAC,WAAOI,OAAOC,IAAP,CAAY,OAAZ,EAAqBC,eAA5B,EAA6CH,OAA7C,CAAqDhB,KAArD;AACD,GAPD;AAQD,CAjCD","file":"TieredColorPicker-test.js","sourcesContent":["import React from \"react\";\nimport TieredColorPicker from \"../TieredColorPicker\";\nimport tinycolor from \"tinycolor2\";\nimport { mount } from \"enzyme\";\n\ndescribe(\"<TieredColorPicker />\", () => {\n  function render(color = \"#fff\") {\n    const colorObject = tinycolor(color);\n\n    const rgb = colorObject.toRgb();\n\n    const props = {\n      color: colorObject.toRgbString(),\n      rgb,\n      onChangeComplete: jest.fn(),\n    };\n\n    return mount(<TieredColorPicker {...props} />);\n  }\n\n  it(\"should render text to indicate free/pro colours\", () => {\n    const wrapper = render();\n\n    const texts = wrapper.find(\".color-picker-title\");\n\n    expect(texts.at(0).text()).toEqual(\"Custom colors (Pro users)\");\n\n    expect(texts.at(1).text()).toEqual(\"Default colors (Free users)\");\n  });\n\n  it(\"swatch should display correct colour\", () => {\n    const color = \"rgba(12, 12, 12, 0.5)\";\n    const wrapper = render(color);\n\n    const swatch = wrapper.find(\".color-picker-active-swatch\");\n\n    expect(swatch.prop(\"style\").backgroundColor).toEqual(color);\n  });\n});\n"]}