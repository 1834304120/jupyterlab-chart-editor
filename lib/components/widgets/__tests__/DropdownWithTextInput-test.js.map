{"version":3,"sources":["../../../../src/components/widgets/__tests__/DropdownWithTextInput-test.js"],"names":["describe","options","label","value","render","overrideProps","defaultProps","onUpdate","jest","fn","minWidth","clearable","props","selectOption","wrapper","select","ref","prop","it","secondOption","expect","toBeCalledWith","list","setState"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEAA,SAAS,uBAAT,EAAkC,YAAM;AACtC,MAAMC,UAAU,CACd,EAAEC,OAAO,SAAT,EAAoBC,OAAO,SAA3B,EADc,EAEd,EAAED,OAAO,SAAT,EAAoBC,OAAO,SAA3B,EAFc,CAAhB;;AAKA,WAASC,MAAT,GAAoC;AAAA,QAApBC,aAAoB,uEAAJ,EAAI;;AAClC,QAAMC,eAAe;AACnBL,sBADmB;AAEnBM,gBAAUC,KAAKC,EAAL,EAFS;AAGnBN,aAAOF,QAAQ,CAAR,EAAWE,KAHC;AAInBO,gBAAU,OAJS;AAKnBC,iBAAW;AALQ,KAArB;;AAQA,QAAMC,QAAQ,kBAAMN,YAAN,EAAoBD,aAApB,CAAd;AACA,WAAO,mBAAM,+DAA2BO,KAA3B,CAAN,CAAP;AACD;;AAED,WAASC,YAAT,CAAsBC,OAAtB,EAA+BX,KAA/B,EAAsC;AACpC,QAAMY,SAASD,QAAQE,GAAR,CAAY,UAAZ,EAAwBC,IAAxB,CAA6B,UAA7B,CAAf;AACAF,WAAOZ,KAAP;AACD;;AAEDe,KAAG,4CAAH,EAAiD,YAAM;AACrD,QAAMJ,UAAUV,QAAhB;AACA,QAAMe,eAAelB,QAAQ,CAAR,EAAWE,KAAhC;;AAEAU,iBAAaC,OAAb,EAAsBK,YAAtB;AACAC,WAAON,QAAQG,IAAR,CAAa,UAAb,CAAP,EAAiCI,cAAjC,CAAgDF,YAAhD;AACD,GAND;;AAQAD,KAAG,mCAAH,EAAwC,YAAM;AAC5C,QAAMJ,UAAUV,QAAhB;;AAEA,QAAMD,QAAQ,QAAd;AACA,QAAMmB,OAAO,mBAAOR,QAAQG,IAAR,CAAa,SAAb,CAAP,EAAgC;AAC3Cf,aAAO,QADoC;AAE3CC;AAF2C,KAAhC,CAAb;;AAKAW,YAAQS,QAAR,CAAiB,EAAED,UAAF,EAAjB;AACAT,iBAAaC,OAAb,EAAsBX,KAAtB;AACAiB,WAAON,QAAQG,IAAR,CAAa,UAAb,CAAP,EAAiCI,cAAjC,CAAgDlB,KAAhD;AACD,GAZD;AAaD,CA7CD","file":"DropdownWithTextInput-test.js","sourcesContent":["import DropdownWithTextInput from \"../DropdownWithTextInput\";\nimport React from \"react\";\nimport { mount } from \"enzyme\";\nimport { merge, append } from \"ramda\";\n\ndescribe(\"DropdownWithTextInput\", () => {\n  const options = [\n    { label: \"label 1\", value: \"value 1\" },\n    { label: \"label 2\", value: \"value 2\" },\n  ];\n\n  function render(overrideProps = {}) {\n    const defaultProps = {\n      options,\n      onUpdate: jest.fn(),\n      value: options[0].value,\n      minWidth: \"100px\",\n      clearable: false,\n    };\n\n    const props = merge(defaultProps, overrideProps);\n    return mount(<DropdownWithTextInput {...props} />);\n  }\n\n  function selectOption(wrapper, value) {\n    const select = wrapper.ref(\"dropdown\").prop(\"onChange\");\n    select(value);\n  }\n\n  it(\"calls onChange on existing dropdown option\", () => {\n    const wrapper = render();\n    const secondOption = options[1].value;\n\n    selectOption(wrapper, secondOption);\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(secondOption);\n  });\n\n  it(\"calls onChange on a custom option\", () => {\n    const wrapper = render();\n\n    const value = \"banana\";\n    const list = append(wrapper.prop(\"options\"), {\n      label: \"potato\",\n      value,\n    });\n\n    wrapper.setState({ list });\n    selectOption(wrapper, value);\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(value);\n  });\n});\n"]}