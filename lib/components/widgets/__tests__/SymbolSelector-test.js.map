{"version":3,"sources":["../../../../src/components/widgets/__tests__/SymbolSelector-test.js"],"names":["jest","dontMock","describe","SymbolSelector","React","ReactDOM","TestUtils","beforeEach","require","render","props","activeOption","symbolColor","toggleMenu","genMockFn","changeSymbol","is3D","renderIntoDocument","it","component","expect","toBeDefined","not","toBeCalled","Simulate","click","refs","toBeCalledWith"],"mappings":";;AAEA;;;;;;AAFAA,KAAKC,QAAL,CAAc,mBAAd;;AAIAC,SAAS,gBAAT,EAA2B,YAAM;AAC/B,MAAIC,uBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,iBAAJ;AACA,MAAIC,kBAAJ;;AAEAC,aAAW,YAAM;AACfJ,qBAAiBK,QAAQ,mBAAR,CAAjB;AACAJ,YAAQI,QAAQ,OAAR,CAAR;AACAH,eAAWG,QAAQ,WAAR,CAAX;AACAF,gBAAYE,QAAQ,sBAAR,CAAZ;AACD,GALD;;AAOA,WAASC,MAAT,GAQE;AAAA,QAPAC,KAOA,uEAPQ;AACNC,oBAAc,QADR;AAENC,mBAAa,mBAFP;AAGNC,kBAAYb,KAAKc,SAAL,EAHN;AAINC,oBAAcf,KAAKc,SAAL,EAJR;AAKNE,YAAM;AALA,KAOR;;AACA,WAAOV,UAAUW,kBAAV,CAA6B,oBAAC,cAAD,EAAoBP,KAApB,CAA7B,CAAP;AACD;;AAEDQ,KAAG,mCAAH,EAAwC,YAAM;AAC5C,QAAMC,YAAYV,QAAlB;;AAEAW,WAAOD,SAAP,EAAkBE,WAAlB;AACAD,WAAOD,UAAUT,KAAV,CAAgBK,YAAvB,EAAqCO,GAArC,CAAyCC,UAAzC;AACAjB,cAAUkB,QAAV,CAAmBC,KAAnB,CAAyBN,UAAUO,IAAV,CAAe,kBAAf,CAAzB;AACAN,WAAOD,UAAUT,KAAV,CAAgBK,YAAvB,EAAqCY,cAArC,CAAoD,kBAApD;AACD,GAPD;AAQD,CAjCD","file":"SymbolSelector-test.js","sourcesContent":["jest.dontMock(\"../SymbolSelector\");\n\nimport deepAssign from \"assign-deep\";\n\ndescribe(\"SymbolSelector\", () => {\n  let SymbolSelector;\n  let React;\n  let ReactDOM;\n  let TestUtils;\n\n  beforeEach(() => {\n    SymbolSelector = require(\"../SymbolSelector\");\n    React = require(\"react\");\n    ReactDOM = require(\"react-dom\");\n    TestUtils = require(\"react-dom/test-utils\");\n  });\n\n  function render(\n    props = {\n      activeOption: \"square\",\n      symbolColor: \"rgb(31, 119, 180)\",\n      toggleMenu: jest.genMockFn(),\n      changeSymbol: jest.genMockFn(),\n      is3D: false,\n    }\n  ) {\n    return TestUtils.renderIntoDocument(<SymbolSelector {...props} />);\n  }\n\n  it(\"passes on the new value on change\", () => {\n    const component = render();\n\n    expect(component).toBeDefined();\n    expect(component.props.changeSymbol).not.toBeCalled();\n    TestUtils.Simulate.click(component.refs[\"star-square-open\"]);\n    expect(component.props.changeSymbol).toBeCalledWith(\"star-square-open\");\n  });\n});\n"]}