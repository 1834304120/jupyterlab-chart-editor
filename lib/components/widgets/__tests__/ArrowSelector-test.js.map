{"version":3,"sources":["../../../../src/components/widgets/__tests__/ArrowSelector-test.js"],"names":["jest","dontMock","describe","plotlyjsBundlePath","ArrowSelector","React","ReactDOM","TestUtils","Plotly","beforeEach","require","render","props","activeOption","onChange","genMockFn","renderIntoDocument","it","component","dropdown","refs","firstOption","options","value","expect","toBeDefined","not","toBeCalled","toBeCalledWith","state","toEqual","componentWillReceiveProps"],"mappings":";;AAAAA,KAAKC,QAAL,CAAc,kBAAd;;AAEAC,SAAS,eAAT,EAA0B,YAAM;AAC9B,MAAMC,qBACJ,6CACA,mCAFF;AAGA,MAAIC,sBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,iBAAJ;AACA,MAAIC,kBAAJ;AACA,MAAIC,eAAJ;;AAEAC,aAAW,YAAM;AACfL,oBAAgBM,QAAQ,kBAAR,CAAhB;AACAL,YAAQK,QAAQ,OAAR,CAAR;AACAJ,eAAWI,QAAQ,WAAR,CAAX;AACAH,gBAAYG,QAAQ,sBAAR,CAAZ;AACAF,aAASE,QAAQP,kBAAR,CAAT;AACD,GAND;;AAQA,WAASQ,MAAT,GAEE;AAAA,QADAC,KACA,uEADQ,EAAEC,cAAc,CAAhB,EAAmBC,UAAUd,KAAKe,SAAL,EAA7B,EAA+CP,QAAQA,MAAvD,EACR;;AACA,WAAOD,UAAUS,kBAAV,CAA6B,oBAAC,aAAD,EAAmBJ,KAAnB,CAA7B,CAAP;AACD;;AAEDK,KAAG,mCAAH,EAAwC,YAAM;AAC5C,QAAMH,WAAWd,KAAKe,SAAL,EAAjB;AACA,QAAMG,YAAYP,QAAlB;AACA,QAAMQ,WAAWD,UAAUE,IAAV,CAAeD,QAAhC;AACA,QAAME,cAAcH,UAAUE,IAAV,CAAeD,QAAf,CAAwBP,KAAxB,CAA8BU,OAA9B,CAAsC,CAAtC,EAAyCC,KAA7D;;AAEAC,WAAON,SAAP,EAAkBO,WAAlB;AACAD,WAAON,UAAUN,KAAV,CAAgBE,QAAvB,EAAiCY,GAAjC,CAAqCC,UAArC;AACAR,aAASP,KAAT,CAAeE,QAAf,CAAwBO,WAAxB;AACAG,WAAON,UAAUN,KAAV,CAAgBE,QAAvB,EAAiCc,cAAjC,CAAgD,CAAhD;AACD,GAVD;;AAYAX,KAAG,oDAAH,EAAyD,YAAM;AAC7D,QAAMH,WAAWd,KAAKe,SAAL,EAAjB;AACA,QAAMG,YAAYP,QAAlB;;AAEAa,WAAON,UAAUW,KAAV,CAAgBhB,YAAvB,EAAqCiB,OAArC,CAA6C,CAA7C;AACAZ,cAAUa,yBAAV,CAAoC;AAClClB,oBAAc;AADoB,KAApC;AAGAW,WAAON,UAAUW,KAAV,CAAgBhB,YAAvB,EAAqCiB,OAArC,CAA6C,CAA7C;AACD,GATD;AAUD,CA9CD","file":"ArrowSelector-test.js","sourcesContent":["jest.dontMock(\"../ArrowSelector\");\n\ndescribe(\"ArrowSelector\", () => {\n  const plotlyjsBundlePath =\n    \"../../../../../../../../plotlyjs/static/\" +\n    \"plotlyjs/build/plotlyjs-bundle.js\";\n  let ArrowSelector;\n  let React;\n  let ReactDOM;\n  let TestUtils;\n  let Plotly;\n\n  beforeEach(() => {\n    ArrowSelector = require(\"../ArrowSelector\");\n    React = require(\"react\");\n    ReactDOM = require(\"react-dom\");\n    TestUtils = require(\"react-dom/test-utils\");\n    Plotly = require(plotlyjsBundlePath);\n  });\n\n  function render(\n    props = { activeOption: 3, onChange: jest.genMockFn(), Plotly: Plotly }\n  ) {\n    return TestUtils.renderIntoDocument(<ArrowSelector {...props} />);\n  }\n\n  it(\"passes on the new value on change\", () => {\n    const onChange = jest.genMockFn();\n    const component = render();\n    const dropdown = component.refs.dropdown;\n    const firstOption = component.refs.dropdown.props.options[0].value;\n\n    expect(component).toBeDefined();\n    expect(component.props.onChange).not.toBeCalled();\n    dropdown.props.onChange(firstOption);\n    expect(component.props.onChange).toBeCalledWith(0);\n  });\n\n  it(\"should update local state on new props from parent\", () => {\n    const onChange = jest.genMockFn();\n    const component = render();\n\n    expect(component.state.activeOption).toEqual(3);\n    component.componentWillReceiveProps({\n      activeOption: 7,\n    });\n    expect(component.state.activeOption).toEqual(7);\n  });\n});\n"]}