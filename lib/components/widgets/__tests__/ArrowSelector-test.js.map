{"version":3,"sources":["../../../../src/components/widgets/__tests__/ArrowSelector-test.js"],"names":["jest","dontMock","describe","plotlyjsBundlePath","ArrowSelector","React","ReactDOM","TestUtils","Plotly","beforeEach","require","render","props","activeOption","onChange","genMockFn","renderIntoDocument","it","component","dropdown","refs","firstOption","options","value","expect","toBeDefined","not","toBeCalled","toBeCalledWith","state","toEqual","componentWillReceiveProps"],"mappings":";;AAAAA,KAAKC,QAAL,CAAc,kBAAd;;AAEAC,SAAS,eAAT,EAA0B,YAAM;;AAE5B,QAAMC,qBAAqB,6CACA,mCAD3B;AAEA,QAAIC,sBAAJ;AACA,QAAIC,cAAJ;AACA,QAAIC,iBAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,eAAJ;;AAEAC,eAAW,YAAM;AACbL,wBAAgBM,QAAQ,kBAAR,CAAhB;AACAL,gBAAQK,QAAQ,OAAR,CAAR;AACAJ,mBAAWI,QAAQ,WAAR,CAAX;AACAH,oBAAYG,QAAQ,sBAAR,CAAZ;AACAF,iBAASE,QAAQP,kBAAR,CAAT;AACH,KAND;;AAQA,aAASQ,MAAT,GAAuF;AAAA,YAAvEC,KAAuE,uEAA/D,EAACC,cAAc,CAAf,EAAkBC,UAAUd,KAAKe,SAAL,EAA5B,EAA8CP,QAAQA,MAAtD,EAA+D;;AACnF,eAAOD,UAAUS,kBAAV,CAA6B,oBAAC,aAAD,EAAmBJ,KAAnB,CAA7B,CAAP;AACH;;AAEDK,OAAG,mCAAH,EAAwC,YAAM;AAC1C,YAAMH,WAAWd,KAAKe,SAAL,EAAjB;AACA,YAAMG,YAAYP,QAAlB;AACA,YAAMQ,WAAWD,UAAUE,IAAV,CAAeD,QAAhC;AACA,YAAME,cAAcH,UAAUE,IAAV,CAAeD,QAAf,CAAwBP,KAAxB,CAA8BU,OAA9B,CAAsC,CAAtC,EAAyCC,KAA7D;;AAEAC,eAAON,SAAP,EAAkBO,WAAlB;AACAD,eAAON,UAAUN,KAAV,CAAgBE,QAAvB,EAAiCY,GAAjC,CAAqCC,UAArC;AACAR,iBAASP,KAAT,CAAeE,QAAf,CAAwBO,WAAxB;AACAG,eAAON,UAAUN,KAAV,CAAgBE,QAAvB,EAAiCc,cAAjC,CAAgD,CAAhD;AAEH,KAXD;;AAaAX,OAAG,oDAAH,EAAyD,YAAM;AAC3D,YAAMH,WAAWd,KAAKe,SAAL,EAAjB;AACA,YAAMG,YAAYP,QAAlB;;AAEAa,eAAON,UAAUW,KAAV,CAAgBhB,YAAvB,EAAqCiB,OAArC,CAA6C,CAA7C;AACAZ,kBAAUa,yBAAV,CAAoC;AAChClB,0BAAc;AADkB,SAApC;AAGAW,eAAON,UAAUW,KAAV,CAAgBhB,YAAvB,EAAqCiB,OAArC,CAA6C,CAA7C;AACH,KATD;AAUH,CA7CD","file":"ArrowSelector-test.js","sourcesContent":["jest.dontMock('../ArrowSelector');\n\ndescribe('ArrowSelector', () => {\n\n    const plotlyjsBundlePath = '../../../../../../../../plotlyjs/static/' +\n                               'plotlyjs/build/plotlyjs-bundle.js';\n    let ArrowSelector;\n    let React;\n    let ReactDOM;\n    let TestUtils;\n    let Plotly;\n\n    beforeEach(() => {\n        ArrowSelector = require('../ArrowSelector');\n        React = require('react');\n        ReactDOM = require('react-dom');\n        TestUtils = require('react-dom/test-utils');\n        Plotly = require(plotlyjsBundlePath);\n    });\n\n    function render(props = {activeOption: 3, onChange: jest.genMockFn(), Plotly: Plotly}) {\n        return TestUtils.renderIntoDocument(<ArrowSelector {...props} />);\n    }\n\n    it('passes on the new value on change', () => {\n        const onChange = jest.genMockFn();\n        const component = render();\n        const dropdown = component.refs.dropdown;\n        const firstOption = component.refs.dropdown.props.options[0].value;\n\n        expect(component).toBeDefined();\n        expect(component.props.onChange).not.toBeCalled();\n        dropdown.props.onChange(firstOption);\n        expect(component.props.onChange).toBeCalledWith(0);\n\n    });\n\n    it('should update local state on new props from parent', () => {\n        const onChange = jest.genMockFn();\n        const component = render();\n\n        expect(component.state.activeOption).toEqual(3);\n        component.componentWillReceiveProps({\n            activeOption: 7\n        });\n        expect(component.state.activeOption).toEqual(7);\n    });\n});\n"]}