{"version":3,"sources":["../../../../src/components/widgets/__tests__/TabPanel-test.js"],"names":["selectedClass","tabs","key","label","TabOneComponent","TabTwoComponent","components","A","B","describe","it","component","tabEls","find","expect","length","toBe","firstTab","first","secondTab","last","firstTabLabel","secondTabLabel","text","prop","hasClass","onTabChange","jest","genMockFn","firstTabKey","secondTabKey","simulate","toBeCalledWith"],"mappings":"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","file":"TabPanel-test.js","sourcesContent":["import React from \"react\";\nimport { mount } from \"enzyme\";\n\nimport TabPanel from \"../TabPanel\";\n\nconst selectedClass = \"tab-panel__tab--selected\";\n\nconst tabs = [{ key: \"A\", label: \"a\" }, { key: \"B\", label: \"b\" }];\n\nconst TabOneComponent = () => <div />;\nconst TabTwoComponent = () => <div />;\n\nconst components = {\n  A: TabOneComponent,\n  B: TabTwoComponent,\n};\n\ndescribe(\"TabPanel\", () => {\n  it(\"renders configured tabs\", () => {\n    const component = mount(\n      <TabPanel components={components} onTabChange={() => {}} tabs={tabs} />\n    );\n\n    const tabEls = component.find(\"li\");\n    expect(tabEls.length).toBe(tabs.length);\n\n    const firstTab = tabEls.first();\n    const secondTab = tabEls.last();\n\n    const firstTabLabel = tabs[0].label;\n    const secondTabLabel = tabs[1].label;\n\n    expect(firstTab.text()).toBe(firstTabLabel);\n    expect(firstTab.prop(\"data-role\")).toBe(\"button\");\n\n    expect(secondTab.text()).toBe(secondTabLabel);\n    expect(secondTab.prop(\"data-role\")).toBe(\"button\");\n  });\n\n  it(\"selects first tab by default\", () => {\n    const component = mount(\n      <TabPanel components={components} onTabChange={() => {}} tabs={tabs} />\n    );\n\n    const tabEls = component.find(\"li\");\n    const firstTab = tabEls.first();\n    const secondTab = tabEls.last();\n\n    expect(firstTab.hasClass(selectedClass)).toBe(true);\n    expect(firstTab.prop(\"data-pressed\")).toBe(true);\n\n    expect(secondTab.hasClass(selectedClass)).toBe(false);\n    expect(secondTab.prop(\"data-pressed\")).toBe(false);\n  });\n\n  it(\"selects tab according to passed in `selectedTab`prop\", () => {\n    const component = mount(\n      <TabPanel\n        components={components}\n        onTabChange={() => {}}\n        selectedTab={tabs[1].key}\n        tabs={tabs}\n      />\n    );\n\n    const tabEls = component.find(\"li\");\n    const firstTab = tabEls.first();\n    const secondTab = tabEls.last();\n\n    expect(firstTab.hasClass(selectedClass)).toBe(false);\n    expect(firstTab.prop(\"data-pressed\")).toBe(false);\n\n    expect(secondTab.hasClass(selectedClass)).toBe(true);\n    expect(secondTab.prop(\"data-pressed\")).toBe(true);\n  });\n\n  it(\"calls back with current and next tab keys when tab is clicked\", () => {\n    const onTabChange = jest.genMockFn();\n\n    const component = mount(\n      <TabPanel components={components} onTabChange={onTabChange} tabs={tabs} />\n    );\n\n    const tabEls = component.find(\"li\");\n    const secondTab = tabEls.last();\n    const firstTabKey = tabs[0].key;\n    const secondTabKey = tabs[1].key;\n\n    secondTab.simulate(\"click\");\n\n    expect(onTabChange).toBeCalledWith(firstTabKey, secondTabKey);\n  });\n});\n"]}