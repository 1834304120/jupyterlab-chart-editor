{"version":3,"sources":["../../../../src/components/widgets/__tests__/AnchorPositioning-test.js"],"names":["describe","render","customProps","onOptionChange","jest","fn","props","activeOption","it","component","selectedOption","find","filterWhere","e","checked","expect","length","toBe","value","topLeftOption","onChange","target","toBeCalledWith","bottomRightOption"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAChC,aAASC,MAAT,CAAgBC,WAAhB,EAA6B;AACzB,YAAMC,iBAAiBC,KAAKC,EAAL,EAAvB;AACA,YAAMC,QAAQJ,eAAe;AACzBC,0CADyB;AAEzBI,0BAAc;AAFW,SAA7B;;AAKA,eAAO,mBAAM,2DAAuBD,KAAvB,CAAN,CAAP;AACH;;AAEDE,OAAG,gDAAH,EAAqD,YAAM;AACvD,YAAMC,YAAYR,QAAlB;;AAEA,YAAMS,iBAAiBD,UAAUE,IAAV,CAAe,oBAAf,EAClBC,WADkB,CACN;AAAA,mBAAKC,EAAEP,KAAF,GAAUQ,OAAf;AAAA,SADM,CAAvB;;AAGAC,eAAOL,eAAeM,MAAtB,EAA8BC,IAA9B,CAAmC,CAAnC;AACAF,eAAOL,eAAeJ,KAAf,GAAuBY,KAA9B,EAAqCD,IAArC,CAA0C,eAA1C;AACH,KARD;;AAUAT,OAAG,wCAAH,EAA6C,YAAM;AAC/C,YAAMC,YAAYR,QAAlB;;AAEA,YAAMkB,gBAAgBV,UAAUE,IAAV,CAAe,oBAAf,EACjBC,WADiB,CACL;AAAA,mBAAKC,EAAEP,KAAF,GAAUY,KAAV,KAAoB,UAAzB;AAAA,SADK,CAAtB;;AAGAC,sBAAcb,KAAd,GAAsBc,QAAtB,CAA+B,EAACC,QAAQ,EAACH,OAAOC,cAAcb,KAAd,GAAsBY,KAA9B,EAAT,EAA/B;;AAEAH,eAAON,UAAUH,KAAV,GAAkBH,cAAzB,EAAyCmB,cAAzC,CAAwD,UAAxD;;AAEA,YAAMC,oBAAoBd,UAAUE,IAAV,CAAe,oBAAf,EACrBC,WADqB,CACT;AAAA,mBAAKC,EAAEP,KAAF,GAAUY,KAAV,KAAoB,cAAzB;AAAA,SADS,CAA1B;;AAGAK,0BAAkBjB,KAAlB,GAA0Bc,QAA1B,CAAmC,EAACC,QAAQ,EAACH,OAAOK,kBAAkBjB,KAAlB,GAA0BY,KAAlC,EAAT,EAAnC;AACAH,eAAON,UAAUH,KAAV,GAAkBH,cAAzB,EAAyCmB,cAAzC,CAAwD,cAAxD;AACH,KAfD;AAgBH,CArCD","file":"AnchorPositioning-test.js","sourcesContent":["import AnchorPositioning from '../AnchorPositioning';\nimport React from 'react';\nimport {mount} from 'enzyme';\n\ndescribe('AnchorPositioning', () => {\n    function render(customProps) {\n        const onOptionChange = jest.fn();\n        const props = customProps || {\n            onOptionChange,\n            activeOption: 'middle center'\n        };\n\n        return mount(<AnchorPositioning {...props} />);\n    }\n\n    it('initialy checks only the default active option', () => {\n        const component = render();\n\n        const selectedOption = component.find('.radio-item__input')\n            .filterWhere(e => e.props().checked);\n\n        expect(selectedOption.length).toBe(1);\n        expect(selectedOption.props().value).toBe('middle center');\n    });\n\n    it('fires our onOptionChange prop onChange', () => {\n        const component = render();\n\n        const topLeftOption = component.find('.radio-item__input')\n            .filterWhere(e => e.props().value === 'top left');\n\n        topLeftOption.props().onChange({target: {value: topLeftOption.props().value}});\n\n        expect(component.props().onOptionChange).toBeCalledWith('top left');\n\n        const bottomRightOption = component.find('.radio-item__input')\n            .filterWhere(e => e.props().value === 'bottom right');\n\n        bottomRightOption.props().onChange({target: {value: bottomRightOption.props().value}});\n        expect(component.props().onOptionChange).toBeCalledWith('bottom right');\n    });\n});\n"]}