{"version":3,"sources":["../../../../src/components/widgets/__tests__/AnchorPositioning-test.js"],"names":["describe","render","customProps","onOptionChange","jest","fn","props","activeOption","it","component","selectedOption","find","filterWhere","e","checked","expect","length","toBe","value","topLeftOption","onChange","target","toBeCalledWith","bottomRightOption"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAClC,WAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAC3B,QAAMC,iBAAiBC,KAAKC,EAAL,EAAvB;AACA,QAAMC,QAAQJ,eAAe;AAC3BC,oCAD2B;AAE3BI,oBAAc;AAFa,KAA7B;;AAKA,WAAO,mBAAM,2DAAuBD,KAAvB,CAAN,CAAP;AACD;;AAEDE,KAAG,gDAAH,EAAqD,YAAM;AACzD,QAAMC,YAAYR,QAAlB;;AAEA,QAAMS,iBAAiBD,UACpBE,IADoB,CACf,oBADe,EAEpBC,WAFoB,CAER;AAAA,aAAKC,EAAEP,KAAF,GAAUQ,OAAf;AAAA,KAFQ,CAAvB;;AAIAC,WAAOL,eAAeM,MAAtB,EAA8BC,IAA9B,CAAmC,CAAnC;AACAF,WAAOL,eAAeJ,KAAf,GAAuBY,KAA9B,EAAqCD,IAArC,CAA0C,eAA1C;AACD,GATD;;AAWAT,KAAG,wCAAH,EAA6C,YAAM;AACjD,QAAMC,YAAYR,QAAlB;;AAEA,QAAMkB,gBAAgBV,UACnBE,IADmB,CACd,oBADc,EAEnBC,WAFmB,CAEP;AAAA,aAAKC,EAAEP,KAAF,GAAUY,KAAV,KAAoB,UAAzB;AAAA,KAFO,CAAtB;;AAIAC,kBACGb,KADH,GAEGc,QAFH,CAEY,EAAEC,QAAQ,EAAEH,OAAOC,cAAcb,KAAd,GAAsBY,KAA/B,EAAV,EAFZ;;AAIAH,WAAON,UAAUH,KAAV,GAAkBH,cAAzB,EAAyCmB,cAAzC,CAAwD,UAAxD;;AAEA,QAAMC,oBAAoBd,UACvBE,IADuB,CAClB,oBADkB,EAEvBC,WAFuB,CAEX;AAAA,aAAKC,EAAEP,KAAF,GAAUY,KAAV,KAAoB,cAAzB;AAAA,KAFW,CAA1B;;AAIAK,sBACGjB,KADH,GAEGc,QAFH,CAEY,EAAEC,QAAQ,EAAEH,OAAOK,kBAAkBjB,KAAlB,GAA0BY,KAAnC,EAAV,EAFZ;AAGAH,WAAON,UAAUH,KAAV,GAAkBH,cAAzB,EAAyCmB,cAAzC,CAAwD,cAAxD;AACD,GArBD;AAsBD,CA5CD","file":"AnchorPositioning-test.js","sourcesContent":["import AnchorPositioning from \"../AnchorPositioning\";\nimport React from \"react\";\nimport { mount } from \"enzyme\";\n\ndescribe(\"AnchorPositioning\", () => {\n  function render(customProps) {\n    const onOptionChange = jest.fn();\n    const props = customProps || {\n      onOptionChange,\n      activeOption: \"middle center\",\n    };\n\n    return mount(<AnchorPositioning {...props} />);\n  }\n\n  it(\"initialy checks only the default active option\", () => {\n    const component = render();\n\n    const selectedOption = component\n      .find(\".radio-item__input\")\n      .filterWhere(e => e.props().checked);\n\n    expect(selectedOption.length).toBe(1);\n    expect(selectedOption.props().value).toBe(\"middle center\");\n  });\n\n  it(\"fires our onOptionChange prop onChange\", () => {\n    const component = render();\n\n    const topLeftOption = component\n      .find(\".radio-item__input\")\n      .filterWhere(e => e.props().value === \"top left\");\n\n    topLeftOption\n      .props()\n      .onChange({ target: { value: topLeftOption.props().value } });\n\n    expect(component.props().onOptionChange).toBeCalledWith(\"top left\");\n\n    const bottomRightOption = component\n      .find(\".radio-item__input\")\n      .filterWhere(e => e.props().value === \"bottom right\");\n\n    bottomRightOption\n      .props()\n      .onChange({ target: { value: bottomRightOption.props().value } });\n    expect(component.props().onOptionChange).toBeCalledWith(\"bottom right\");\n  });\n});\n"]}