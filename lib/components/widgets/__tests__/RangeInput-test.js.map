{"version":3,"sources":["../../../../src/components/widgets/__tests__/RangeInput-test.js"],"names":["describe","render","props","propsWithDefault","value","onChange","jest","genMockFn","min","max","renderIntoDocument","it","component","expect","toBeDefined","refs","inputMin","toEqual","inputMax","state","valueMin","valueMax","componentWillReceiveProps","Simulate","change","target","not","toBeCalled","minNode","keyPress","key","keyCode","which","onUpdate"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,YAAT,EAAuB,YAAM;AAC3B,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMC,mBAAmB,0BACvB;AACEC,aAAO,CAAC,CAAD,EAAI,EAAJ,CADT;AAEEC,gBAAUC,KAAKC,SAAL,EAFZ;AAGEC,WAAK,CAHP;AAIEC,WAAK;AAJP,KADuB,EAOvBP,SAAS,EAPc,CAAzB;AASA,WAAO,oBAAUQ,kBAAV,CAA6B,oDAAgBP,gBAAhB,CAA7B,CAAP;AACD;;AAEDQ,KAAG,gCAAH,EAAqC,YAAM;AACzC,QAAMC,YAAYX,QAAlB;AACAY,WAAOD,SAAP,EAAkBE,WAAlB;AACAD,WAAOD,UAAUG,IAAV,CAAeC,QAAf,CAAwBd,KAAxB,CAA8BE,KAArC,EAA4Ca,OAA5C,CAAoD,CAApD;AACAJ,WAAOD,UAAUG,IAAV,CAAeG,QAAf,CAAwBhB,KAAxB,CAA8BE,KAArC,EAA4Ca,OAA5C,CAAoD,EAApD;AACD,GALD;;AAOAN,KAAG,8DAAH,EAAmE,YAAM;AACvE,QAAMC,YAAYX,QAAlB;;AAEAY,WAAOD,UAAUO,KAAjB,EAAwBF,OAAxB,CAAgC;AAC9BG,gBAAU,CADoB;AAE9BC,gBAAU;AAFoB,KAAhC;AAIAT,cAAUU,yBAAV,CAAoC;AAClClB,aAAO,CAAC,EAAD,EAAK,EAAL;AAD2B,KAApC;AAGAS,WAAOD,UAAUO,KAAV,CAAgBC,QAAvB,EAAiCH,OAAjC,CAAyC,EAAzC;AACAJ,WAAOD,UAAUO,KAAV,CAAgBE,QAAvB,EAAiCJ,OAAjC,CAAyC,EAAzC;AACAJ,WAAOD,UAAUG,IAAV,CAAeC,QAAf,CAAwBd,KAAxB,CAA8BE,KAArC,EAA4Ca,OAA5C,CAAoD,EAApD;AACAJ,WAAOD,UAAUG,IAAV,CAAeG,QAAf,CAAwBhB,KAAxB,CAA8BE,KAArC,EAA4Ca,OAA5C,CAAoD,EAApD;AACD,GAdD;;AAgBAN,KAAG,8CAAH,EAAmD,YAAM;AACvD,QAAMC,YAAYX,QAAlB;;AAEA,wBAAUsB,QAAV,CAAmBC,MAAnB,CAA0B,2BAAYZ,UAAUG,IAAV,CAAeC,QAA3B,CAA1B,EAAgE;AAC9DS,cAAQ;AADsD,KAAhE;AAGAZ,WAAOD,UAAUV,KAAV,CAAgBG,QAAvB,EAAiCqB,GAAjC,CAAqCC,UAArC;AACA,QAAMC,UAAU,2BAAYhB,UAAUG,IAAV,CAAeC,QAA3B,CAAhB;AACA,wBAAUO,QAAV,CAAmBM,QAAnB,CAA4BD,OAA5B,EAAqC;AACnCE,WAAK,OAD8B;AAEnCC,eAAS,EAF0B;AAGnCC,aAAO;AAH4B,KAArC;AAKApB,cAAUqB,QAAV,CAAmB,CAAnB;AACD,GAdD;AAeD,CApDD","file":"RangeInput-test.js","sourcesContent":["import RangeInput from \"@workspace/components/widgets/RangeInput\";\nimport React from \"react\";\nimport TestUtils from \"react-dom/test-utils\";\nimport deepAssign from \"assign-deep\";\nimport { findDOMNode } from \"react-dom\";\n\ndescribe(\"RangeInput\", () => {\n  function render(props) {\n    const propsWithDefault = deepAssign(\n      {\n        value: [5, 24],\n        onChange: jest.genMockFn(),\n        min: 0,\n        max: 100,\n      },\n      props || {}\n    );\n    return TestUtils.renderIntoDocument(<RangeInput {...propsWithDefault} />);\n  }\n\n  it(\"renders RangeInput as expected\", () => {\n    const component = render();\n    expect(component).toBeDefined();\n    expect(component.refs.inputMin.props.value).toEqual(5);\n    expect(component.refs.inputMax.props.value).toEqual(24);\n  });\n\n  it(\"should update local state and value on new props from parent\", () => {\n    const component = render();\n\n    expect(component.state).toEqual({\n      valueMin: 5,\n      valueMax: 24,\n    });\n    component.componentWillReceiveProps({\n      value: [48, 69],\n    });\n    expect(component.state.valueMin).toEqual(48);\n    expect(component.state.valueMax).toEqual(69);\n    expect(component.refs.inputMin.props.value).toEqual(48);\n    expect(component.refs.inputMax.props.value).toEqual(69);\n  });\n\n  it(\"component text input fires our onChange prop\", () => {\n    const component = render();\n\n    TestUtils.Simulate.change(findDOMNode(component.refs.inputMin), {\n      target: 7,\n    });\n    expect(component.props.onChange).not.toBeCalled();\n    const minNode = findDOMNode(component.refs.inputMin);\n    TestUtils.Simulate.keyPress(minNode, {\n      key: \"Enter\",\n      keyCode: 13,\n      which: 13,\n    });\n    component.onUpdate(7);\n  });\n});\n"]}