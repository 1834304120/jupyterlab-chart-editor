{"version":3,"sources":["../../../../src/components/widgets/__tests__/SelectTrace-test.js"],"names":["describe","it","traceSelectHandler","jest","fn","selectedTraceValue","traceOptions","value","type","label","disabled","wrapper","options","find","get","props","icon","children","text","expect","toEqual","className","indexOf","scatter","toBeGreaterThan","toBe"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC9BC,KAAG,qDAAH,EAA0D,YAAM;AAC9D,QAAMC,qBAAqBC,KAAKC,EAAL,EAA3B;AACA,QAAMC,qBAAqB,EAA3B;AACA,QAAMC,eAAe,CACnB;AACEC,aAAO,QADT;AAEEC,YAAM,SAFR;AAGEC,aAAO,SAHT;AAIEC,gBAAU;AAJZ,KADmB,CAArB;;AASA,QAAMC,UAAU,qBACd;AACE,0BAAoBT,kBADtB;AAEE,0BAAoBG,kBAFtB;AAGE,oBAAcC;AAHhB,MADc,CAAhB;;AAZ8D,QAoBtDM,OApBsD,GAoB1CD,QAAQE,IAAR,qBAAuBC,GAAvB,CAA2B,CAA3B,EAA8BC,KApBY,CAoBtDH,OApBsD;AAAA,oBAqBrCA,QAAQ,CAAR,CArBqC;AAAA,QAqBtDL,KArBsD,aAqBtDA,KArBsD;AAAA,QAqB/CE,KArB+C,aAqB/CA,KArB+C;;;AAuB9D,QAAMO,OAAOP,MAAMM,KAAN,CAAYE,QAAZ,CAAqB,CAArB,CAAb;AACA,QAAMC,OAAOT,MAAMM,KAAN,CAAYE,QAAZ,CAAqB,CAArB,CAAb;;AAEAE,WAAOZ,KAAP,EAAca,OAAd,CAAsB,QAAtB;AACAD,WACEH,KAAKD,KAAL,CAAWM,SAAX,CAAqBC,OAArB,CAA6B,2BAAgBC,OAA7C,CADF,EAEEC,eAFF,CAEkB,CAAC,CAFnB;AAGAL,WAAOD,IAAP,EAAaO,IAAb,CAAkB,SAAlB;AACD,GA/BD;AAgCD,CAjCD","file":"SelectTrace-test.js","sourcesContent":["import React from \"react\";\nimport SelectTrace from \"../SelectTrace\";\nimport Dropdown from \"@workspace/components/widgets/Dropdown\";\nimport { CHART_TYPE_ICON } from \"@workspace/constants/workspace\";\nimport { shallow } from \"enzyme\";\n\ndescribe(\"<SelectTrace>\", () => {\n  it(\"renders <Dropdown> with a formatted list of options\", () => {\n    const traceSelectHandler = jest.fn();\n    const selectedTraceValue = \"\";\n    const traceOptions = [\n      {\n        value: \"ed45tr\",\n        type: \"scatter\",\n        label: \"Scatter\",\n        disabled: false,\n      },\n    ];\n\n    const wrapper = shallow(\n      <SelectTrace\n        traceSelectHandler={traceSelectHandler}\n        selectedTraceValue={selectedTraceValue}\n        traceOptions={traceOptions}\n      />\n    );\n\n    const { options } = wrapper.find(Dropdown).get(0).props;\n    const { value, label } = options[0];\n\n    const icon = label.props.children[0];\n    const text = label.props.children[1];\n\n    expect(value).toEqual(\"ed45tr\");\n    expect(\n      icon.props.className.indexOf(CHART_TYPE_ICON.scatter)\n    ).toBeGreaterThan(-1);\n    expect(text).toBe(\"Scatter\");\n  });\n});\n"]}