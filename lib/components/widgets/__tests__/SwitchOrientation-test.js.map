{"version":3,"sources":["../../../../src/components/widgets/__tests__/SwitchOrientation-test.js"],"names":["barTrace","type","x","y","testCases","name","input","data","orientation","traceIndex","output","restyleArray","target","relayoutObject","merge","xaxis","yaxis","layout","xaxis2","anchor","yaxis2","domain","describe","plotDiv","switchOrientationCommands","beforeEach","module","require","_fullData","visible","marker","color","_fullLayout","showlegend","title","annotations","showarrow","WorkspacePlot","__plotDiv","forEach","it","testCase","figure","get","toJS","expect","toEqual"],"mappings":"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","file":"SwitchOrientation-test.js","sourcesContent":["import R from \"ramda\";\nimport { mockFullFigure } from \"@workspace/__mocks__/figure\";\nimport { mockPlotDiv } from \"@workspace/__mocks__/plotDiv\";\n\nconst barTrace = () => ({ type: \"bar\", x: [\"A\", \"B\", \"C\"], y: [3, 1, 6] });\n\nconst testCases = [\n  {\n    name: \"simple bar charts\",\n    input: {\n      data: [barTrace()],\n      orientation: \"h\",\n      traceIndex: 0,\n    },\n    output: {\n      restyleArray: [{ data: { orientation: \"h\" }, target: 0 }],\n      relayoutObject: {\n        \"yaxis.type\": \"category\",\n        \"xaxis.type\": \"linear\",\n      },\n    },\n  },\n\n  {\n    name: \"multiple bar traces\",\n    input: {\n      data: [barTrace(), barTrace()],\n      orientation: \"h\",\n      traceIndex: 0,\n    },\n    output: {\n      restyleArray: [\n        { data: { orientation: \"h\" }, target: 0 },\n        { data: { orientation: \"h\" }, target: 1 },\n      ],\n      relayoutObject: {\n        \"yaxis.type\": \"category\",\n        \"xaxis.type\": \"linear\",\n      },\n    },\n  },\n\n  {\n    name: \"multiple bar traces in stacked subplots\",\n    input: {\n      data: [barTrace(), R.merge(barTrace(), { xaxis: \"x2\", yaxis: \"y2\" })],\n      layout: {\n        xaxis2: { anchor: \"y2\" },\n        yaxis2: { domain: [0.5, 1] },\n      },\n      orientation: \"h\",\n      traceIndex: 1,\n    },\n    output: {\n      restyleArray: [{ data: { orientation: \"h\" }, target: 1 }],\n      relayoutObject: {\n        \"yaxis2.type\": \"category\",\n        \"xaxis2.type\": \"linear\",\n      },\n    },\n  },\n\n  {\n    name: \"multiple bar traces with shared axis\",\n    input: {\n      data: [barTrace(), R.merge(barTrace(), { yaxis: \"y2\" })],\n      layout: {\n        xaxis2: { anchor: \"y2\" },\n        yaxis2: { domain: [0.5, 1] },\n      },\n      orientation: \"h\",\n      traceIndex: 0,\n    },\n    output: {\n      restyleArray: [\n        { data: { orientation: \"h\" }, target: 0 },\n        { data: { orientation: \"h\" }, target: 1 },\n      ],\n      relayoutObject: {\n        \"yaxis.type\": \"category\",\n        \"xaxis.type\": \"linear\",\n        \"yaxis2.type\": \"category\",\n      },\n    },\n  },\n\n  {\n    name: \"mixed scatter and bar\",\n    input: {\n      data: [barTrace(), R.merge(barTrace(), { type: \"scatter\" })],\n      orientation: \"h\",\n      traceIndex: 0,\n    },\n    output: {\n      restyleArray: [{ data: { orientation: \"h\" }, target: 0 }],\n      relayoutObject: {\n        \"xaxis.type\": \"linear\",\n        \"yaxis.type\": \"category\",\n      },\n    },\n  },\n];\n\ndescribe(\"SwitchOrientation\", () => {\n  let plotDiv;\n  let switchOrientationCommands;\n\n  beforeEach(() => {\n    const module = require(\"@workspace/components/widgets/SwitchOrientation\");\n    switchOrientationCommands = module.switchOrientationCommands;\n\n    // Environment will look here because it's mocked.\n\n    // styleUtils look at `_full*` attrs.\n    const _fullData = [\n      { type: \"scatter\", visible: true, marker: { color: \"blue\" } },\n      { type: \"scatter\", visible: true, marker: { color: \"orange\" } },\n    ];\n    const _fullLayout = {\n      showlegend: false,\n      xaxis: { title: \"x axis title\" },\n      annotations: [{ showarrow: false }],\n    };\n\n    // Provide the global WorkspacePlot with enough info for these utils.\n    const WorkspacePlot = require(\"@workspace/utils/Plot\").WorkspacePlot;\n    plotDiv = mockPlotDiv({ _fullData, _fullLayout });\n    WorkspacePlot.__plotDiv = plotDiv;\n  });\n\n  testCases.forEach(testCase => {\n    it(`Generates the right restyle and relayout commands for ${testCase.name}`, () => {\n      const figure = mockFullFigure(\n        testCase.input.data,\n        testCase.input.layout || {}\n      );\n      plotDiv._fullLayout = figure.get(\"layout\").toJS();\n      plotDiv._fullData = figure.get(\"data\").toJS();\n\n      const { restyleArray, relayoutObject } = switchOrientationCommands(\n        testCase.input.traceIndex,\n        testCase.input.orientation\n      );\n      expect(restyleArray).toEqual(testCase.output.restyleArray);\n      expect(relayoutObject).toEqual(testCase.output.relayoutObject);\n    });\n  });\n});\n"]}