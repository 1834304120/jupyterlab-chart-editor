{"version":3,"sources":["../../../../src/components/widgets/__tests__/DownloadDropdown-test.js"],"names":["describe","it","wrapper","expect","find","filterWhere","node","text","hasClass","toBe","loggedInUser","feature_set_id"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEAA,SAAS,oBAAT,EAA+B,YAAM;AACnCC,KAAG,8CAAH,EAAmD,YAAM;AACvD,QAAMC,UAAU,qBACd,4DAAkB,aAAa,IAA/B,EAAqC,cAAc,WAAnD,GADc,CAAhB;;AAIAC,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;;AAOAN,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,+BAHZ,CADF,EAKEC,IALF,CAKO,IALP;AAMD,GAlBD;;AAoBAR,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAMS,eAAe,yBAAS,EAAEC,gBAAgB,EAAlB,EAAT,CAArB;AACA,QAAMT,UAAU,qBACd,4DAAkB,aAAaQ,YAA/B,EAA6C,cAAc,WAA3D,GADc,CAAhB;;AAIAP,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;;AAOAN,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,+BAHZ,CADF,EAKEC,IALF,CAKO,IALP;AAMD,GAnBD;;AAqBAR,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAMS,eAAe,yBAAS,EAAEC,gBAAgB,sBAAlB,EAAT,CAArB;AACA,QAAMT,UAAU,qBACd,4DAAkB,aAAaQ,YAA/B,EAA6C,cAAc,WAA3D,GADc,CAAhB;;AAIAP,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;;AAOAN,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;AAMD,GAnBD;;AAqBAR,KAAG,6BAAH,EAAkC,YAAM;AACtC,QAAMS,eAAe,yBAAS,EAAEC,gBAAgB,YAAlB,EAAT,CAArB;AACA,QAAMT,UAAU,qBACd,4DAAkB,aAAaQ,YAA/B,EAA6C,cAAc,WAA3D,GADc,CAAhB;;AAIAP,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;;AAOAN,WACED,QACGE,IADH,CACQ,GADR,EAEGC,WAFH,CAEe;AAAA,aAAQC,KAAKC,IAAL,OAAgB,KAAxB;AAAA,KAFf,EAGGC,QAHH,CAGY,oBAHZ,CADF,EAKEC,IALF,CAKO,IALP;AAMD,GAnBD;AAoBD,CAnFD","file":"DownloadDropdown-test.js","sourcesContent":["import DownloadDropdown from \"../DownloadDropdown\";\nimport React from \"react\";\nimport { shallow } from \"enzyme\";\nimport { mockUser } from \"_utils/testUtils\";\n\ndescribe(\"<DownloadDropdown>\", () => {\n  it(\"renders community feature set when user null\", () => {\n    const wrapper = shallow(\n      <DownloadDropdown currentUser={null} graphURLBase={\"hodor.com\"} />\n    );\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PNG\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PDF\")\n        .hasClass(\"dropdown-menu-item-restricted\")\n    ).toBe(true);\n  });\n\n  it(\"renders community feature set by default\", () => {\n    const loggedInUser = mockUser({ feature_set_id: \"\" });\n    const wrapper = shallow(\n      <DownloadDropdown currentUser={loggedInUser} graphURLBase={\"hodor.com\"} />\n    );\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PNG\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PDF\")\n        .hasClass(\"dropdown-menu-item-restricted\")\n    ).toBe(true);\n  });\n\n  it(\"renders professional_2016_10 feature set\", () => {\n    const loggedInUser = mockUser({ feature_set_id: \"professional_2016_10\" });\n    const wrapper = shallow(\n      <DownloadDropdown currentUser={loggedInUser} graphURLBase={\"hodor.com\"} />\n    );\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PNG\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PDF\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n  });\n\n  it(\"renders on-prem feature set\", () => {\n    const loggedInUser = mockUser({ feature_set_id: \"on_premise\" });\n    const wrapper = shallow(\n      <DownloadDropdown currentUser={loggedInUser} graphURLBase={\"hodor.com\"} />\n    );\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PNG\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n\n    expect(\n      wrapper\n        .find(\"a\")\n        .filterWhere(node => node.text() === \"PDF\")\n        .hasClass(\"dropdown-menu-item\")\n    ).toBe(true);\n  });\n});\n"]}