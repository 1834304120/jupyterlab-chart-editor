{"version":3,"sources":["../../../../src/components/widgets/__tests__/Slider-test.js"],"names":["jest","dontMock","describe","Slider","React","ReactDOM","TestUtils","beforeEach","require","render","props","propsWithDefault","value","onChange","genMockFn","min","max","step","orientation","renderIntoDocument","it","component","sliderHandle","findRenderedDOMComponentWithClass","expect","state","toEqual","style","top","left","componentWillReceiveProps"],"mappings":";;AAEA;;;;;;AAFAA,KAAKC,QAAL,CAAc,WAAd;;AAIAC,SAAS,QAAT,EAAmB,YAAM;AACvB,MAAIC,eAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,iBAAJ;AACA,MAAIC,kBAAJ;;AAEAC,aAAW,YAAM;AACfJ,aAASK,QAAQ,WAAR,CAAT;AACAJ,YAAQI,QAAQ,OAAR,CAAR;AACAH,eAAWG,QAAQ,WAAR,CAAX;AACAF,gBAAYE,QAAQ,sBAAR,CAAZ;AACD,GALD;;AAOA,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMC,mBAAmB,0BACvB;AACEC,aAAO,EADT;AAEEC,gBAAUb,KAAKc,SAAL,EAFZ;AAGEC,WAAK,CAHP;AAIEC,WAAK,GAJP;AAKEC,YAAM,CALR;AAMEC,mBAAa;AANf,KADuB,EASvBR,SAAS,EATc,CAAzB;;AAYA,WAAOJ,UAAUa,kBAAV,CAA6B,oBAAC,MAAD,EAAYR,gBAAZ,CAA7B,CAAP;AACD;;AAEDS,KAAG,qCAAH,EAA0C,YAAM;AAC9C,QAAMC,YAAYZ,OAAO;AACvBG,aAAO;AADgB,KAAP,CAAlB;AAGA,QAAMU,eAAehB,UAAUiB,iCAAV,CACnBF,SADmB,EAEnB,gBAFmB,CAArB;AAIAG,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBC,GAA1B,EAA+BF,OAA/B,CAAuC,KAAvC;AACD,GAVD;;AAYAN,KAAG,uCAAH,EAA4C,YAAM;AAChD,QAAMC,YAAYZ,OAAO;AACvBG,aAAO,EADgB;AAEvBM,mBAAa;AAFU,KAAP,CAAlB;AAIA,QAAMI,eAAehB,UAAUiB,iCAAV,CACnBF,SADmB,EAEnB,gBAFmB,CAArB;AAIAG,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBE,IAA1B,EAAgCH,OAAhC,CAAwC,KAAxC;AACD,GAXD;;AAaAN,KAAG,kDAAH,EAAuD,YAAM;AAC3D,QAAMC,YAAYZ,QAAlB;AACA,QAAMa,eAAehB,UAAUiB,iCAAV,CACnBF,SADmB,EAEnB,gBAFmB,CAArB;AAIAG,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBC,GAA1B,EAA+BF,OAA/B,CAAuC,KAAvC;AACAL,cAAUS,yBAAV,CAAoC;AAClClB,aAAO;AAD2B,KAApC;AAGAY,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBC,GAA1B,EAA+BF,OAA/B,CAAuC,KAAvC;AACD,GAbD;;AAeAN,KAAG,oDAAH,EAAyD,YAAM;AAC7D,QAAMC,YAAYZ,OAAO;AACvBS,mBAAa;AADU,KAAP,CAAlB;AAGA,QAAMI,eAAehB,UAAUiB,iCAAV,CACnBF,SADmB,EAEnB,gBAFmB,CAArB;AAIAG,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBE,IAA1B,EAAgCH,OAAhC,CAAwC,KAAxC;AACAL,cAAUS,yBAAV,CAAoC;AAClClB,aAAO;AAD2B,KAApC;AAGAY,WAAOH,UAAUI,KAAV,CAAgBb,KAAvB,EAA8Bc,OAA9B,CAAsC,EAAtC;AACAF,WAAOF,aAAaK,KAAb,CAAmBE,IAA1B,EAAgCH,OAAhC,CAAwC,KAAxC;AACD,GAfD;AAgBD,CArFD","file":"Slider-test.js","sourcesContent":["jest.dontMock(\"../Slider\");\n\nimport deepAssign from \"assign-deep\";\n\ndescribe(\"Slider\", () => {\n  let Slider;\n  let React;\n  let ReactDOM;\n  let TestUtils;\n\n  beforeEach(() => {\n    Slider = require(\"../Slider\");\n    React = require(\"react\");\n    ReactDOM = require(\"react-dom\");\n    TestUtils = require(\"react-dom/test-utils\");\n  });\n\n  function render(props) {\n    const propsWithDefault = deepAssign(\n      {\n        value: 50,\n        onChange: jest.genMockFn(),\n        min: 0,\n        max: 100,\n        step: 5,\n        orientation: \"vertical\",\n      },\n      props || {}\n    );\n\n    return TestUtils.renderIntoDocument(<Slider {...propsWithDefault} />);\n  }\n\n  it(\"renders vertical Slider as expected\", () => {\n    const component = render({\n      value: 30,\n    });\n    const sliderHandle = TestUtils.findRenderedDOMComponentWithClass(\n      component,\n      \"slider__handle\"\n    );\n    expect(component.state.value).toEqual(30);\n    expect(sliderHandle.style.top).toEqual(\"70%\");\n  });\n\n  it(\"renders horizontal Slider as expected\", () => {\n    const component = render({\n      value: 40,\n      orientation: \"horizontal\",\n    });\n    const sliderHandle = TestUtils.findRenderedDOMComponentWithClass(\n      component,\n      \"slider__handle\"\n    );\n    expect(component.state.value).toEqual(40);\n    expect(sliderHandle.style.left).toEqual(\"40%\");\n  });\n\n  it(\"updates vertical slider on new props from parent\", () => {\n    const component = render();\n    const sliderHandle = TestUtils.findRenderedDOMComponentWithClass(\n      component,\n      \"slider__handle\"\n    );\n    expect(component.state.value).toEqual(50);\n    expect(sliderHandle.style.top).toEqual(\"50%\");\n    component.componentWillReceiveProps({\n      value: 90,\n    });\n    expect(component.state.value).toEqual(90);\n    expect(sliderHandle.style.top).toEqual(\"10%\");\n  });\n\n  it(\"updates horizontal slider on new props from parent\", () => {\n    const component = render({\n      orientation: \"horizontal\",\n    });\n    const sliderHandle = TestUtils.findRenderedDOMComponentWithClass(\n      component,\n      \"slider__handle\"\n    );\n    expect(component.state.value).toEqual(50);\n    expect(sliderHandle.style.left).toEqual(\"50%\");\n    component.componentWillReceiveProps({\n      value: 90,\n    });\n    expect(component.state.value).toEqual(90);\n    expect(sliderHandle.style.left).toEqual(\"90%\");\n  });\n});\n"]}