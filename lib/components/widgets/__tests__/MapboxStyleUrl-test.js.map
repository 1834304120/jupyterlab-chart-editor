{"version":3,"sources":["../../../../src/components/widgets/__tests__/MapboxStyleUrl-test.js"],"names":["LoggedInUserContextHolder","children","contextTypes","currentUser","isDefined","describe","render","value","feature_set_id","mapbox_access_tokens","accesstoken","context","style","jest","fn","it","wrapper","expect","toBeDefined","find","length","toBe"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,SAASA,yBAAT,OAAiD;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC/C,SAAOA,QAAP;AACD;;AAEDD,0BAA0BE,YAA1B,GAAyC;AACvCC,eAAa,mCAAkBC;AADQ,CAAzC;;AAIAC,SAAS,0BAAT,EAAqC,YAAM;AACzC,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMJ,cAAc,yBAAS;AAC3BK,sBAAgB,WADW;AAE3BC,4BAAsB,CAACF,MAAMG,WAAP;AAFK,KAAT,CAApB;;AAKA,QAAMC,UAAU,EAAER,wBAAF,EAAhB;;AAEA,WAAO,mBACL;AAAC,+BAAD;AAAA;AACE;AACE,eAAOI,KADT;AAEE,oBAAY;AACVK,iBAAOC,KAAKC,EAAL,EADG;AAEVJ,uBAAaG,KAAKC,EAAL;AAFH,SAFd;AAME,kBAAUD,KAAKC,EAAL;AANZ;AADF,KADK,EAWL,EAAEH,gBAAF,EAXK,CAAP;AAaD;;AAEDI,KAAG,0BAAH,EAA+B,YAAM;AACnC,QAAMC,UAAUV,OAAO,EAAEM,OAAO,OAAT,EAAkBF,aAAa,UAA/B,EAAP,CAAhB;AACAO,WAAOD,OAAP,EAAgBE,WAAhB;AACD,GAHD;;AAKAH,KAAG,yEAAH,EAA8E,YAAM;AAClF,QAAIC,UAAUV,OAAO,EAAEM,OAAO,OAAT,EAAkBF,aAAa,UAA/B,EAAP,CAAd;AACAO,WAAOD,QAAQG,IAAR,gCAAkCC,MAAzC,EAAiDC,IAAjD,CAAsD,CAAtD;AACAL,cAAUV,OAAO;AACfM,aAAO,6BADQ;AAEfF,mBAAa;AAFE,KAAP,CAAV;AAIAO,WAAOD,QAAQG,IAAR,gCAAkCC,MAAzC,EAAiDC,IAAjD,CAAsD,CAAtD;AACD,GARD;AASD,CAtCD","file":"MapboxStyleUrl-test.js","sourcesContent":["import { mount } from \"enzyme\";\nimport React from \"react\";\nimport MapboxStyleUrlController from \"@workspace/components/widgets/MapboxStyleUrlController\";\nimport MapboxTokenDropdown from \"@workspace/components/widgets/MapboxTokenDropdown\";\nimport { mockUser } from \"_utils/testUtils\";\nimport { currentUserOrNull } from \"@workspace/utils/customPropTypes\";\n\nfunction LoggedInUserContextHolder({ children }) {\n  return children;\n}\n\nLoggedInUserContextHolder.contextTypes = {\n  currentUser: currentUserOrNull.isDefined,\n};\n\ndescribe(\"MapboxStyleUrlController\", () => {\n  function render(value) {\n    const currentUser = mockUser({\n      feature_set_id: \"community\",\n      mapbox_access_tokens: [value.accesstoken],\n    });\n\n    const context = { currentUser };\n\n    return mount(\n      <LoggedInUserContextHolder>\n        <MapboxStyleUrlController\n          value={value}\n          updatePlot={{\n            style: jest.fn(),\n            accesstoken: jest.fn(),\n          }}\n          dispatch={jest.fn()}\n        />\n      </LoggedInUserContextHolder>,\n      { context }\n    );\n  }\n\n  it(\"renders without warnings\", () => {\n    const wrapper = render({ style: \"basic\", accesstoken: \"pk.eyJ1I\" });\n    expect(wrapper).toBeDefined();\n  });\n\n  it(\"renders accesstoken dropdown only when mapbox studio option is selected\", () => {\n    let wrapper = render({ style: \"basic\", accesstoken: \"pk.eyJ1I\" });\n    expect(wrapper.find(MapboxTokenDropdown).length).toBe(0);\n    wrapper = render({\n      style: \"mapbox://styles/veraz/cirm2\",\n      accesstoken: \"pk.eyJ1I\",\n    });\n    expect(wrapper.find(MapboxTokenDropdown).length).toBe(1);\n  });\n});\n"]}