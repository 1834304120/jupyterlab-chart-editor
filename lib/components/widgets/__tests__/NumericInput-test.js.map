{"version":3,"sources":["../../../../src/components/widgets/__tests__/NumericInput-test.js"],"names":["addTextToInput","wrapper","text","input","find","simulate","target","value","describe","render","overrideProps","props","Object","assign","step","min","max","onUpdate","jest","fn","it","increaseButton","expect","prop","toEqual","not","toBeCalled","toBeCalledWith","decreaseButton","inputField","keyCode","mockClear","defaultValue","integerOnly"],"mappings":"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","file":"NumericInput-test.js","sourcesContent":["import EditableText from \"@workspace/components/widgets/EditableText\";\nimport NumericInputStatefulWrapper from \"@workspace/components/widgets/NumericInputStatefulWrapper\";\nimport React from \"react\";\nimport { MIXED_VALUES } from \"@workspace/constants/workspace\";\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n} from \"@workspace/components/widgets/NumericInput\";\nimport { mount } from \"enzyme\";\n\nfunction addTextToInput(wrapper, text) {\n  const input = wrapper.find(EditableText).find(\"input\");\n  input.simulate(\"change\", { target: { value: text } });\n  return input;\n}\n\ndescribe(\"NumericInputStatefulWrapper\", () => {\n  function render(overrideProps = {}) {\n    const props = Object.assign(\n      {\n        value: 24,\n        step: 2,\n        min: 0,\n        max: 100,\n        onUpdate: jest.fn(),\n      },\n      overrideProps\n    );\n\n    return mount(<NumericInputStatefulWrapper {...props} />);\n  }\n\n  it(\"increases NumericInputStatefulWrapper value as expected\", () => {\n    const wrapper = render();\n    const increaseButton = wrapper.find(\".js-numeric-increase\");\n    expect(wrapper.prop(\"step\")).toEqual(2);\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n\n    increaseButton.simulate(\"click\");\n\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(26);\n  });\n\n  it(\"decreases NumericInputStatefulWrapper value as expected\", () => {\n    const wrapper = render();\n    const decreaseButton = wrapper.find(\".js-numeric-decrease\");\n\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n\n    decreaseButton.simulate(\"click\");\n\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(22);\n  });\n\n  it(\"increases NumericInputStatefulWrapper value as expected onKeyDown\", () => {\n    const onUpdate = jest.fn();\n    const wrapper = render({ onUpdate });\n\n    const inputField = wrapper.find(EditableText);\n\n    expect(wrapper.prop(\"step\")).toEqual(2);\n    expect(onUpdate).not.toBeCalled();\n\n    inputField.simulate(\"keyDown\", { keyCode: UP_ARROW });\n    expect(onUpdate).toBeCalledWith(26);\n\n    onUpdate.mockClear();\n\n    inputField.simulate(\"keyDown\", { keyCode: DOWN_ARROW });\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(22);\n  });\n\n  it(\"stays within min and max values when these props are provided\", () => {\n    let wrapper;\n\n    wrapper = render({ value: 0 });\n    wrapper.find(\".js-numeric-decrease\").simulate(\"click\");\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(0);\n\n    wrapper = render({ value: 100 });\n    wrapper.find(\".js-numeric-increase\").simulate(\"click\");\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(100);\n  });\n\n  it(\"increases NumericInputStatefulWrapper when MIXED_VALUE\", () => {\n    const wrapper = render({ value: MIXED_VALUES, min: 8 });\n    const increaseButton = wrapper.find(\".js-numeric-increase\");\n\n    increaseButton.simulate(\"click\");\n\n    // it calls update with the minumum value\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(8);\n\n    // but it will continue to render '-' until parent sends in new prop\n    expect(wrapper.find(EditableText).prop(\"text\")).toEqual(\"-\");\n  });\n\n  it(\"updates using defaultValue (when provided) on blank input\", () => {\n    const wrapper = render({ value: 2, defaultValue: 4 });\n\n    addTextToInput(wrapper, \"  \").simulate(\"blur\");\n\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(4);\n  });\n\n  it(\"doesn't update on blank input when no default provided\", () => {\n    const wrapper = render({ value: 2 });\n\n    addTextToInput(wrapper, \"  \").simulate(\"blur\");\n\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n  });\n\n  it(\"truncates integers onBlur when integerOnly\", () => {\n    const wrapper = render({ value: 2, integerOnly: true });\n\n    addTextToInput(wrapper, \"22.5\").simulate(\"blur\");\n\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(22);\n  });\n\n  it(\"calls onUpdate when bluring from MixedMode\", () => {\n    const wrapper = render({ value: MIXED_VALUES });\n\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n\n    addTextToInput(wrapper, \"22\").simulate(\"blur\");\n\n    expect(wrapper.prop(\"onUpdate\")).toBeCalledWith(22);\n  });\n\n  it('doesn\\'t call onUpdate and shows \"-\" on bad MixedMode blur', () => {\n    const wrapper = render({ value: MIXED_VALUES });\n\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n\n    addTextToInput(wrapper, \"hodor\").simulate(\"blur\");\n\n    expect(wrapper.prop(\"onUpdate\")).not.toBeCalled();\n\n    // but it will continue to render '-' until parent sends in new prop\n    expect(wrapper.find(EditableText).prop(\"text\")).toEqual(\"-\");\n  });\n});\n"]}