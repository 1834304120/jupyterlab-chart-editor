{"version":3,"sources":["../../../src/components/widgets/DateTextInput.js"],"names":["TEST_SELECTOR_CLASS","DateTextInput","props","onUpdate","bind","newValue","calendar","Plotly","Lib","isDateTime","trim","forceUpdate","editableClassName","value","displayValue","wrapperClassName","editableClass","propTypes","string","isRequired","func"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,oDAAsB,kBAA5B;;AAEP;;;;;;;;IAOqBC,a;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAGjB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAHiB;AAIlB;;;;6BAEQC,Q,EAAU;AAAA,mBACc,KAAKH,KADnB;AAAA,UACTC,QADS,UACTA,QADS;AAAA,UACCG,QADD,UACCA,QADD;;;AAGjB,UAAI,8BAAYC,MAAZ,CAAmBC,GAAnB,CAAuBC,UAAvB,CAAkCJ,SAASK,IAAT,EAAlC,EAAmDJ,QAAnD,CAAJ,EAAkE;AAChEH,iBAASE,SAASK,IAAT,EAAT;AACD,OAFD,MAEO;AACL;AACA,aAAKC,WAAL;AACD;AACF;;;6BAEQ;AAAA,oBACwC,KAAKT,KAD7C;AAAA,UACCU,iBADD,WACCA,iBADD;AAAA,UACoBC,KADpB,WACoBA,KADpB;AAAA,UAC2BP,QAD3B,WAC2BA,QAD3B;;AAEP,UAAMQ,eAAeD,kEAA4CA,KAAjE;;AAEA,UAAME,mBAAmB,0BAAW,qBAAX,CAAzB;;AAEA,UAAMC,gBAAgB,0BACpB,kBADoB,EAEpBJ,iBAFoB,EAGpBZ,mBAHoB,CAAtB;;AAMA,aACE;AAAA;AAAA,UAAK,WAAWe,gBAAhB;AACE;AACE,qBAAWC,aADb;AAEE,oBAAU,KAAKb,QAFjB;AAGE,iBAAOW,YAHT;AAIE,oBAAUR;AAJZ;AADF,OADF;AAUD;;;;;;kBAxCkBL,a;;;AA2CrBA,cAAcgB,SAAd,GAA0B;AACxBJ,SAAO,oBAAUK,MAAV,CAAiBC,UADA;AAExBhB,YAAU,oBAAUiB,IAAV,CAAeD,UAFD;AAGxBb,YAAU,oBAAUY,MAAV,CAAiBC,UAHH;AAIxBP,qBAAmB,oBAAUM;AAJL,CAA1B","file":"DateTextInput.js","sourcesContent":["import DelayedTextInput from \"@workspace/components/widgets/DelayedTextInput\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { MIXED_VALUES, MIXED_MODE_VALUE } from \"@workspace/constants/workspace\";\nimport { getWindow } from \"_utils/globalUtils\";\n\nexport const TEST_SELECTOR_CLASS = \"js-DateTextInput\";\n\n/*\n * Widget for entering datetimes.\n *\n * TODO: I'm assuming at some point we will make a dateTime picker and\n * put that in here.\n * https://github.com/plotly/streambed/issues/8441\n */\nexport default class DateTextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n\n  onUpdate(newValue) {\n    const { onUpdate, calendar } = this.props;\n\n    if (getWindow().Plotly.Lib.isDateTime(newValue.trim(), calendar)) {\n      onUpdate(newValue.trim());\n    } else {\n      // put back the previous value\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const { editableClassName, value, calendar } = this.props;\n    const displayValue = value === MIXED_VALUES ? MIXED_MODE_VALUE : value;\n\n    const wrapperClassName = classnames(\"date-input__wrapper\");\n\n    const editableClass = classnames(\n      \"date-input__date\",\n      editableClassName,\n      TEST_SELECTOR_CLASS\n    );\n\n    return (\n      <div className={wrapperClassName}>\n        <DelayedTextInput\n          className={editableClass}\n          onUpdate={this.onUpdate}\n          value={displayValue}\n          disabled={calendar === MIXED_VALUES}\n        />\n      </div>\n    );\n  }\n}\n\nDateTextInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  calendar: PropTypes.string.isRequired,\n  editableClassName: PropTypes.string,\n};\n"]}