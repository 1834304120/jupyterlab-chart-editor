{"version":3,"sources":["../../../src/components/widgets/ToolMenuItem.js"],"names":["ToolMenuItem","props","state","isOpen","toggleInfo","bind","renderErrorMessage","setState","errorMessage","childElement","children","infoBox","units","className","title","propTypes","string","isRequired","element"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,Y;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,oBAAQ;AADC,SAAb;;AAIA,cAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,cAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,OAA1B;AARe;AASlB;;;;qCAEY;AACT,iBAAKE,QAAL,CAAc,EAACJ,QAAQ,CAAC,KAAKD,KAAL,CAAWC,MAArB,EAAd;AACH;;;6CAEoB;AACjB,gBAAMK,eAAe,KAAKP,KAAL,CAAWO,YAAhC;;AAEA,gBAAIA,YAAJ,EAAkB;AACd,uBACE;AAAA;AAAA,sBAAK,WAAU,8CAAf;AACI;AAAA;AAAA;AAAOA;AAAP,qBADJ;AAEI;AACI,+BAAO,iBADX;AAEI,kCAAU,6GAFd;AAGI,iCAAS,6GAHb;AAII,mCAAW;AAJf;AAFJ,iBADF;AAWH;;AAED,mBAAO,IAAP;AACH;;;iCAEQ;;AAEL,gBAAIC,eAAe,KAAKR,KAAL,CAAWS,QAA9B;;AAEA,gBAAMC,UAAU,0BAAW,CACzB,2BADyB,CAAX,EACgB;AAC9B,4BAAY,KAAKT,KAAL,CAAWC,MADO;AAE9B,2BAAW,CAAC,KAAKD,KAAL,CAAWC;AAFO,aADhB,CAAhB;;AAMA,gBAAI,KAAKF,KAAL,CAAWW,KAAf,EAAsB;AAClBH,+BACI;AAAA;AAAA,sBAAM,WAAU,uBAAhB;AACI;AAAA;AAAA;AACK,6BAAKR,KAAL,CAAWS;AADhB,qBADJ;AAII;AAAA;AAAA,0BAAM,WAAU,iBAAhB;AACK,6BAAKT,KAAL,CAAWW;AADhB;AAJJ,iBADJ;AAWH;;AAED,mBACI;AAAA;AAAA,kBAAK,WAAW,KAAKX,KAAL,CAAWY,SAA3B;AACI;AAAA;AAAA,sBAAK,WAAU,WAAf;AACI;AAAA;AAAA,0BAAK,WAAU,kBAAf;AACI;AAAA;AAAA,8BAAK,WAAU,wBAAf;AACK,iCAAKZ,KAAL,CAAWa;AADhB;AADJ,qBADJ;AAMI;AAAA;AAAA;AACI,uCAAU;AADd;AAGI;AAAA;AAAA,8BAAK,WAAU,0BAAf;AACKL;AADL,yBAHJ;AAMK,6BAAKH,kBAAL;AANL;AANJ;AADJ,aADJ;AAmBH;;;;;;kBA/EgBN,Y;;;AAkFrBA,aAAae,SAAb,GAAyB;AACrBD,WAAO,iBAAUE,MAAV,CAAiBC,UADH;AAErBP,cAAU,iBAAUQ,OAAV,CAAkBD,UAFP;AAGrBL,WAAO,iBAAUI,MAHI;AAIrBR,kBAAc,iBAAUQ,MAJH;AAKrBH,eAAW,iBAAUG;AALA,CAAzB","file":"ToolMenuItem.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport classnames from 'classnames';\nimport ToolMenuItemSubmenu from './ToolMenuItemSubmenu';\n\nexport default class ToolMenuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false\n        };\n\n        this.toggleInfo = this.toggleInfo.bind(this);\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    }\n\n    toggleInfo() {\n        this.setState({isOpen: !this.state.isOpen});\n    }\n\n    renderErrorMessage() {\n        const errorMessage = this.props.errorMessage;\n\n        if (errorMessage) {\n            return (\n              <div className=\"menu-item__widget__layer menu-item__multiple\">\n                  <span>{errorMessage}</span>\n                  <ToolMenuItemSubmenu\n                      title={'Multiple Values'}\n                      mainText={'This input has multiple values associated with it. Changing this setting will override these custom inputs.'}\n                      subText={'Common Case: An \\'All\\' tab might display this message because the X and Y tabs contain different settings.'}\n                      iconClass={'icon-question menu-item__multiple__icon'}\n                  />\n              </div>\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n\n        let childElement = this.props.children;\n\n        const infoBox = classnames([\n          'menu-item__multiple__info'], {\n          '+visible': this.state.isOpen,\n          '+hidden': !this.state.isOpen\n        });\n\n        if (this.props.units) {\n            childElement = (\n                <span className=\"menu-item-unit__block\">\n                    <span>\n                        {this.props.children}\n                    </span>\n                    <span className=\"menu-item-units\">\n                        {this.props.units}\n                    </span>\n\n                </span>\n            );\n        }\n\n        return (\n            <div className={this.props.className}>\n                <div className=\"menu-item\">\n                    <div className=\"menu-item__title\">\n                        <div className=\"menu-item__title__text\">\n                            {this.props.title}\n                        </div>\n                    </div>\n                    <div\n                        className=\"menu-item__widget\"\n                    >\n                        <div className=\"menu-item__widget__layer\">\n                            {childElement}\n                        </div>\n                        {this.renderErrorMessage()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nToolMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n    units: PropTypes.string,\n    errorMessage: PropTypes.string,\n    className: PropTypes.string\n};\n"]}