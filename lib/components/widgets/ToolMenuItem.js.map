{"version":3,"sources":["../../../src/components/widgets/ToolMenuItem.js"],"names":["ToolMenuItem","props","state","isOpen","toggleInfo","bind","renderErrorMessage","setState","errorMessage","childElement","children","infoBox","units","className","title","propTypes","string","isRequired","element"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,Y;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,cAAQ;AADG,KAAb;;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,OAA1B;AARiB;AASlB;;;;iCAEY;AACX,WAAKE,QAAL,CAAc,EAAEJ,QAAQ,CAAC,KAAKD,KAAL,CAAWC,MAAtB,EAAd;AACD;;;yCAEoB;AACnB,UAAMK,eAAe,KAAKP,KAAL,CAAWO,YAAhC;;AAEA,UAAIA,YAAJ,EAAkB;AAChB,eACE;AAAA;AAAA,YAAK,WAAU,8CAAf;AACE;AAAA;AAAA;AAAOA;AAAP,WADF;AAEE;AACE,mBAAO,iBADT;AAEE,sBACE,6GAHJ;AAKE,qBACE,2GANJ;AAQE,uBAAW;AARb;AAFF,SADF;AAeD;;AAED,aAAO,IAAP;AACD;;;6BAEQ;AACP,UAAIC,eAAe,KAAKR,KAAL,CAAWS,QAA9B;;AAEA,UAAMC,UAAU,0BAAW,CAAC,2BAAD,CAAX,EAA0C;AACxD,oBAAY,KAAKT,KAAL,CAAWC,MADiC;AAExD,mBAAW,CAAC,KAAKD,KAAL,CAAWC;AAFiC,OAA1C,CAAhB;;AAKA,UAAI,KAAKF,KAAL,CAAWW,KAAf,EAAsB;AACpBH,uBACE;AAAA;AAAA,YAAM,WAAU,uBAAhB;AACE;AAAA;AAAA;AAAO,iBAAKR,KAAL,CAAWS;AAAlB,WADF;AAEE;AAAA;AAAA,cAAM,WAAU,iBAAhB;AAAmC,iBAAKT,KAAL,CAAWW;AAA9C;AAFF,SADF;AAMD;;AAED,aACE;AAAA;AAAA,UAAK,WAAW,KAAKX,KAAL,CAAWY,SAA3B;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACE;AAAA;AAAA,gBAAK,WAAU,wBAAf;AAAyC,mBAAKZ,KAAL,CAAWa;AAApD;AADF,WADF;AAIE;AAAA;AAAA,cAAK,WAAU,mBAAf;AACE;AAAA;AAAA,gBAAK,WAAU,0BAAf;AAA2CL;AAA3C,aADF;AAEG,iBAAKH,kBAAL;AAFH;AAJF;AADF,OADF;AAaD;;;;;;kBAtEkBN,Y;;;AAyErBA,aAAae,SAAb,GAAyB;AACvBD,SAAO,oBAAUE,MAAV,CAAiBC,UADD;AAEvBP,YAAU,oBAAUQ,OAAV,CAAkBD,UAFL;AAGvBL,SAAO,oBAAUI,MAHM;AAIvBR,gBAAc,oBAAUQ,MAJD;AAKvBH,aAAW,oBAAUG;AALE,CAAzB","file":"ToolMenuItem.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport ToolMenuItemSubmenu from \"./ToolMenuItemSubmenu\";\n\nexport default class ToolMenuItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n\n    this.toggleInfo = this.toggleInfo.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n  }\n\n  toggleInfo() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  renderErrorMessage() {\n    const errorMessage = this.props.errorMessage;\n\n    if (errorMessage) {\n      return (\n        <div className=\"menu-item__widget__layer menu-item__multiple\">\n          <span>{errorMessage}</span>\n          <ToolMenuItemSubmenu\n            title={\"Multiple Values\"}\n            mainText={\n              \"This input has multiple values associated with it. Changing this setting will override these custom inputs.\"\n            }\n            subText={\n              \"Common Case: An 'All' tab might display this message because the X and Y tabs contain different settings.\"\n            }\n            iconClass={\"icon-question menu-item__multiple__icon\"}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    let childElement = this.props.children;\n\n    const infoBox = classnames([\"menu-item__multiple__info\"], {\n      \"+visible\": this.state.isOpen,\n      \"+hidden\": !this.state.isOpen,\n    });\n\n    if (this.props.units) {\n      childElement = (\n        <span className=\"menu-item-unit__block\">\n          <span>{this.props.children}</span>\n          <span className=\"menu-item-units\">{this.props.units}</span>\n        </span>\n      );\n    }\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"menu-item\">\n          <div className=\"menu-item__title\">\n            <div className=\"menu-item__title__text\">{this.props.title}</div>\n          </div>\n          <div className=\"menu-item__widget\">\n            <div className=\"menu-item__widget__layer\">{childElement}</div>\n            {this.renderErrorMessage()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nToolMenuItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  units: PropTypes.string,\n  errorMessage: PropTypes.string,\n  className: PropTypes.string,\n};\n"]}