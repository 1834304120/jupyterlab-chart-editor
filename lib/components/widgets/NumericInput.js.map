{"version":3,"sources":["../../../src/components/widgets/NumericInput.js"],"names":["customPropTypes","UP_ARROW","DOWN_ARROW","TEST_SELECTOR_CLASS","NumericInput","props","onKeyDown","bind","incrementValue","e","keyCode","direction","step","currentValue","value","onUpdate","onChange","showArrows","wrapperClassName","editableClass","editableClassName","String","renderArrows","propTypes","customOneOfType","string","isNumeric","isNull","isDefined","func","isRequired","number","bool","defaultProps","showError"],"mappings":"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","file":"NumericInput.js","sourcesContent":["import EditableText from '@workspace/components/widgets/EditableText';\nimport React, {PropTypes, Component} from 'react';\nimport isNumeric from 'fast-isnumeric';\nimport classnames from 'classnames';\nimport * as customPropTypes from '@workspace/utils/customPropTypes';\n\nexport const UP_ARROW = 38;\nexport const DOWN_ARROW = 40;\nexport const TEST_SELECTOR_CLASS = 'js-NumericInput';\n\n\nexport default class NumericInput extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.incrementValue = this.incrementValue.bind(this);\n    }\n\n    onKeyDown(e) {\n        switch (e.keyCode) {\n            case UP_ARROW:\n                return this.incrementValue('increase');\n            case DOWN_ARROW:\n                return this.incrementValue('decrease');\n            default:\n                break;\n        }\n    }\n\n    incrementValue(direction) {\n        const step = this.props.step || 1;\n        let currentValue = this.props.value;\n\n        if (isNumeric(this.props.value)) {\n            if (direction === 'increase') {\n                currentValue = currentValue + step;\n            } else {\n                currentValue = currentValue - step;\n            }\n        }\n\n        // incrementers blur the line between blur and onChange.\n        if (this.props.onUpdate) {\n            this.props.onUpdate(currentValue);\n        } else {\n            this.props.onChange(currentValue);\n        }\n    }\n\n    renderArrows() {\n        if (!this.props.showArrows) {\n            return;\n        }\n\n        return (\n            <div className=\"numeric-input__caret-box\">\n                <div\n                    className=\"numeric-input__caret js-numeric-increase\"\n                    onClick={this.incrementValue.bind(this, 'increase')}\n                >\n                    <i className=\"icon-caret-up numeric-top-caret-modifier\" />\n                </div>\n                <div\n                    className=\"numeric-input__caret js-numeric-decrease\"\n                    onClick={this.incrementValue.bind(this, 'decrease')}\n                >\n                    <i className=\"icon-caret-down numeric-bottom-caret-modifier\" />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const wrapperClassName = classnames(\n            'numeric-input__wrapper'\n        );\n\n        const editableClass = classnames(\n            'numeric-input__number',\n            this.props.editableClassName,\n            TEST_SELECTOR_CLASS\n        );\n\n        return (\n            <div className={wrapperClassName}>\n                <EditableText\n                    className={editableClass}\n                    text={String(this.props.value)}\n                    type=\"text\"\n                    onChange={this.props.onChange}\n                    onUpdate={this.props.onUpdate}\n                    onKeyDown={this.onKeyDown}\n                />\n                {this.renderArrows()}\n            </div>\n        );\n    }\n}\n\nNumericInput.propTypes = {\n    value: customPropTypes.customOneOfType([\n        PropTypes.string,\n        customPropTypes.isNumeric,\n        customPropTypes.isNull\n    ]).isDefined,\n    onChange: PropTypes.func.isRequired,\n    onUpdate: PropTypes.func,\n    step: PropTypes.number,\n    showArrows: PropTypes.bool,\n    editableClassName: PropTypes.string\n};\n\nNumericInput.defaultProps = {\n    showError: false,\n    showArrows: true\n};\n"]}