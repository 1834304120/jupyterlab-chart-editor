{"version":3,"sources":["../../../src/components/widgets/TieredColorPicker.js"],"names":["defaultColors","TieredColorPicker","props","rgb","onChangeComplete","r","g","b","a","activeColor","backgroundColor","isOnPrem","propTypes","color","string","isRequired","shape","number","func"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAGA;;AACA;;AACA;;;;;;AAEA;AACO,IAAMA,wCAAgB,CACzB,SADyB,EAEzB,SAFyB,EAGzB,SAHyB,EAGb;AACZ,SAJyB,EAIb;AACZ,SALyB,EAKb;AACZ,SANyB,EAMb;AACZ,SAPyB,EAOb;AACZ,SARyB,EAQb;AACZ,SATyB,EASb;AACZ,SAVyB,EAUb;AACZ,SAXyB,EAWb;AACZ,SAZyB,CAYb;AAZa,CAAtB;;AAgBP,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,QACvBC,GADuB,GACED,KADF,CACvBC,GADuB;AAAA,QAClBC,gBADkB,GACEF,KADF,CAClBE,gBADkB;AAAA,QAEvBC,CAFuB,GAETF,GAFS,CAEvBE,CAFuB;AAAA,QAEpBC,CAFoB,GAETH,GAFS,CAEpBG,CAFoB;AAAA,QAEjBC,CAFiB,GAETJ,GAFS,CAEjBI,CAFiB;AAAA,QAEdC,CAFc,GAETL,GAFS,CAEdK,CAFc;;;AAK9B,QAAMC,cAAc;AAChBC,mCAAyBL,CAAzB,UAA+BC,CAA/B,UAAqCC,CAArC,UAA2CC,CAA3C;AADgB,KAApB;;AAIA,QAAMG,WAAW,sBAAYA,QAA7B;;AAEA,WACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA,kBAAG,WAAU,oBAAb;AACM,iBAACA,QAAD,GAAY,aAAE,2BAAF,CAAZ,GACE,aAAE,eAAF;AAFR,aADJ;AAKI;AAAA;AAAA,kBAAK,WAAU,yBAAf;AACI,kEAAgBT,KAAhB;AADJ,aALJ;AAQI;AAAA;AAAA,kBAAK,WAAU,6BAAf;AACI;AAAA;AAAA,sBAAK,WAAU,sBAAf;AACI;AAAA;AAAA,0BAAK,WAAU,qBAAf;AACI,mEAASA,KAAT;AADJ,qBADJ;AAII;AAAA;AAAA,0BAAK,WAAU,qBAAf;AACI,qEAAWA,KAAX;AADJ;AAJJ,iBADJ;AASI;AAAA;AAAA,sBAAK,WAAU,qBAAf;AACI,2EADJ;AAEI;AACI,+BAAOO,WADX;AAEI,mCAAU;AAFd;AAFJ;AATJ,aARJ;AAyBI;AAAA;AAAA,kBAAK,WAAU,2BAAf;AACI,mFACQP,KADR;AAEI,8BAAUE;AAFd;AADJ;AAzBJ,SADJ;AAiCI;AAAA;AAAA;AACI;AAAA;AAAA,kBAAG,WAAU,oBAAb;AACM,iBAACO,QAAD,GAAY,aAAE,6BAAF,CAAZ,GACE,aAAE,gBAAF;AAFR,aADJ;AAKI;AAAA;AAAA,kBAAK,WAAU,0DAAf;AACI;AACI,4BAAQX,aADZ;AAEI,6BAASI;AAFb;AADJ;AALJ;AAjCJ,KADJ;AAgDH;;AAEDH,kBAAkBW,SAAlB,GAA8B;AAC1BC,WAAO,iBAAUC,MAAV,CAAiBC,UADE;AAE1BZ,SAAK,iBAAUa,KAAV,CAAgB;AACjBX,WAAG,iBAAUY,MADI;AAEjBX,WAAG,iBAAUW,MAFI;AAGjBV,WAAG,iBAAUU,MAHI;AAIjBT,WAAG,iBAAUS;AAJI,KAAhB,EAKFF,UAPuB;AAQ1BX,sBAAkB,iBAAUc,IAAV,CAAeH;AARP,CAA9B;;kBAWe,8BAAad,iBAAb,C","file":"TieredColorPicker.js","sourcesContent":["import React, {PropTypes} from 'react';\nimport Fields from 'react-color/lib/components/sketched/SketchFields';\nimport PresetColors from 'react-color/lib/components/sketched/SketchPresetColors';\nimport {\n    Alpha, Hue, Saturation, Checkboard\n} from 'react-color/lib/components/common';\nimport {CustomPicker} from 'react-color';\nimport {_} from '@common/utils/i18n';\nimport Environment from '@common/utils/environment';\n\n// Plotly JS default colors.\nexport const defaultColors = [\n    '#444444',\n    '#ffffff',\n    '#1f77b4',  // muted blue\n    '#ff7f0e',  // safety orange\n    '#2ca02c',  // cooked asparagus green\n    '#d62728',  // brick red\n    '#9467bd',  // muted purple\n    '#8c564b',  // chestnut brown\n    '#e377c2',  // raspberry yogurt pink\n    '#7f7f7f',  // middle gray\n    '#bcbd22',  // curry yellow-green\n    '#17becf'   // blue-teal\n];\n\n\nfunction TieredColorPicker(props) {\n    const {rgb, onChangeComplete} = props;\n    const {r, g, b, a} = rgb;\n\n\n    const activeColor = {\n        backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`\n    };\n\n    const isOnPrem = Environment.isOnPrem;\n\n    return (\n        <div>\n            <div>\n                <p className=\"color-picker-title\">\n                    { !isOnPrem ? _('Custom colors (Pro users)') :\n                        _('Custom colors')}\n                </p>\n                <div className=\"color-picker-saturation\">\n                    <Saturation {...props} />\n                </div>\n                <div className=\"color-picker-controls +flex\">\n                    <div className=\"color-picker-sliders\">\n                        <div className=\"color-picker-slider\">\n                            <Hue {...props}/>\n                        </div>\n                        <div className=\"color-picker-slider\">\n                            <Alpha {...props}/>\n                        </div>\n                    </div>\n                    <div className=\"color-picker-active\">\n                        <Checkboard />\n                        <div\n                            style={activeColor}\n                            className=\"color-picker-active-swatch\"\n                        />\n                    </div>\n                </div>\n                <div className=\"color-picker-custom-input\">\n                    <Fields\n                        {...props}\n                        onChange={onChangeComplete}\n                    />\n                </div>\n            </div>\n            <div>\n                <p className=\"color-picker-title\">\n                    { !isOnPrem ? _('Default colors (Free users)') :\n                        _('Default colors') }\n                </p>\n                <div className=\"color-picker-preset-colors js-color-picker-preset-colors\">\n                    <PresetColors\n                        colors={defaultColors}\n                        onClick={onChangeComplete}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nTieredColorPicker.propTypes = {\n    color: PropTypes.string.isRequired,\n    rgb: PropTypes.shape({\n        r: PropTypes.number,\n        g: PropTypes.number,\n        b: PropTypes.number,\n        a: PropTypes.number\n    }).isRequired,\n    onChangeComplete: PropTypes.func.isRequired\n};\n\nexport default CustomPicker(TieredColorPicker);\n"]}