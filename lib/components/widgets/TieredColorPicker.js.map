{"version":3,"sources":["../../../src/components/widgets/TieredColorPicker.js"],"names":["defaultColors","TieredColorPicker","props","rgb","onChangeComplete","r","g","b","a","activeColor","backgroundColor","propTypes","color","string","isRequired","shape","number","func"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAMA;;AACA;;;;AAEA;AACO,IAAMA,wCAAgB,CAC3B,SAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAGhB;AACX,SAJ2B,EAIhB;AACX,SAL2B,EAKhB;AACX,SAN2B,EAMhB;AACX,SAP2B,EAOhB;AACX,SAR2B,EAQhB;AACX,SAT2B,EAShB;AACX,SAV2B,EAUhB;AACX,SAX2B,EAWhB;AACX,SAZ2B,CAAtB;;AAeP,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,MACxBC,GADwB,GACED,KADF,CACxBC,GADwB;AAAA,MACnBC,gBADmB,GACEF,KADF,CACnBE,gBADmB;AAAA,MAExBC,CAFwB,GAETF,GAFS,CAExBE,CAFwB;AAAA,MAErBC,CAFqB,GAETH,GAFS,CAErBG,CAFqB;AAAA,MAElBC,CAFkB,GAETJ,GAFS,CAElBI,CAFkB;AAAA,MAEfC,CAFe,GAETL,GAFS,CAEfK,CAFe;;;AAIhC,MAAMC,cAAc;AAClBC,+BAAyBL,CAAzB,UAA+BC,CAA/B,UAAqCC,CAArC,UAA2CC,CAA3C;AADkB,GAApB;;AAIA,SACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,UAAG,WAAU,oBAAb;AACG,wBAAE,eAAF;AADH,OADF;AAIE;AAAA;AAAA,UAAK,WAAU,yBAAf;AACE,0DAAgBN,KAAhB;AADF,OAJF;AAOE;AAAA;AAAA,UAAK,WAAU,6BAAf;AACE;AAAA;AAAA,YAAK,WAAU,sBAAf;AACE;AAAA;AAAA,cAAK,WAAU,qBAAf;AACE,uDAASA,KAAT;AADF,WADF;AAIE;AAAA;AAAA,cAAK,WAAU,qBAAf;AACE,yDAAWA,KAAX;AADF;AAJF,SADF;AASE;AAAA;AAAA,YAAK,WAAU,qBAAf;AACE,iEADF;AAEE,iDAAK,OAAOO,WAAZ,EAAyB,WAAU,4BAAnC;AAFF;AATF,OAPF;AAqBE;AAAA;AAAA,UAAK,WAAU,2BAAf;AACE,2EAAYP,KAAZ,IAAmB,UAAUE,gBAA7B;AADF;AArBF,KADF;AA0BE;AAAA;AAAA;AACE;AAAA;AAAA,UAAG,WAAU,oBAAb;AACG,wBAAE,gBAAF;AADH,OADF;AAIE;AAAA;AAAA,UAAK,WAAU,0DAAf;AACE,sEAAc,QAAQJ,aAAtB,EAAqC,SAASI,gBAA9C;AADF;AAJF;AA1BF,GADF;AAqCD;;AAEDH,kBAAkBU,SAAlB,GAA8B;AAC5BC,SAAO,oBAAUC,MAAV,CAAiBC,UADI;AAE5BX,OAAK,oBAAUY,KAAV,CAAgB;AACnBV,OAAG,oBAAUW,MADM;AAEnBV,OAAG,oBAAUU,MAFM;AAGnBT,OAAG,oBAAUS,MAHM;AAInBR,OAAG,oBAAUQ;AAJM,GAAhB,EAKFF,UAPyB;AAQ5BV,oBAAkB,oBAAUa,IAAV,CAAeH;AARL,CAA9B;;kBAWe,8BAAab,iBAAb,C","file":"TieredColorPicker.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Fields from \"react-color/lib/components/sketch/SketchFields\";\nimport PresetColors from \"react-color/lib/components/sketch/SketchPresetColors\";\nimport {\n  Alpha,\n  Hue,\n  Saturation,\n  Checkboard,\n} from \"react-color/lib/components/common\";\nimport { CustomPicker } from \"react-color\";\nimport { _ } from \"../../common\";\n\n// Plotly JS default colors.\nexport const defaultColors = [\n  \"#444444\",\n  \"#ffffff\",\n  \"#1f77b4\", // muted blue\n  \"#ff7f0e\", // safety orange\n  \"#2ca02c\", // cooked asparagus green\n  \"#d62728\", // brick red\n  \"#9467bd\", // muted purple\n  \"#8c564b\", // chestnut brown\n  \"#e377c2\", // raspberry yogurt pink\n  \"#7f7f7f\", // middle gray\n  \"#bcbd22\", // curry yellow-green\n  \"#17becf\", // blue-teal\n];\n\nfunction TieredColorPicker(props) {\n  const { rgb, onChangeComplete } = props;\n  const { r, g, b, a } = rgb;\n\n  const activeColor = {\n    backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\n  };\n\n  return (\n    <div>\n      <div>\n        <p className=\"color-picker-title\">\n          {_(\"Custom colors\")}\n        </p>\n        <div className=\"color-picker-saturation\">\n          <Saturation {...props} />\n        </div>\n        <div className=\"color-picker-controls +flex\">\n          <div className=\"color-picker-sliders\">\n            <div className=\"color-picker-slider\">\n              <Hue {...props} />\n            </div>\n            <div className=\"color-picker-slider\">\n              <Alpha {...props} />\n            </div>\n          </div>\n          <div className=\"color-picker-active\">\n            <Checkboard />\n            <div style={activeColor} className=\"color-picker-active-swatch\" />\n          </div>\n        </div>\n        <div className=\"color-picker-custom-input\">\n          <Fields {...props} onChange={onChangeComplete} />\n        </div>\n      </div>\n      <div>\n        <p className=\"color-picker-title\">\n          {_(\"Default colors\")}\n        </p>\n        <div className=\"color-picker-preset-colors js-color-picker-preset-colors\">\n          <PresetColors colors={defaultColors} onClick={onChangeComplete} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTieredColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  rgb: PropTypes.shape({\n    r: PropTypes.number,\n    g: PropTypes.number,\n    b: PropTypes.number,\n    a: PropTypes.number,\n  }).isRequired,\n  onChangeComplete: PropTypes.func.isRequired,\n};\n\nexport default CustomPicker(TieredColorPicker);\n"]}