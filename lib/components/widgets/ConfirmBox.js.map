{"version":3,"sources":["../../../src/components/widgets/ConfirmBox.js"],"names":["baseConfirmBoxClassName","baseConfirmBoxWrapperClassName","headerClassName","cancelBtnClassName","baseConfirmBtnClassName","alternativeBtnClassName","propTypes","message","string","isRequired","onConfirm","func","onCancel","cancelText","confirmText","headerText","alternativeText","className","wrapperClassName","dangerous","bool","dangerouslySetMessageInnerHtml","hideCancel","onAlternative","showAlternative","defaultProps","ConfirmBox","props","Error","confirmBoxClassName","confirmBoxWrapperClassName","confirmBtnClassName","msg","innerHTML","__html","cancelBtn","confirmBtn","alternativeBtn"],"mappings":"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","file":"ConfirmBox.js","sourcesContent":["/**\n * ConfirmBox A generic div offering a 'confirm' and 'cancel' button with some\n * text that can be passed in with props.\n *\n * The main content is wrapped in another div to add additional modal-styling\n * options. Layout should be set via `className` and `wrapperClassName`.\n *\n * @module\n */\nimport React, { PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nimport { _ } from \"@common/utils/i18n\";\n\n// Just pulling some styling constants out of our render method.\nconst baseConfirmBoxClassName = classnames(\"js-confirm-box\", \"+text-center\");\nconst baseConfirmBoxWrapperClassName = classnames(\"js-confirm-box__wrapper\");\nconst headerClassName = classnames(\n  \"js-confirm-box__header\",\n  \"confirmbox__title\"\n);\nconst cancelBtnClassName = classnames(\n  \"js-confirm-box__cancel\",\n  \"btnbase\",\n  \"btn--default\",\n  \"+push-half-sides\"\n);\nconst baseConfirmBtnClassName = classnames(\n  \"js-confirm-box__confirm\",\n  \"btnbase\",\n  \"btn--primary\",\n  \"+push-half-sides\"\n);\nconst alternativeBtnClassName = classnames(\n  \"js-confirm-box__alternative\",\n  \"btnbase\",\n  \"btn--primary\",\n  \"+push-half-sides\"\n);\n\nconst propTypes = {\n  // Required props\n  message: PropTypes.string.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n\n  // Optional text\n  cancelText: PropTypes.string,\n  confirmText: PropTypes.string,\n  headerText: PropTypes.string,\n  alternativeText: PropTypes.string,\n\n  /*\n     * Optional classes & styling. You can use className and wrapperClassName\n     * to create PopStore-ready modals or custom, embedded modals.\n     */\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n\n  // Optional functionality\n  dangerous: PropTypes.bool,\n  dangerouslySetMessageInnerHtml: PropTypes.bool,\n  hideCancel: PropTypes.bool,\n  onAlternative: PropTypes.func,\n  showAlternative: PropTypes.bool,\n};\n\nconst defaultProps = {\n  // Optional text\n  cancelText: _(\"Cancel\"),\n  confirmText: _(\"Confirm\"),\n  headerText: _(\"Confirm?\"),\n  alternativeText: _(\"Alternative\"),\n\n  // Optional functionality\n  dangerous: false,\n  dangerouslySetMessageInnerHtml: false,\n  hideCancel: false,\n  showAlternative: false,\n};\n\nconst ConfirmBox = props => {\n  const {\n    alternativeText,\n    cancelText,\n    className,\n    dangerouslySetMessageInnerHtml,\n    confirmText,\n    dangerous,\n    headerText,\n    hideCancel,\n    message,\n    onAlternative,\n    onCancel,\n    onConfirm,\n    showAlternative,\n    wrapperClassName,\n  } = props;\n\n  if (showAlternative && !onAlternative) {\n    throw new Error(\"Missing onAlternative function.\");\n  }\n\n  const confirmBoxClassName = classnames(baseConfirmBoxClassName, className);\n  const confirmBoxWrapperClassName = classnames(\n    baseConfirmBoxWrapperClassName,\n    wrapperClassName\n  );\n  const confirmBtnClassName = classnames(baseConfirmBtnClassName, {\n    \"btn--danger\": dangerous,\n  });\n\n  let msg;\n  if (dangerouslySetMessageInnerHtml) {\n    const innerHTML = { __html: message };\n    msg = (\n      <p className=\"confirmbox__message\" dangerouslySetInnerHTML={innerHTML} />\n    );\n  } else {\n    msg = <p className=\"confirmbox__message\">{message}</p>;\n  }\n\n  const cancelBtn = (\n    <button className={cancelBtnClassName} onClick={onCancel}>\n      {cancelText}\n    </button>\n  );\n\n  const confirmBtn = (\n    <button className={confirmBtnClassName} onClick={onConfirm}>\n      {confirmText}\n    </button>\n  );\n\n  const alternativeBtn = (\n    <button className={alternativeBtnClassName} onClick={onAlternative}>\n      {alternativeText}\n    </button>\n  );\n\n  return (\n    <div className={confirmBoxWrapperClassName}>\n      <div className={confirmBoxClassName}>\n        <h2 className={headerClassName}>{headerText}</h2>\n\n        {msg}\n\n        <span>\n          {hideCancel ? null : cancelBtn}\n          {showAlternative ? alternativeBtn : null}\n          {confirmBtn}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nConfirmBox.propTypes = propTypes;\n\nConfirmBox.defaultProps = defaultProps;\n\nexport default ConfirmBox;\n"]}