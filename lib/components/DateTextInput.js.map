{"version":3,"sources":["../../src/components/DateTextInput.js"],"names":["TEST_SELECTOR_CLASS","DateTextInput","props","onUpdate","bind","newValue","calendar","Plotly","Lib","isDateTime","trim","forceUpdate","editableClassName","value","displayValue","wrapperClassName","editableClass","propTypes","string","isRequired","func"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,oDAAsB,kBAA5B;;AAEP;;;;;;;;IAOqBC,a;;;AAEjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACTA,KADS;;AAGf,cAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAHe;AAIlB;;;;iCAEQC,Q,EAAU;AAAA,yBACc,KAAKH,KADnB;AAAA,gBACRC,QADQ,UACRA,QADQ;AAAA,gBACEG,QADF,UACEA,QADF;;;AAGf,gBAAI,8BAAYC,MAAZ,CAAmBC,GAAnB,CAAuBC,UAAvB,CAAkCJ,SAASK,IAAT,EAAlC,EAAmDJ,QAAnD,CAAJ,EAAkE;AAC9DH,yBAASE,SAASK,IAAT,EAAT;AACH,aAFD,MAGK;AACD;AACA,qBAAKC,WAAL;AACH;AACJ;;;iCAEQ;AAAA,0BACwC,KAAKT,KAD7C;AAAA,gBACEU,iBADF,WACEA,iBADF;AAAA,gBACqBC,KADrB,WACqBA,KADrB;AAAA,gBAC4BP,QAD5B,WAC4BA,QAD5B;;AAEL,gBAAMQ,eAAgBD,iCAAD,iCACEA,KADvB;;AAGA,gBAAME,mBAAmB,0BACrB,qBADqB,CAAzB;;AAIA,gBAAMC,gBAAgB,0BAClB,kBADkB,EAElBJ,iBAFkB,EAGlBZ,mBAHkB,CAAtB;;AAMA,mBACI;AAAA;AAAA,kBAAK,WAAWe,gBAAhB;AACI;AACI,+BAAWC,aADf;AAEI,8BAAU,KAAKb,QAFnB;AAGI,2BAAOW,YAHX;AAII,8BAAUR;AAJd;AADJ,aADJ;AAUH;;;;;;kBA7CgBL,a;;;AAgDrBA,cAAcgB,SAAd,GAA0B;AACtBJ,WAAO,iBAAUK,MAAV,CAAiBC,UADF;AAEtBhB,cAAU,iBAAUiB,IAAV,CAAeD,UAFH;AAGtBb,cAAU,iBAAUY,MAAV,CAAiBC,UAHL;AAItBP,uBAAmB,iBAAUM;AAJP,CAA1B","file":"DateTextInput.js","sourcesContent":["import DelayedTextInput from '@workspace/components/widgets/DelayedTextInput';\nimport React, {Component, PropTypes} from 'react';\nimport classnames from 'classnames';\nimport {MIXED_VALUES, MIXED_MODE_VALUE} from '@workspace/constants/workspace';\nimport {getWindow} from '_utils/globalUtils';\n\nexport const TEST_SELECTOR_CLASS = 'js-DateTextInput';\n\n/*\n * Widget for entering datetimes.\n *\n * TODO: I'm assuming at some point we will make a dateTime picker and\n * put that in here.\n * https://github.com/plotly/streambed/issues/8441\n */\nexport default class DateTextInput extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onUpdate = this.onUpdate.bind(this);\n    }\n\n    onUpdate(newValue) {\n        const {onUpdate, calendar} = this.props;\n\n        if (getWindow().Plotly.Lib.isDateTime(newValue.trim(), calendar)) {\n            onUpdate(newValue.trim());\n        }\n        else {\n            // put back the previous value\n            this.forceUpdate();\n        }\n    }\n\n    render() {\n        const {editableClassName, value, calendar} = this.props;\n        const displayValue = (value === MIXED_VALUES) ?\n            MIXED_MODE_VALUE : value;\n\n        const wrapperClassName = classnames(\n            'date-input__wrapper'\n        );\n\n        const editableClass = classnames(\n            'date-input__date',\n            editableClassName,\n            TEST_SELECTOR_CLASS\n        );\n\n        return (\n            <div className={wrapperClassName}>\n                <DelayedTextInput\n                    className={editableClass}\n                    onUpdate={this.onUpdate}\n                    value={displayValue}\n                    disabled={calendar === MIXED_VALUES}\n                />\n            </div>\n        );\n    }\n}\n\nDateTextInput.propTypes = {\n    value: PropTypes.string.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    calendar: PropTypes.string.isRequired,\n    editableClassName: PropTypes.string\n};\n"]}