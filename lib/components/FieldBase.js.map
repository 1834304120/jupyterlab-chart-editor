{"version":3,"sources":["../../src/components/FieldBase.js"],"names":["SRC_ATTR_PATTERN","FieldBase","props","context","_gd","graphDiv","_index","traceIndex","_data","data","_fullData","fullData","_property","attr","_fullProperty","updatePlot","bind","_contextUpdate","handleUpdate","dataSources","dataSourceNames","state","value","fullValue","nextProps","nextContext","setState","full","undefined","show","renderField","get","newValue","set","test","contextTypes","any","array","layout","object","fullLayout","func","number","defaultProps"],"mappings":"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","file":"FieldBase.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport nestedProperty from \"plotly.js/src/lib/nested_property\";\n\nconst SRC_ATTR_PATTERN = /src$/;\n\nclass FieldBase extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this._gd = context.graphDiv;\n    this._index = context.traceIndex;\n    this._data = context.data[this._index];\n    this._fullData = context.fullData[this._index];\n    this._property = nestedProperty(this._data, this.props.attr);\n    this._fullProperty = nestedProperty(this._fullData, this.props.attr);\n    this.updatePlot = this.updatePlot.bind(this);\n    this._contextUpdate = context.handleUpdate;\n    this.dataSources = context.dataSources;\n    this.dataSourceNames = context.dataSourceNames;\n\n    this.state = {\n      value: this.fullValue,\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this._index = nextContext.traceIndex;\n    this._contextUpdate = nextContext.handleUpdate;\n\n    if (nextContext.data) {\n      this._data = nextContext.data[this._index];\n    } else {\n      this._data = [];\n    }\n\n    if (nextContext.fullData) {\n      this._fullData = nextContext.fullData[this._index];\n    } else {\n      this._fullData = [];\n    }\n  }\n\n  updatePlot(value) {\n    this.value = value;\n    this.setState({ value: value });\n    this._contextUpdate && this._contextUpdate(this.props.attr, this.value);\n  }\n\n  get value() {\n    return this._property.get();\n  }\n\n  get fullValue() {\n    if (SRC_ATTR_PATTERN.test(this.props.attr)) {\n      return this._property.get();\n    } else {\n      return this._fullProperty.get();\n    }\n  }\n\n  set value(newValue) {\n    this._property.set(newValue);\n\n    this._contextUpdate(this._gd, this._data, this.props.attr, newValue);\n  }\n\n  render() {\n    var full = this.fullValue;\n    if ((full !== undefined && full !== null) || this.props.show) {\n      return this.renderField();\n    } else {\n      return <div />;\n    }\n  }\n}\n\nFieldBase.contextTypes = {\n  graphDiv: PropTypes.any,\n  data: PropTypes.array,\n  fullData: PropTypes.array,\n  layout: PropTypes.object,\n  fullLayout: PropTypes.object,\n  handleUpdate: PropTypes.func,\n  traceIndex: PropTypes.number,\n};\n\nFieldBase.defaultProps = {\n  show: false,\n};\n\nexport default FieldBase;\n"]}