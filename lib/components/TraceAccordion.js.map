{"version":3,"sources":["../../src/components/TraceAccordion.js"],"names":["TracePanel","traceIndex","props","index","children","childContextTypes","number","TraceAccordion","context","data","renderPanel","bind","addTrace","onUpdate","nextProps","nextState","nextContext","d","i","canAdd","map","contextTypes","array","func"],"mappings":";;;;;;;;AAAA;;;;AAMA;;;;AACA;;;;;;;;;;IAEMA,U;;;;;;;;;;;sCACc;AAChB,aAAO;AACLC,oBAAY,KAAKC,KAAL,CAAWC;AADlB,OAAP;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAW,cAAI,aAAJ,EAAmB,KAAnB,EAA0B,CAAC,QAAD,CAA1B,CAAhB;AAAA;AACS,eAAKD,KAAL,CAAWC;AADpB,SADF;AAIE;AAAA;AAAA,YAAK,WAAW,cAAI,aAAJ,EAAmB,OAAnB,CAAhB;AAA8C,eAAKD,KAAL,CAAWE;AAAzD;AAJF,OADF;AAQD;;;;;;AAGHJ,WAAWK,iBAAX,GAA+B;AAC7BJ,cAAY,oBAAUK;AADO,CAA/B;;IAIMC,c;;;AACJ,0BAAYL,KAAZ,EAAmBM,OAAnB,EAA4B;AAAA;;AAAA,iIACpBN,KADoB;;AAE1B,WAAKO,IAAL,GAAYD,QAAQC,IAAR,IAAgB,EAA5B;AACA,WAAKC,WAAL,GAAmB,OAAKA,WAAL,CAAiBC,IAAjB,QAAnB;AACA,WAAKC,QAAL,GAAgB,OAAKA,QAAL,CAAcD,IAAd,QAAhB;;AAEA,WAAKE,QAAL,GAAgBL,QAAQK,QAAxB;AAN0B;AAO3B;;;;wCAEmBC,S,EAAWC,S,EAAWC,W,EAAa;AACrD,WAAKP,IAAL,GAAaO,eAAeA,YAAYP,IAA5B,IAAqC,EAAjD;AACD;;;gCAEWQ,C,EAAGC,C,EAAG;AAChB,aACE;AAAC,kBAAD;AAAA,UAAY,KAAKA,CAAjB,EAAoB,OAAOA,CAA3B;AACG,aAAKhB,KAAL,CAAWE;AADd,OADF;AAKD;;;+BAEU;AACT,WAAKS,QAAL,IAAiB,KAAKA,QAAL,CAAc,IAAd,EAAoB,EAApB,EAAwB,UAAxB,CAAjB;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACG,aAAKX,KAAL,CAAWiB,MAAX,IACC;AAAA;AAAA,YAAG,MAAK,GAAR,EAAY,SAAS,KAAKP,QAA1B;AAAA;AAAA,SAFJ;AAMG,aAAKH,IAAL,CAAUW,GAAV,CAAc,KAAKV,WAAnB;AANH,OADF;AAUD;;;;;;AAGHH,eAAec,YAAf,GAA8B;AAC5BZ,QAAM,oBAAUa,KADY;AAE5BT,YAAU,oBAAUU;AAFQ,CAA9B;;kBAKehB,c","file":"TraceAccordion.js","sourcesContent":["import React, {\n  Component,\n  Children,\n  cloneElement,\n  isValidElement,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bem } from \"../lib\";\n\nclass TracePanel extends Component {\n  getChildContext() {\n    return {\n      traceIndex: this.props.index,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={bem(\"trace-panel\", \"top\", [\"active\"])}>\n          Trace {this.props.index}\n        </div>\n        <div className={bem(\"trace-panel\", \"panel\")}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nTracePanel.childContextTypes = {\n  traceIndex: PropTypes.number,\n};\n\nclass TraceAccordion extends Component {\n  constructor(props, context) {\n    super(props);\n    this.data = context.data || [];\n    this.renderPanel = this.renderPanel.bind(this);\n    this.addTrace = this.addTrace.bind(this);\n\n    this.onUpdate = context.onUpdate;\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    this.data = (nextContext && nextContext.data) || [];\n  }\n\n  renderPanel(d, i) {\n    return (\n      <TracePanel key={i} index={i}>\n        {this.props.children}\n      </TracePanel>\n    );\n  }\n\n  addTrace() {\n    this.onUpdate && this.onUpdate(null, [], \"addTrace\");\n  }\n\n  render() {\n    return (\n      <div className=\"tracePanel\">\n        {this.props.canAdd && (\n          <a href=\"#\" onClick={this.addTrace}>\n            Add\n          </a>\n        )}\n        {this.data.map(this.renderPanel)}\n      </div>\n    );\n  }\n}\n\nTraceAccordion.contextTypes = {\n  data: PropTypes.array,\n  onUpdate: PropTypes.func,\n};\n\nexport default TraceAccordion;\n"]}