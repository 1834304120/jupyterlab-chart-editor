{"version":3,"sources":["../../src/components/AccordionMenuItem.js"],"names":["AccordionMenuItem","props","handleRemoveMenu","bind","renderMenuContent","event","removeMenuHandler","id","stopPropagation","isOpen","children","accordionMenuModifier","subMenuDisplay","display","titleColor","onToggle","iconClass","title","isRemovable","subMenuOpen","iconDirection","topIcon","titleClass","closeClass","closeIcon","titleStyling","color","propTypes","element","isRequired","string","bool","func","module","exports"],"mappings":"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","file":"AccordionMenuItem.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport classnames from 'classnames';\n\nclass AccordionMenuItem extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRemoveMenu = this.handleRemoveMenu.bind(this);\n        this.renderMenuContent = this.renderMenuContent.bind(this);\n    }\n\n    handleRemoveMenu(event) {\n        const {removeMenuHandler, id} = this.props;\n\n        event.stopPropagation();\n\n        if (typeof removeMenuHandler === 'function') {\n            removeMenuHandler(id);\n        }\n    }\n\n    renderMenuContent() {\n        const {isOpen, children, id, accordionMenuModifier} = this.props;\n\n        const subMenuDisplay = classnames(\n            'accordion-item__content',\n            `js-accordion-menu-content-${id}`,\n             accordionMenuModifier\n        );\n\n        if (!isOpen) {\n            return (\n                <div className={subMenuDisplay} style={{display: 'none'}}>\n                    {children}\n                </div>\n            );\n        }\n\n        return (\n            <div className={subMenuDisplay}>\n                {children}\n            </div>\n        );\n    }\n\n    render() {\n        const {isOpen, removeMenuHandler, titleColor,\n                onToggle, iconClass, title, isRemovable\n        } = this.props;\n\n        const subMenuOpen = classnames([\n            'accordion-item__top',\n            'js-test-menu-item-click'], {\n                'accordion-item__top--active': isOpen\n            });\n\n        const iconDirection = classnames('accordion-item__top__arrow', {\n            '+rotate-90 ': !isOpen\n        });\n\n        const topIcon = classnames(\n            'accordion-item__top__icon', {\n                'accordion-item__top__icon_active': isOpen\n            });\n\n        const titleClass = classnames(\n            'js-test-title',\n            'accordion-item__top__title', {\n                'accordion-item__top__title_active': isOpen\n            });\n\n        const closeClass = classnames(\n            'icon-close-thin',\n            'accordion-item__top__close',\n            'js-accordion-menu-item-close'\n        );\n\n        let closeIcon = null;\n        if (isRemovable && typeof removeMenuHandler === 'function') {\n            closeIcon = (\n                <i\n                    className={closeClass}\n                    onClick={this.handleRemoveMenu}\n                ></i>\n            );\n        }\n\n        const titleStyling = {color: titleColor || ''};\n\n        return (\n            <div className=\"accordion-item js-accordion-layer\">\n                <div ref=\"toggle\"\n                    className={subMenuOpen}\n                    onClick={onToggle}\n                >\n                    <span className=\"+float-left\">\n                        <div className={iconDirection}>\n                            <i className=\"icon-angle-down\"></i>\n                        </div>\n\n                        { iconClass ? (\n                            <div className={topIcon}>\n                                <i className={iconClass}\n                                    style={titleStyling}\n                                />\n                            </div>\n                        ) : null }\n\n                        <div\n                            ref=\"title\"\n                            className={titleClass}\n                        >\n                            {title}\n                        </div>\n                    </span>\n                    {closeIcon}\n                </div>\n                {this.renderMenuContent()}\n            </div>\n        );\n    }\n}\n\nAccordionMenuItem.propTypes = {\n    children: PropTypes.element.isRequired,\n    iconClass: PropTypes.string,\n    id: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n    onToggle: PropTypes.func,\n    removeMenuHandler: PropTypes.func,\n    title: PropTypes.string.isRequired,\n    titleColor: PropTypes.string,\n    accordionMenuModifier: PropTypes.string,\n    isRemovable: PropTypes.bool\n};\n\nmodule.exports = AccordionMenuItem;\n"]}