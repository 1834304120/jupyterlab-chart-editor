{"version":3,"sources":["../../../src/components/__tests__/AccordionMenu-test.js"],"names":["describe","render","props","subMenus","title","iconClass","isOpen","content","it","wrapper","expect","state","subMenuStates","toEqual","ref","simulate","id","aaaaaa","bbbbbb","displays","find","map","elem","node","get","style","display","toBe","addNewMenuHandler","jest","fn","length","newMenu","newMenus","setProps","text","submenus","addNewMenuConfig","options","label","value","toBeCalled","header"],"mappings":"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","file":"AccordionMenu-test.js","sourcesContent":["\nimport AccordionMenu, {\n    SimpleAddMenu,\n    DropdownAddMenu} from '@workspace/components/widgets/AccordionMenu';\nimport AccordionMenuItem from '@workspace/components/widgets/AccordionMenuItem';\nimport Dropdown from '@workspace/components/widgets/Dropdown';\nimport React from 'react';\nimport deepAssign from 'assign-deep';\nimport {mount} from 'enzyme';\nimport {append} from 'ramda';\n\ndescribe('<AccordionMenu />', () => {\n\n\n    function render(props = {}) {\n        props = deepAssign({\n            subMenus: [\n                {\n                    title: 'first',\n                    iconClass: 'icon-plotlylogo',\n                    isOpen: false,\n                    content: <div>Some stuff to pass in</div>\n                },\n                {\n                    title: 'second',\n                    iconClass: 'icon-plotlylogo',\n                    isOpen: true,\n                    content: <div>Some stuff to pass in</div>\n                }\n            ]\n        }, props);\n\n        return mount(<AccordionMenu {...props} />);\n    }\n\n    it('collapses when you click on the \"collapse all\" button', () => {\n        const wrapper = render();\n\n        // Check if initial states are rendered correctly\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n\n        /*\n         * Check if clicking 'collapse all' changes the state of all to\n         * Not Active.\n         */\n        wrapper.ref('collapse').simulate('click');\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(false);\n\n    });\n\n    it('string ids: collapses and render open function', () => {\n        const props = {\n            subMenus: [\n                {\n                    title: 'first',\n                    id: 'aaaaaa',\n                    iconClass: 'icon-plotlylogo',\n                    isOpen: true,\n                    content: <div className=\"contentA\">A</div>\n                },\n                {\n                    title: 'second',\n                    id: 'bbbbbb',\n                    iconClass: 'icon-plotlylogo',\n                    isOpen: true,\n                    content: <div className=\"contentB\">B</div>\n                }\n            ]\n        };\n\n        const wrapper = mount(<AccordionMenu {...props} />);\n\n        expect(wrapper.state().subMenuStates.aaaaaa).toEqual(true);\n        expect(wrapper.state().subMenuStates.bbbbbb).toEqual(true);\n\n        let displays = wrapper.find('.accordion-item__content')\n            .map(node => {\n                const elem = node.get(0);\n                if (elem.style) {\n                    return elem.style.display;\n                }\n                return '';\n            });\n\n        expect(displays[0]).toBe('');\n        expect(displays[1]).toBe('');\n\n        wrapper.ref('collapse').simulate('click');\n        expect(wrapper.state().subMenuStates.aaaaaa).toEqual(false);\n        expect(wrapper.state().subMenuStates.bbbbbb).toEqual(false);\n\n        displays = wrapper.find('.accordion-item__content')\n            .map(node => {\n                const elem = node.get(0);\n                return elem.style.display;\n            });\n\n        expect(displays[0]).toBe('none');\n        expect(displays[1]).toBe('none');\n    });\n\n\n    it('presents an AddMenu when AddMenu Handler is provided', () => {\n        const addNewMenuHandler = jest.fn();\n        const wrapper = render({ addNewMenuHandler });\n\n        expect(wrapper.find(SimpleAddMenu).length).toBe(1);\n        expect(wrapper.find(DropdownAddMenu).length).toBe(0);\n    });\n\n    it('updates the sub-menu states after a sub-menu is added', () => {\n        const wrapper = render();\n        const newMenu = wrapper.props().subMenus[1];\n        newMenu.title = 'third';\n        newMenu.isOpen = true;\n\n        const addNewMenuHandler = jest.fn(() => {\n            const newMenus = append(newMenu, wrapper.props().subMenus);\n            wrapper.setProps({ subMenus: newMenus });\n        });\n\n        wrapper.setProps({ addNewMenuHandler });\n        expect(wrapper.props().subMenus.length).toEqual(2);\n        wrapper.find('.js-test-add-new-layer').simulate('click');\n        expect(wrapper.props().subMenus.length).toEqual(3);\n        expect(wrapper.state().subMenuStates[2]).toEqual(true);\n    });\n\n    it('should retain state of previous sub-menu states', () => {\n        const wrapper = render();\n        const newMenu = wrapper.props().subMenus[1];\n        newMenu.title = 'third';\n        newMenu.isOpen = true;\n\n        const addNewMenuHandler = jest.fn(() => {\n            const newMenus = append(newMenu, wrapper.props().subMenus);\n            wrapper.setProps({ subMenus: newMenus });\n        });\n\n        wrapper.setProps({ addNewMenuHandler });\n\n        // Collapse first two sub-menus\n        wrapper.find('.js-test-collapse-text').simulate('click');\n        wrapper.find('.js-test-add-new-layer').simulate('click');\n\n        expect(wrapper.state().subMenuStates[0]).toEqual(false);\n        expect(wrapper.state().subMenuStates[1]).toEqual(false);\n        expect(wrapper.state().subMenuStates[2]).toEqual(true);\n\n    });\n\n    it('should show \"Expand All\" after collapsing sub-menus.', () => {\n        const wrapper = render();\n        // Check if initial states are rendered correctly\n\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n        // Check that button says 'Collapse All'\n        expect(wrapper.find('.js-test-collapse-text').text()).toEqual('Collapse All');\n\n        // Collapse all sub-menus\n        wrapper.find('.js-test-collapse-text').simulate('click');\n\n        // Check that button says 'Expand all'\n        expect(wrapper.find('.js-test-collapse-text').text()).toEqual('Expand All');\n    });\n\n    it('should expand all sub-menus if the expand-all button is pressed.', () => {\n        const wrapper = render();\n        // Check if initial states are rendered correctly\n\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n\n        // Collapse all sub-menus\n        wrapper.find('.js-test-collapse-text').simulate('click');\n\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(false);\n\n        // Expand all sub-menus\n        wrapper.find('.js-test-collapse-text').simulate('click');\n\n        // Check if sub-menus are all expanded.\n        expect(wrapper.state().subMenuStates['0']).toEqual(true);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n    });\n\n    it('should update child props given the sub-menu states.', () => {\n        const wrapper = render();\n\n        // Check if initial states are rendered correctly\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n\n        const submenus = wrapper.find(AccordionMenuItem);\n\n        expect(submenus.get(0).props.isOpen).toEqual(false);\n        expect(submenus.get(1).props.isOpen).toEqual(true);\n\n        wrapper.find('.js-test-collapse-text').simulate('click');\n\n        expect(wrapper.state().subMenuStates['0']).toEqual(false);\n        expect(wrapper.state().subMenuStates['1']).toEqual(false);\n        expect(submenus.get(0).props.isOpen).toEqual(false);\n        expect(submenus.get(1).props.isOpen).toEqual(false);\n\n        wrapper.find('.js-test-collapse-text').simulate('click');\n\n        expect(wrapper.state().subMenuStates['0']).toEqual(true);\n        expect(wrapper.state().subMenuStates['1']).toEqual(true);\n        expect(submenus.get(0).props.isOpen).toEqual(true);\n        expect(submenus.get(1).props.isOpen).toEqual(true);\n    });\n\n    it('does not present an AddMenu when AddMenu Handler absent', () => {\n        const wrapper = render();\n\n        expect(wrapper.find(SimpleAddMenu).length).toBe(0);\n        expect(wrapper.find(DropdownAddMenu).length).toBe(0);\n    });\n\n    it('builds a newMenu dropdown when passed a config', () => {\n        const addNewMenuHandler = jest.fn();\n        const addNewMenuConfig = {\n            title: 'Hodor\\'s Menu',\n            options: [{label: 'HodorHodor', value: 'hodorhodor'}]\n        };\n\n        const wrapper = render({\n            addNewMenuHandler, addNewMenuConfig\n        });\n\n        expect(wrapper.find(DropdownAddMenu).length).toBe(1);\n    });\n\n    it('fires addNewMenuHandler on addNewMenu button click', () => {\n\n        const addNewMenuHandler = jest.fn();\n        const wrapper = render({ addNewMenuHandler });\n\n        wrapper.find(SimpleAddMenu).simulate('click');\n        expect(addNewMenuHandler).toBeCalled();\n    });\n\n    it('displays a header when a header was passed as prop', () => {\n        const header = (<div id=\"testHeader\"></div>);\n        const wrapper = render({header});\n        expect(wrapper.find('#testHeader').length).toBe(1);\n    });\n\n\n});\n"]}