{"version":3,"sources":["../../src/components/ConfirmBox.js"],"names":["baseConfirmBoxClassName","baseConfirmBoxWrapperClassName","headerClassName","cancelBtnClassName","baseConfirmBtnClassName","alternativeBtnClassName","propTypes","message","string","isRequired","onConfirm","func","onCancel","cancelText","confirmText","headerText","alternativeText","className","wrapperClassName","dangerous","bool","dangerouslySetMessageInnerHtml","hideCancel","onAlternative","showAlternative","defaultProps","ConfirmBox","props","Error","confirmBoxClassName","confirmBoxWrapperClassName","confirmBtnClassName","msg","innerHTML","__html","cancelBtn","confirmBtn","alternativeBtn"],"mappings":"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","file":"ConfirmBox.js","sourcesContent":["/**\n * ConfirmBox A generic div offering a 'confirm' and 'cancel' button with some\n * text that can be passed in with props.\n *\n * The main content is wrapped in another div to add additional modal-styling\n * options. Layout should be set via `className` and `wrapperClassName`.\n *\n * @module\n */\nimport React, {PropTypes} from 'react';\nimport classnames from 'classnames';\n\nimport {_} from '@common/utils/i18n';\n\n// Just pulling some styling constants out of our render method.\nconst baseConfirmBoxClassName = classnames(\n    'js-confirm-box',\n    '+text-center'\n);\nconst baseConfirmBoxWrapperClassName = classnames(\n    'js-confirm-box__wrapper'\n);\nconst headerClassName = classnames(\n    'js-confirm-box__header',\n    'confirmbox__title'\n);\nconst cancelBtnClassName = classnames(\n    'js-confirm-box__cancel',\n    'btnbase',\n    'btn--default',\n    '+push-half-sides'\n);\nconst baseConfirmBtnClassName = classnames(\n    'js-confirm-box__confirm',\n    'btnbase',\n    'btn--primary',\n    '+push-half-sides'\n);\nconst alternativeBtnClassName = classnames(\n    'js-confirm-box__alternative',\n    'btnbase',\n    'btn--primary',\n    '+push-half-sides'\n);\n\nconst propTypes = {\n\n    // Required props\n    message: PropTypes.string.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n\n    // Optional text\n    cancelText: PropTypes.string,\n    confirmText: PropTypes.string,\n    headerText: PropTypes.string,\n    alternativeText: PropTypes.string,\n\n    /*\n     * Optional classes & styling. You can use className and wrapperClassName\n     * to create PopStore-ready modals or custom, embedded modals.\n     */\n    className: PropTypes.string,\n    wrapperClassName: PropTypes.string,\n\n    // Optional functionality\n    dangerous: PropTypes.bool,\n    dangerouslySetMessageInnerHtml: PropTypes.bool,\n    hideCancel: PropTypes.bool,\n    onAlternative: PropTypes.func,\n    showAlternative: PropTypes.bool\n\n};\n\nconst defaultProps = {\n\n    // Optional text\n    cancelText: _('Cancel'),\n    confirmText: _('Confirm'),\n    headerText: _('Confirm?'),\n    alternativeText: _('Alternative'),\n\n    // Optional functionality\n    dangerous: false,\n    dangerouslySetMessageInnerHtml: false,\n    hideCancel: false,\n    showAlternative: false\n\n};\n\nconst ConfirmBox = props => {\n\n    const {\n        alternativeText, cancelText, className, dangerouslySetMessageInnerHtml,\n        confirmText, dangerous, headerText, hideCancel, message, onAlternative,\n        onCancel, onConfirm, showAlternative, wrapperClassName\n    } = props;\n\n    if (showAlternative && !onAlternative) {\n        throw new Error('Missing onAlternative function.');\n    }\n\n    const confirmBoxClassName = classnames(baseConfirmBoxClassName, className);\n    const confirmBoxWrapperClassName = classnames(\n        baseConfirmBoxWrapperClassName,\n        wrapperClassName\n    );\n    const confirmBtnClassName = classnames(\n        baseConfirmBtnClassName,\n        {'btn--danger': dangerous}\n    );\n\n    let msg;\n    if (dangerouslySetMessageInnerHtml) {\n        const innerHTML = {__html: message};\n        msg = (\n            <p\n                className=\"confirmbox__message\"\n                dangerouslySetInnerHTML={innerHTML}\n            />\n        )\n    } else {\n        msg = <p className=\"confirmbox__message\">{message}</p>\n    }\n\n    const cancelBtn = (\n        <button className={cancelBtnClassName} onClick={onCancel}>\n            {cancelText}\n        </button>\n    );\n\n    const confirmBtn = (\n        <button className={confirmBtnClassName} onClick={onConfirm}>\n            {confirmText}\n        </button>\n    );\n\n    const alternativeBtn = (\n        <button className={alternativeBtnClassName} onClick={onAlternative}>\n            {alternativeText}\n        </button>\n    );\n\n    return (\n\n        <div className={confirmBoxWrapperClassName}>\n\n            <div className={confirmBoxClassName}>\n\n                <h2 className={headerClassName}>{headerText}</h2>\n\n                {msg}\n\n                <span>\n                    {hideCancel ? null : cancelBtn}\n                    {showAlternative ? alternativeBtn : null}\n                    {confirmBtn}\n                </span>\n\n            </div>\n\n        </div>\n\n    );\n\n};\n\nConfirmBox.propTypes = propTypes;\n\nConfirmBox.defaultProps = defaultProps;\n\nexport default ConfirmBox;\n"]}