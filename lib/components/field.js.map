{"version":3,"sources":["../../src/components/Field.js"],"names":["SRC_ATTR_PATTERN","Field","props","context","_index","traceIndex","_data","data","_fullData","fullData","_property","attr","_fullProperty","updatePlot","bind","_contextUpdate","handleUpdate","dataSources","dataSourceNames","state","value","fullValue","nextProps","nextContext","setState","get","newValue","set","gd","test","contextTypes","array","layout","object","fullLayout","func","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,MAAzB;;IAEMC,K;;;AACJ,iBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,8GACpBD,KADoB;;AAG1B,UAAKE,MAAL,GAAcD,QAAQE,UAAtB;AACA,UAAKC,KAAL,GAAaH,QAAQI,IAAR,CAAa,MAAKH,MAAlB,CAAb;AACA,UAAKI,SAAL,GAAiBL,QAAQM,QAAR,CAAiB,MAAKL,MAAtB,CAAjB;AACA,UAAKM,SAAL,GAAiB,+BAAe,MAAKJ,KAApB,EAA2B,MAAKJ,KAAL,CAAWS,IAAtC,CAAjB;AACA,UAAKC,aAAL,GAAqB,+BAAe,MAAKJ,SAApB,EAA+B,MAAKN,KAAL,CAAWS,IAA1C,CAArB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,UAAKC,cAAL,GAAsBZ,QAAQa,YAA9B;AACA,UAAKC,WAAL,GAAmBd,QAAQc,WAA3B;AACA,UAAKC,eAAL,GAAuBf,QAAQe,eAA/B;;AAEA,UAAKC,KAAL,GAAa;AACXC,aAAO,MAAKC;AADD,KAAb;AAb0B;AAgB3B;;;;8CAEyBC,S,EAAWC,W,EAAa;AAChD,WAAKnB,MAAL,GAAcmB,YAAYlB,UAA1B;AACA,WAAKU,cAAL,GAAsBQ,YAAYP,YAAlC;;AAEA,UAAIO,YAAYhB,IAAhB,EAAsB;AACpB,aAAKD,KAAL,GAAaiB,YAAYhB,IAAZ,CAAiB,KAAKH,MAAtB,CAAb;AACD,OAFD,MAEO;AACL,aAAKE,KAAL,GAAa,EAAb;AACD;;AAED,UAAIiB,YAAYd,QAAhB,EAA0B;AACxB,aAAKD,SAAL,GAAiBe,YAAYd,QAAZ,CAAqB,KAAKL,MAA1B,CAAjB;AACD,OAFD,MAEO;AACL,aAAKI,SAAL,GAAiB,EAAjB;AACD;AACF;;;+BAEUY,K,EAAO;AAChB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKI,QAAL,CAAc,EAAEJ,OAAOA,KAAT,EAAd;AACA,WAAKL,cAAL,IAAuB,KAAKA,cAAL,CAAoB,KAAKb,KAAL,CAAWS,IAA/B,EAAqC,KAAKS,KAA1C,CAAvB;AACD;;;wBAEW;AACV,aAAO,KAAKV,SAAL,CAAee,GAAf,EAAP;AACD,K;sBAUSC,Q,EAAU;AAClB,WAAKhB,SAAL,CAAeiB,GAAf,CAAmBD,QAAnB;;AAEA,WAAKX,cAAL,CAAoBa,EAApB,EAAwB,KAAKtB,KAA7B,EAAoC,KAAKJ,KAAL,CAAWS,IAA/C,EAAqDe,QAArD;AACD;;;wBAZe;AACd,UAAI1B,iBAAiB6B,IAAjB,CAAsB,KAAK3B,KAAL,CAAWS,IAAjC,CAAJ,EAA4C;AAC1C,eAAO,KAAKD,SAAL,CAAee,GAAf,EAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKb,aAAL,CAAmBa,GAAnB,EAAP;AACD;AACF;;;;;;AASHxB,MAAM6B,YAAN,GAAqB;AACnBvB,QAAM,oBAAUwB,KADG;AAEnBtB,YAAU,oBAAUsB,KAFD;AAGnBC,UAAQ,oBAAUC,MAHC;AAInBC,cAAY,oBAAUD,MAJH;AAKnBjB,gBAAc,oBAAUmB,IALL;AAMnB9B,cAAY,oBAAU+B;AANH,CAArB;;kBASenC,K","file":"Field.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport nestedProperty from \"plotly.js/src/lib/nested_property\";\n\nconst SRC_ATTR_PATTERN = /src$/;\n\nclass Field extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this._index = context.traceIndex;\n    this._data = context.data[this._index];\n    this._fullData = context.fullData[this._index];\n    this._property = nestedProperty(this._data, this.props.attr);\n    this._fullProperty = nestedProperty(this._fullData, this.props.attr);\n    this.updatePlot = this.updatePlot.bind(this);\n    this._contextUpdate = context.handleUpdate;\n    this.dataSources = context.dataSources;\n    this.dataSourceNames = context.dataSourceNames;\n\n    this.state = {\n      value: this.fullValue,\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this._index = nextContext.traceIndex;\n    this._contextUpdate = nextContext.handleUpdate;\n\n    if (nextContext.data) {\n      this._data = nextContext.data[this._index];\n    } else {\n      this._data = [];\n    }\n\n    if (nextContext.fullData) {\n      this._fullData = nextContext.fullData[this._index];\n    } else {\n      this._fullData = [];\n    }\n  }\n\n  updatePlot(value) {\n    this.value = value;\n    this.setState({ value: value });\n    this._contextUpdate && this._contextUpdate(this.props.attr, this.value);\n  }\n\n  get value() {\n    return this._property.get();\n  }\n\n  get fullValue() {\n    if (SRC_ATTR_PATTERN.test(this.props.attr)) {\n      return this._property.get();\n    } else {\n      return this._fullProperty.get();\n    }\n  }\n\n  set value(newValue) {\n    this._property.set(newValue);\n\n    this._contextUpdate(gd, this._data, this.props.attr, newValue);\n  }\n}\n\nField.contextTypes = {\n  data: PropTypes.array,\n  fullData: PropTypes.array,\n  layout: PropTypes.object,\n  fullLayout: PropTypes.object,\n  handleUpdate: PropTypes.func,\n  traceIndex: PropTypes.number,\n};\n\nexport default Field;\n"]}