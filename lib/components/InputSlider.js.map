{"version":3,"sources":["../../src/components/InputSlider.js"],"names":["InputSlider","props","state","value","onTextChange","bind","onUpdate","nextProps","setState","newValue","step","min","max","onChange","textValue","propTypes","PropTypes","oneOfType","number","string","func","isRequired","defaultProps","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAOA;;;;IAIMA,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAEf,cAAKC,KAAL,GAAa,EAAEC,OAAOF,MAAME,KAAf,EAAb;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,cAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,OAAhB;AAJe;AAKlB;;;;kDAEyBE,S,EAAW;AACjC;AACA,gBAAIA,UAAUJ,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACtC,qBAAKK,QAAL,CAAc;AACVL,2BAAOI,UAAUJ;AADP,iBAAd;AAGH;AACJ;;;qCAEYM,Q,EAAU;AACnB,gBAAMN,QAAQ,yBAAYM,QAAZ,CAAd;AACA,iBAAKD,QAAL,CAAc,EAAEL,YAAF,EAAd;AACH;;;iCAEQM,Q,EAAU;AAAA,yBACsB,KAAKR,KAD3B;AAAA,gBACPS,IADO,UACPA,IADO;AAAA,gBACDC,GADC,UACDA,GADC;AAAA,gBACIC,GADJ,UACIA,GADJ;AAAA,gBACSC,QADT,UACSA,QADT;;;AAGf,gBAAIV,QAAQ,yBAAYM,QAAZ,CAAZ;AACAN,oBAAQ,qBAAQA,KAAR,EAAeO,IAAf,CAAR;AACAP,oBAAQ,8BAAiBA,KAAjB,EAAwBQ,GAAxB,EAA6BC,GAA7B,CAAR;;AAEA,iBAAKJ,QAAL,CAAc,EAAEL,YAAF,EAAd;AACAU,qBAASV,KAAT;AACH;;;iCAEQ;AACL,gBAAMW,YAAY,4BAAe,KAAKZ,KAAL,CAAWC,KAA1B,CAAlB;AADK,0BAEuC,KAAKF,KAF5C;AAAA,gBAEGY,QAFH,WAEGA,QAFH;AAAA,gBAEaF,GAFb,WAEaA,GAFb;AAAA,gBAEkBC,GAFlB,WAEkBA,GAFlB;AAAA,gBAEuBF,IAFvB,WAEuBA,IAFvB;AAAA,gBAE6BP,KAF7B,WAE6BA,KAF7B;;;AAIL,mBACI;AAAA;AAAA;AACI;AACI,yBAAI,YADR;AAEI,+BAAU,eAFd;AAGI,0BAAMW,SAHV;AAII,0BAAK,MAJT;AAKI,8BAAU,KAAKV,YALnB;AAMI,8BAAU,KAAKE;AANnB,kBADJ;AASI;AAAA;AAAA,sBAAK,WAAU,gBAAf;AACI;AACI,+BAAOH,KADX;AAEI,kCAAUU,QAFd;AAGI,6BAAKF,GAHT;AAII,6BAAKC,GAJT;AAKI,8BAAMF,IALV;AAMI,8BAAM,IANV;AAOI,qCAAa;AAPjB;AADJ;AATJ,aADJ;AAuBH;;;;;;AAGLV,YAAYe,SAAZ,GAAwB;AACpBZ,WAAO,gBAAMa,SAAN,CAAgBC,SAAhB,CAA0B,CAC7B,iBAAUC,MADmB,EAE7B,iBAAUC,MAFmB,CAA1B,CADa;AAKpBN,cAAU,iBAAUO,IAAV,CAAeC,UALL;AAMpBV,SAAK,iBAAUO,MANK;AAOpBN,SAAK,iBAAUM,MAPK;AAQpBR,UAAM,iBAAUQ;AARI,CAAxB;;AAWAlB,YAAYsB,YAAZ,GAA2B;AACvBnB,WAAO,EADgB;AAEvBQ,SAAK,CAFkB;AAGvBC,SAAK,GAHkB;AAIvBF,UAAM;AAJiB,CAA3B;;AAOAa,OAAOC,OAAP,GAAiBxB,WAAjB","file":"InputSlider.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport EditableText from '@workspace/components/widgets/EditableText';\nimport Slider from '@workspace/components/widgets/Slider';\nimport {\n    keepWithinMaxMin,\n    getStep,\n    stringToInt,\n    numberToString\n} from '@workspace/utils/number';\n\n/**\n * Input slider\n */\n\nclass InputSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: props.value };\n        this.onTextChange = this.onTextChange.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // Updates the value to the graph's actual value\n        if (nextProps.value !== this.state.value) {\n            this.setState({\n                value: nextProps.value\n            });\n        }\n    }\n\n    onTextChange(newValue) {\n        const value = stringToInt(newValue);\n        this.setState({ value });\n    }\n\n    onUpdate(newValue) {\n        const { step, min, max, onChange } = this.props;\n\n        let value = stringToInt(newValue);\n        value = getStep(value, step);\n        value = keepWithinMaxMin(value, min, max);\n\n        this.setState({ value });\n        onChange(value);\n    }\n\n    render() {\n        const textValue = numberToString(this.state.value);\n        const { onChange, min, max, step, value } = this.props;\n\n        return (\n            <div>\n                <EditableText\n                    ref=\"sliderText\"\n                    className=\"slider__input\"\n                    text={textValue}\n                    type=\"text\"\n                    onChange={this.onTextChange}\n                    onUpdate={this.onUpdate}\n                />\n                <div className=\"slider__widget\">\n                    <Slider\n                        value={value}\n                        onChange={onChange}\n                        min={min}\n                        max={max}\n                        step={step}\n                        fill={true}\n                        orientation={'horizontal'}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nInputSlider.propTypes = {\n    value: React.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    onChange: PropTypes.func.isRequired,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number\n};\n\nInputSlider.defaultProps = {\n    value: 50,\n    min: 0,\n    max: 100,\n    step: 1\n};\n\nmodule.exports = InputSlider;\n"]}