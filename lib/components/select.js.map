{"version":3,"sources":["../../src/components/Select.js"],"names":["Select","attrs","i","value","label","options","props","slice","length","opt","hasBlank","unshift","fullValue","updatePlot","e","target","map","renderOption"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,M;;;;;;;;;;;iCACSC,K,EAAOC,C,EAAG;AACrB,aACE;AAAA;AAAA,UAAQ,iBAAeA,CAAvB,EAA4B,OAAOD,MAAME,KAAzC;AACGF,cAAMG;AADT,OADF;AAKD;;;kCAEa;AAAA;;AACZ,UAAIC,UAAU,CAAC,KAAKC,KAAL,CAAWD,OAAX,IAAsB,EAAvB,EAA2BE,KAA3B,EAAd;;AAEA,WAAK,IAAIL,IAAI,CAAb,EAAgBA,IAAIG,QAAQG,MAA5B,EAAoCN,GAApC,EAAyC;AACvC,YAAIO,MAAMJ,QAAQH,CAAR,CAAV;AACA,YAAI,QAAOO,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3BJ,kBAAQH,CAAR,IAAa;AACXE,mBAAOK,GADI;AAEXN,mBAAOM;AAFI,WAAb;AAID;AACF;;AAED,UAAI,KAAKH,KAAL,CAAWI,QAAf,EAAyB;AACvBL,gBAAQM,OAAR,CAAgB,EAAEP,OAAO,EAAT,EAAaD,OAAO,EAApB,EAAhB;AACD;;AAED,aACE;AAAA;AAAA,UAAO,WAAW,cAAI,OAAJ,CAAlB;AACE;AAAA;AAAA,YAAM,WAAW,cAAI,OAAJ,EAAa,OAAb,CAAjB;AAAyC,eAAKG,KAAL,CAAWF;AAApD,SADF;AAGE;AAAA;AAAA;AACE,mBAAO,KAAKQ,SADd;AAEE,uBAAW,cAAI,OAAJ,EAAa,SAAb,CAFb;AAGE,sBAAU;AAAA,qBAAK,OAAKC,UAAL,CAAgBC,EAAEC,MAAF,CAASZ,KAAzB,CAAL;AAAA;AAHZ;AAKGE,kBAAQW,GAAR,CAAY,KAAKC,YAAjB;AALH;AAHF,OADF;AAaD;;;;;;kBAGYjB,M","file":"Select.js","sourcesContent":["import React, { Component } from \"react\";\nimport FieldBase from \"./FieldBase\";\nimport { bem } from \"../lib\";\n\nclass Select extends FieldBase {\n  renderOption(attrs, i) {\n    return (\n      <option key={`option-${i}`} value={attrs.value}>\n        {attrs.label}\n      </option>\n    );\n  }\n\n  renderField() {\n    var options = (this.props.options || []).slice();\n\n    for (let i = 0; i < options.length; i++) {\n      let opt = options[i];\n      if (typeof opt !== \"object\") {\n        options[i] = {\n          label: opt,\n          value: opt,\n        };\n      }\n    }\n\n    if (this.props.hasBlank) {\n      options.unshift({ label: \"\", value: \"\" });\n    }\n\n    return (\n      <label className={bem(\"field\")}>\n        <span className={bem(\"field\", \"title\")}>{this.props.label}</span>\n\n        <select\n          value={this.fullValue}\n          className={bem(\"field\", \"control\")}\n          onChange={e => this.updatePlot(e.target.value)}\n        >\n          {options.map(this.renderOption)}\n        </select>\n      </label>\n    );\n  }\n}\n\nexport default Select;\n"]}