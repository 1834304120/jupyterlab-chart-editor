{"version":3,"sources":["../src/common.js"],"names":["bem","_","clamp","block","element","modifiers","i","modifier","out","c","baseClass","Array","isArray","length","push","join","dictionaries","locale","key","dict","hasOwnProperty","value","min","max","Math"],"mappings":";;;;;QAYgBA,G,GAAAA,G;QAmCAC,C,GAAAA,C;QASAC,K,GAAAA,K;;AAxDhB;;;;;;AAEA;;;;;;;;;;AAUO,SAASF,GAAT,CAAaG,KAAb,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwC;AAC7C,MAAIC,CAAJ,EAAOC,QAAP;AACA,MAAIC,MAAM,EAAV;AACA,MAAIC,IAAI,oBAAUC,SAAlB;;AAEA,MAAIC,MAAMC,OAAN,CAAcT,KAAd,CAAJ,EAA0B;AACxBE,gBAAYF,KAAZ;AACAA,YAAQ,IAAR;AACAC,cAAU,IAAV;AACD,GAJD,MAIO,IAAIO,MAAMC,OAAN,CAAcR,OAAd,CAAJ,EAA4B;AACjCC,gBAAYD,OAAZ;AACAA,cAAU,IAAV;AACD;;AAED,MAAID,SAASA,MAAMU,MAAnB,EAA2B;AACzBJ,SAAK,OAAON,KAAZ;AACD;;AAED,MAAIC,WAAWA,QAAQS,MAAvB,EAA+B;AAC7BJ,SAAK,OAAOL,OAAZ;AACD;;AAEDI,MAAIM,IAAJ,CAASL,CAAT;AACA,MAAIJ,SAAJ,EAAe;AACb,SAAKC,IAAI,CAAT,EAAYA,IAAID,UAAUQ,MAA1B,EAAkCP,GAAlC,EAAuC;AACrCC,iBAAWF,UAAUC,CAAV,CAAX;AACA,UAAIC,YAAYA,SAASM,MAAzB,EAAiC;AAC/BL,YAAIM,IAAJ,CAASL,IAAI,IAAJ,GAAWF,QAApB;AACD;AACF;AACF;;AAED,SAAOC,IAAIO,IAAJ,CAAS,GAAT,CAAP;AACD;;AAEM,SAASd,CAAT,CAAWe,YAAX,EAAyBC,MAAzB,EAAiCC,GAAjC,EAAsC;AAC3C,MAAMC,OAAOH,aAAaC,MAAb,CAAb;AACA,MAAIE,QAAQA,KAAKC,cAAL,CAAoBF,GAApB,CAAZ,EAAsC;AACpC,WAAOC,KAAKD,GAAL,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,GAAP;AACD;AACF;;AAEM,SAAShB,KAAT,CAAemB,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AACrC,SAAOC,KAAKD,GAAL,CAASD,GAAT,EAAcE,KAAKF,GAAL,CAASC,GAAT,EAAcF,KAAd,CAAd,CAAP;AACD","file":"common.js","sourcesContent":["import constants from \"./constants\";\n\n/*\n* BEM helper\n*\n* bem()                       => 'plotly-editor'\n* bem('foo')                  => 'plotly-editor__foo'\n* bem('foo', 'bar')           => 'plotly-editor__foo__bar'\n* bem('foo', ['mod'])         => 'plotly-editor__foo plotly-editor__foo--mod'\n* bem('foo', 'bar', ['mod'])  => 'plotly-editor__foo__bar plotly-editor__foo__bar--mod'\n* bem('foo', ['mod1', mod2']) => 'plotly-editor__foo plotly-editor__foo--mod1 plotly-editor__foo--mod2'\n*/\nexport function bem(block, element, modifiers) {\n  var i, modifier;\n  var out = [];\n  var c = constants.baseClass;\n\n  if (Array.isArray(block)) {\n    modifiers = block;\n    block = null;\n    element = null;\n  } else if (Array.isArray(element)) {\n    modifiers = element;\n    element = null;\n  }\n\n  if (block && block.length) {\n    c += \"__\" + block;\n  }\n\n  if (element && element.length) {\n    c += \"__\" + element;\n  }\n\n  out.push(c);\n  if (modifiers) {\n    for (i = 0; i < modifiers.length; i++) {\n      modifier = modifiers[i];\n      if (modifier && modifier.length) {\n        out.push(c + \"--\" + modifier);\n      }\n    }\n  }\n\n  return out.join(\" \");\n}\n\nexport function _(dictionaries, locale, key) {\n  const dict = dictionaries[locale];\n  if (dict && dict.hasOwnProperty(key)) {\n    return dict[key];\n  } else {\n    return key;\n  }\n}\n\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n"]}